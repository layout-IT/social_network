{"version":3,"sources":["components/Profile/Myposts/Post/Post.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.tsx","components/Nav/Nav.tsx","components/Profile/Myposts/Post/Post.tsx","components/redux/state.tsx","components/Profile/Myposts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogsItem.tsx","components/Dialogs/Dialogs.tsx","App.tsx","index.tsx","components/Nav/Nav.module.css","components/Dialogs/Dialogs.module.css"],"names":["module","exports","Header","className","s","header","src","Nav","nav","item","to","activeClassName","active","Post","props","wrapper","message","like","store","_state","profilePage","posts","id","title","newPostText","dialogsPage","messages","dialogs","name","sideBar","getstate","this","_collsubscriber","state","subscribe","observer","dispatch","action","type","newPost","Date","getTime","push","newText","rerenderIntireTree","MyPosts","postsElement","map","p","newPostElement","React","createRef","onChange","current","text","value","ref","onClick","ProfileInfo","picture","alt","Profile","DialigItem","dialog","Message","Dialogs","dialogsElement","d","messagesElements","m","dialogs__items","App","path","render","ReactDOM","bind","document","getElementById"],"mappings":"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","file":"static/js/main.fdd85a5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1xhAm\",\"wrapper\":\"Post_wrapper__lwSv7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__fHWjq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contant\":\"ProfileInfo_contant__2QIyq\",\"picture\":\"ProfileInfo_picture__13Qxy\"};","import React from 'react';\r\nimport s from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return <header className={s.header}>\r\n        <img src={'https://www.markakimlik.com/wp-content/uploads/2020/09/Markalasma-Surecinde-Logo-ve-Renk-Duzeni.jpg'}/>\r\n    </header>\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Nav.module.css'\r\n\r\nconst Nav = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to='/Dialogs' activeClassName={s.active}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}><a>News</a></div>\r\n        <div className={s.item}><a>Music</a></div>\r\n        <div className={s.item}><a>Settings</a></div>\r\n    </nav>\r\n}\r\n\r\nexport default Nav","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\n\r\n\r\nconst Post = (props: any) => {\r\n    return <div className={s.wrapper}>\r\n        <div className={s.item}>\r\n            <img src={'https://ru.fishki.net/picsw/112009/18/bonus/face/face_photo_032.jpg'}/>\r\n            {props.message}\r\n        </div>\r\n        <span >like {props.like}</span>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Post\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {PostType, StateType} from \"./types\";\r\nimport {rerenderIntireTree} from \"../../index\";\r\n\r\n\r\n// const ADD_POST = 'ADD-Post'\r\n// const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\n\r\nexport type StoreType = {\r\n    _state: StateType\r\n    getstate: () => StateType\r\n    _collsubscriber: (state: StateType) => void\r\n    subscribe: (observer: () => void) => void\r\n    dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\nexport type AddPostActionType = ReturnType<typeof addPostActionCreator>\r\n\r\nexport type UpdateNewPostActionCreatorTYpe = ReturnType<typeof updateNewPostActionCreator>\r\n\r\nexport type ActionsTypes = AddPostActionType | UpdateNewPostActionCreatorTYpe\r\n\r\nlet store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            posts:\r\n                [\r\n                    {id: 1, title: 'hi, how are you', like: 12},\r\n                    {id: 2, title: 'it`s my first post', like: 15}\r\n                ],\r\n            newPostText: 'it.comm'\r\n        },\r\n        dialogsPage: {\r\n            messages: [\r\n                {id: 1, title: 'hi'},\r\n                {id: 2, title: 'How is yor it kamasutra?'},\r\n                {id: 3, title: 'YoO'}\r\n            ],\r\n            dialogs: [\r\n                {id: 1, name: 'Petr'},\r\n                {id: 2, name: 'Sasha'},\r\n                {id: 3, name: 'Oleg'},\r\n                {id: 4, name: 'Victor'}\r\n            ],\r\n\r\n\r\n        },\r\n        sideBar: {}\r\n\r\n    },\r\n    getstate() {\r\n        return this._state\r\n    },\r\n    _collsubscriber(state: StateType) {\r\n\r\n    },\r\n\r\n    subscribe(observer: () => void) {\r\n        store._collsubscriber = observer\r\n    },\r\n    dispatch(action: any) {\r\n        if (action.type === 'ADD-POST') {\r\n            let newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                title: action.newPostText,\r\n                like: 0\r\n\r\n            };\r\n            this._state.profilePage.posts.push(newPost);\r\n            this._state.profilePage.newPostText = '';\r\n            this._collsubscriber(this._state)\r\n\r\n        } else if (action.type === 'UPDATE-NEW-TEXT') {\r\n            this._state.profilePage.newPostText = action.newText;\r\n            this._collsubscriber(this._state)\r\n        }\r\n        rerenderIntireTree(this.getstate())\r\n    },\r\n}\r\nexport const addPostActionCreator = (newPostText : string) => {\r\n    return {\r\n        type : 'ADD-POST',\r\n        newPostText\r\n    } as const\r\n}\r\n\r\nexport const updateNewPostActionCreator = (newText: string)=> {\r\n    return{\r\n        type: 'UPDATE-NEW-TEXT',\r\n        newText\r\n    } as const\r\n}\r\n\r\n\r\nexport default store\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {PostType} from \"../../redux/types\";\r\nimport {addPostActionCreator, updateNewPostActionCreator} from \"../../redux/state\";\r\n\r\n\r\n\r\n\r\n\r\ntype MyPostsType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    dispatch:any\r\n}\r\n\r\n\r\n\r\nconst MyPosts = (props: MyPostsType) => {\r\n\r\n    let postsElement = props.posts.map((p) => <Post key={p.id}  message={p.title} like={p.like}/>);\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    let addPost = () => {\r\n        props.dispatch(addPostActionCreator(props.newPostText))\r\n    }\r\n    let onPostChange = () => {\r\n\r\n        if (newPostElement.current !== null) {\r\n            let text = newPostElement.current.value\r\n            let action = updateNewPostActionCreator(text)\r\n            props.dispatch(action)\r\n\r\n        }\r\n\r\n    }\r\n    return <div>\r\n        <div>\r\n            My posts\r\n        </div>\r\n        <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\r\n        <button onClick={addPost}>Add post </button>\r\n        <div className={s.posts}>\r\n            {postsElement}\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport default MyPosts","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\n\r\nconst ProfileInfo = () => {\r\n    return <div>\r\n        <div className={s.picture}>\r\n            <img src=\"https://ru-wallp.com/w/2010/5/26/1398401274727650902.png\" alt=\"ptcture\"/>\r\n        </div>\r\n        <div>\r\n            ava + description\r\n        </div>\r\n    </div>\r\n\r\n}\r\n    export default ProfileInfo","import React from 'react';\r\nimport MyPosts from \"./Myposts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ProfilePageType} from \"../redux/types\";\r\nimport {ActionsTypes} from \"../redux/state\";\r\n\r\ntype profileType ={\r\n    profilePage:ProfilePageType\r\n    dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\n\r\n\r\nconst Profile = (props: profileType) => {\r\n\r\n\r\n    return <div>\r\n        <ProfileInfo/>\r\n        <MyPosts posts={props.profilePage.posts}\r\n                 newPostText ={props.profilePage.newPostText}\r\n                 dispatch={props.dispatch}\r\n\r\n        />\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\nfunction DialigItem(props: DialigItemType) {\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={'/dealogs/' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\ntype DialigItemType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport default DialigItem","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialigItem from \"./DialogItem/DialogsItem\";\r\nimport {DialogsType, MessagesType} from '../redux/types';\r\n\r\n\r\n\r\n\r\nfunction Message(props: MessageType) {\r\n    return <div className={s.message}>{props.title}</div>\r\n}\r\n\r\ntype MessageType = {\r\n    title: string\r\n}\r\n\r\n// type DialogsPropsType = {\r\n//     messages: Array<MessagesType>\r\n//     dialogs: Array<DialogsType>\r\n// }\r\n\r\ntype DialogsPropsType={\r\n    messages: Array<MessagesType>\r\n    dialogs: Array<DialogsType>\r\n}\r\n\r\n\r\n\r\nexport function Dialogs(props:DialogsPropsType ) {\r\ndebugger\r\n    let dialogsElement = props.dialogs.map( d => <DialigItem name= {d.name}  id= {d.id}  /> )\r\n    let messagesElements = props.messages.map( m => <Message title={m.title}/>)\r\n\r\n\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogs__items}>\r\n            {dialogsElement}\r\n\r\n        </div>\r\n        <div className={s.messages}>\r\n            {messagesElements}\r\n\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Nav from \"./components/Nav/Nav\";\nimport Profile from \"./components/Profile/Profile\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport {Route} from \"react-router-dom\";\nimport {StateType} from \"./components/redux/types\";\nimport {ActionsTypes} from \"./components/redux/state\";\n\n\ntype AppPropsType = {\n    state: StateType\n    dispatch: (action: ActionsTypes) => void\n\n}\n\nfunction App(props: AppPropsType) {\n    return (\n        <div className=\"app-wrapper\">\n            <Header/>\n            <div className='app-container'>\n                <Nav/>\n\n                <div className='app-wrapper-contant'>\n                    <Route path='/dialogs' render={() =>\n                        <Dialogs messages={props.state.dialogsPage.messages}\n                                 dialogs={props.state.dialogsPage.dialogs}/>}/>\n                    <Route path='/profile' render={() =>\n                        <Profile profilePage={props.state.profilePage}\n                                 dispatch={props.dispatch}/>}/>\n                </div>\n            </div>\n        </div>\n\n    )\n        ;\n}\n\n\nexport default App;\n\n\n\n\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./components/redux/state\";\nimport {StateType} from \"./components/redux/types\";\n\nexport let rerenderIntireTree = (state: StateType) => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <App state={state}\n                 dispatch={store.dispatch.bind(store)}/>,\n        </BrowserRouter>,\n        document.getElementById('root'));\n}\n\nrerenderIntireTree(store.getstate())\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2LPqS\",\"item\":\"Nav_item__2ic2h\",\"active\":\"Nav_active__22-sI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1J_X1\",\"dialogs__items\":\"Dialogs_dialogs__items__2La5L\",\"active\":\"Dialogs_active__1w4Qp\",\"dialog\":\"Dialogs_dialog__2BkpL\",\"messages\":\"Dialogs_messages__3Q49x\",\"message\":\"Dialogs_message__2U4jD\"};"],"sourceRoot":""}