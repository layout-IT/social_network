{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.module.css","components/Users/Users.module.css","components/Nav/Nav.module.css","components/Nav/Nav.tsx","components/redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogsItem.tsx","components/Dialogs/Dialogs.tsx","hoc/WithAythRedirect.tsx","components/Dialogs/Dialogs-container.tsx","API/Api.ts","utils/helper.tsx","components/redux/users-reducer.tsx","components/common/Paginator/Paginator.tsx","assets/images/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.jpg","components/Users/User.tsx","components/Users/Users.tsx","assets/images/load.gif","components/common/preloader/preloader.tsx","components/redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/redux/profile-reducer.tsx","components/Profile/Myposts/Post/Post.tsx","components/Profile/Myposts/MyPosts.tsx","components/Profile/Myposts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","components/redux/auth-reducer.tsx","components/Header/HeaderComtainer.tsx","components/Login/Login.tsx","components/redux/app-reducer.ts","App.tsx","components/redux/sidebar-reducer.tsx","components/redux/redux-store.tsx","index.tsx","components/Dialogs/Dialogs.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","components/Profile/Myposts/Post/Post.module.css"],"names":["module","exports","Nav","className","s","nav","item","to","activeClassName","active","initialState","messages","id","title","dialogs","name","dialogsReducer","state","action","type","body","newMessageBody","Date","getTime","DialigItem","props","dialog","Message","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","mapStatetoPropsForRedirect","isAuth","auth","withAythRedirect","Component","connect","restProps","AuthRedirectComponent","dialogsElement","map","d","messagesElements","m","dialogs__items","values","SendMessage","DialogsContainer","dialogsPage","dispatch","SendMessageAC","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","updateObjectInArray","items","itemId","objectPropName","newObjectProps","followUnfollowFlow","apiMethod","AC","a","toggleIsFollowingProgress","resultCode","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unFollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","totalCount","toggleIsFetching","usersReducer","followed","filter","Paginator","pageesCount","Math","ceil","pages","i","push","numberOfBlocks","splittingAccountsInto","useState","porionNumber","setPortionNumber","leftBorder","rightBorder","wrapper","onClick","p","numbers","onPageChenged","User","user","container","itemsL","img","src","photos","small","userImg","alt","wrapper_button","disabled","some","button","itemsR","itemsRL","text","itemsRR","texT","Users","u","Preloader","load","getPageSize","usersPage","getTotalUserCount","getcurrentPage","getisFetching","getfollowingInProgress","getUser","createSelector","UsersContainer","this","pageNumber","React","log","bind","page","ProfileStatus","editMode","setState","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","onDoubleClick","ProfileInfo","profile","picture","large","posts","like","setStatus","profileReducer","newPost","newPostText","f","Post","AddNewPostReduxForm","MyPosts","memo","postsElement","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","match","params","history","getUserProfile","getUserStatus","updateUserStatus","WithUrlDataContainerComponent","withRouter","Header","header","loginBlock","login","logOut","SetAuthUserData","payload","getAuthUserData","AuthReducer","HeaderContainer","LoginRedaxForm","logIn","formData","initializesd","appReducer","App","initializeApp","initialized","path","render","AppContainer","app","promise","Promise","all","sidebareducer","reducer","combineReducers","sideBar","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2d1de80a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contant\":\"ProfileInfo_contant__2QIyq\",\"picture\":\"ProfileInfo_picture__13Qxy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__1GQPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__2BwpC\",\"wrapper\":\"Users_wrapper__1M_rS\",\"wrapper_button\":\"Users_wrapper_button__3V9jZ\",\"img\":\"Users_img__36mqt\",\"itemsL\":\"Users_itemsL__2_IKl\",\"itemsR\":\"Users_itemsR__1mP9L\",\"text\":\"Users_text__2ulzP\",\"marg\":\"Users_marg__3SjuI\",\"button\":\"Users_button__1nFpn\",\"wraooer_button\":\"Users_wraooer_button__bSzwm\",\"texT\":\"Users_texT__ekBGZ\",\"itemsRL\":\"Users_itemsRL__LYDgc\",\"itemsRR\":\"Users_itemsRR__1LgP2\",\"status\":\"Users_status__2TpqI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2LPqS\",\"item\":\"Nav_item__2ic2h\",\"active\":\"Nav_active__22-sI\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Nav.module.css'\n\nconst Nav = () => {\n    return <nav className={s.nav}>\n        <div className={s.item}>\n            <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\n        </div>\n        <div className={`${s.item} ${s.active}`}>\n            <NavLink to='/Dialogs' activeClassName={s.active}>Messages</NavLink>\n        </div>\n        <div className={`${s.item} ${s.active}`}>\n            <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\n        </div>\n        <div className={s.item}><a>News</a></div>\n        <div className={s.item}><a>Music</a></div>\n        <div className={s.item}><a>Settings</a></div>\n    </nav>\n}\n\nexport default Nav","export type SendMessageCreatorType = ReturnType<typeof SendMessageAC>\n\nexport type newPostTextType = string\n\n\nexport type DialogsType = {\n    id: number\n    name: string\n\n}\n\nexport type MessagesType = {\n    id: number\n    title: string\n}\n\n\nlet initialState: initialStateType = {\n    messages: [\n        {id: 1, title: 'hi'},\n        {id: 2, title: 'How is yor it kamasutra?'},\n        {id: 3, title: 'YoO'},\n        {id: 4, title: 'Сool dude'}\n    ],\n    dialogs: [\n        {id: 1, name: 'Petr'},\n        {id: 2, name: 'Sasha'},\n        {id: 3, name: 'Oleg'},\n        {id: 4, name: 'Victor'}\n    ],\n\n}\n\nexport type initialStateType = {\n    messages: Array<MessagesType>\n    dialogs: Array<DialogsType>\n}\n\nconst dialogsReducer = (state: initialStateType = initialState, action: SendMessageCreatorType): initialStateType => {\n    switch (action.type) {\n        case 'SEND-MESSAGE' :\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messages: [...state.messages, {id: new Date().getTime(), title: body}],\n                dialogs: [...state.dialogs],\n            };\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const SendMessageAC = (newMessageBody:string) => {\n    return {\n        type: 'SEND-MESSAGE',\n        newMessageBody\n\n    } as const\n}\n\n\nexport default dialogsReducer;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './../Dialogs.module.css'\n\nfunction DialigItem(props: DialigItemType) {\n    return <div className={s.dialog + ' ' + s.active}>\n        <NavLink to={'/dealogs/' + props.id}>{props.name}</NavLink>\n    </div>\n}\n\ntype DialigItemType = {\n    id: number\n    name: string\n}\n\nexport default DialigItem","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialigItem from \"./DialogItem/DialogsItem\";\r\nimport {DialogsPropsType} from \"./Dialogs-container\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Field, reduxForm, InjectedFormProps} from \"redux-form\";\r\n\r\nfunction Message(props: MessageType) {\r\n    return <div className={s.message}>{props.title}</div>\r\n}\r\n\r\ntype MessageType = {\r\n    title: string\r\n}\r\n\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n    let dialogsElement = props.dialogs.map(d => <DialigItem key={d.id} name={d.name} id={d.id}/>)\r\n    debugger\r\n    let messagesElements = props.messages.map(m => <Message key={m.id} title={m.title}/>)\r\n\r\n    let addNewMessage = (values: any) => {\r\n        props.SendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (props.isAuth === false) {\r\n        return <Redirect to={\"/login\"}/>\r\n\r\n\r\n    }\r\n\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogs__items}>\r\n            {dialogsElement}\r\n\r\n        </div>\r\n        <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps> = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field component='textarea' placeholder='Enter something' name='newMessageBody'> </Field>\r\n        <button>Send</button>\r\n    </form>\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)","import React, {ComponentType} from 'react'\nimport {Redirect} from \"react-router-dom\";\nimport {AppStateType} from \"../components/redux/redux-store\";\nimport {connect} from \"react-redux\";\n\ntype mapStatetoPropsForRedirectType = {\n    isAuth: boolean\n}\nlet mapStatetoPropsForRedirect = (state: AppStateType): mapStatetoPropsForRedirectType => ({\n    isAuth: state.auth.isAuth,\n})\n\nexport function  withAythRedirect<T>(Component: ComponentType<T>){\n    function RedirectComponent(props:mapStatetoPropsForRedirectType) {\n        let {isAuth, ...restProps} = props\n\n        if (!isAuth) {\n            return <Redirect to={'/login'}/>\n        }\n        return <Component {...restProps as T}/>\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStatetoPropsForRedirect)(RedirectComponent)\n\n\n    return ConnectedAuthRedirectComponent\n}","import {\r\n    DialogsType,\r\n    MessagesType,\r\n    newPostTextType,\r\n    SendMessageAC,\r\n} from \"../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {withAythRedirect} from \"../../hoc/WithAythRedirect\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    messages:MessagesType[],\r\n    dialogs: DialogsType[],\r\n    newMessageBody:newPostTextType,\r\n    isAuth:boolean,\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    SendMessage: (newMessageBody:string) => void,\r\n}\r\n\r\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogs : state.dialogsPage.dialogs,\r\n        messages : state.dialogsPage.messages,\r\n    }\r\n}\r\nlet AuthRedirectComponent = withAythRedirect(Dialogs)\r\n\r\nlet mapDispatchToProps = (dispatch : Dispatch)=> {\r\n    return {\r\n\r\n        SendMessage: (newMessageBody:string) => {\r\n\r\n            dispatch(SendMessageAC(newMessageBody))\r\n        },\r\n\r\n\r\n    }\r\n}\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\n","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        \"API-KEY\": \"4f7a90cd-f073-4cab-b304-b853b0aa67c3\"\n    },\n\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\n            return response.data\n        })\n    },\n    follow(userId: number) {\n        return instance.post(`follow/${userId}`)\n    },\n\n    unfollow(userId: number) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId: number) {\n        console.warn('worning')\n        // return instance.get(`profile/` + userId)\n        return profileAPI.getProfile(userId)\n    }\n}\n\n\nexport const profileAPI = {\n    getProfile(userId: number) {\n        return instance.get(`profile/` + userId)\n    },\n    getStatus(userId: number) {\n        return instance.get(`profile/status/` + userId)\n    },\n    updateStatus(status: string) {\n        return instance.put(`profile/status`, {status: status})\n    }\n\n}\n\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email: string, password: number, rememberMe: boolean = false) {\n        return instance.post('auth/login', {email, password, rememberMe})\n    },\n    loginOut() {\n        return instance.delete('auth/login')\n    },\n}","import React from \"react\";\r\nimport {UsersType} from \"../components/redux/users-reducer\";\r\n\r\n\r\nexport let updateObjectInArray = (items: UsersType[],itemId:number, objectPropName: any,newObjectProps:{}) => {\r\n\r\n\r\n\r\n    return  items.map(m => {\r\n        // @ts-ignore\r\n            if (m[objectPropName]=== itemId) {\r\n                return {...m, ...newObjectProps}\r\n            }\r\n            return m;\r\n        }\r\n    )\r\n}","import {Dispatch} from \"redux\";\nimport {usersAPI} from \"../../API/Api\";\nimport {updateObjectInArray} from \"../../utils/helper\";\n\nexport type followCreatorType = ReturnType<typeof followSuccess>\nexport type unFollowCreatorType = ReturnType<typeof unFollowSuccess>\nexport type setUserCreatorType = ReturnType<typeof setUsers>\nexport type setCurrentPageAType = ReturnType<typeof setCurrentPage>\nexport type setTotalUsersCountAT = ReturnType<typeof setTotalUsersCount>\nexport type toggleIsFetchingAT = ReturnType<typeof toggleIsFetching>\nexport type toggleIsFollowingProgressT = ReturnType<typeof toggleIsFollowingProgress>\n\nexport const requestYsers = (page: number, pageSize: number) => async (dispatch: any) => {\n    dispatch(toggleIsFetching(true));\n    let data = await usersAPI.getUsers(page, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setCurrentPage(page));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n}\n\nconst followUnfollowFlow = async (userId: number, dispatch: Dispatch, apiMethod: Function, AC: Function) => {\n    dispatch(toggleIsFollowingProgress(true, userId));\n\n    let response = await apiMethod(userId);\n    if (response.data.resultCode === 0) {\n        dispatch(AC(userId))\n    }\n    dispatch(toggleIsFollowingProgress(false, userId))\n}\n\n\nexport const follow = (userId: number) => {\n    return async (dispatch: any) => {\n        followUnfollowFlow(userId, dispatch, usersAPI.follow.bind(usersAPI), followSuccess)\n    }\n}\n\nexport const unfollow = (userId: number) => {\n    return async (dispatch: any) => {\n        followUnfollowFlow(userId, dispatch, usersAPI.unfollow.bind(usersAPI), unFollowSuccess)\n    }\n}\n\nconst initialState = {\n    users: [],\n    pageSize: 100,\n    totalUsersCount: 0,\n    currentPage: 200,\n    isFetching: false,\n    followingInProgress: [],\n}\n\n\nexport type followingInProgressType = {}\nexport type UsersType = {\n    id: number\n    followed: boolean\n    name: string\n    //location: locationType\n    status: string\n    photos: photosType\n\n}\n\nexport type photosType = {\n    small: string\n    large: string\n}\n\nexport type locationType = {\n    city: string\n    country: string\n}\nexport type initialStateType = {\n    users: UsersType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: followingInProgressType[]\n}\n\ntype wrapperType = followCreatorType |\n    unFollowCreatorType |\n    setUserCreatorType |\n    setCurrentPageAType |\n    setTotalUsersCountAT |\n    toggleIsFetchingAT |\n    toggleIsFollowingProgressT\n\nconst usersReducer = (state: initialStateType = initialState, action: wrapperType) => {\n    switch (action.type) {\n        case 'FOLLOW' :\n            return {\n                ...state,\n                users: updateObjectInArray(state.users,action.userId,'id',{followed: true})\n\n            }\n        case 'UNFOLLOW' :\n            return {\n                ...state,\n                users:  updateObjectInArray(state.users,action.userId,'id',{followed: false})\n\n                //\n                //\n                //     state.users.map((m) => {\n                //         if (m.id === action.userId) {\n                //             return {...m, followed: false}\n                //         }\n                //         return m;\n                //     }\n                // )\n            }\n        case 'SET-USERS': {\n            return {...state, users: action.users}\n        }\n        case 'SET-CURRENT-PAGE': {\n            return {...state, currentPage: action.currentPage}\n        }\n        case 'SET-USERS-TOTAL-COUNT': {\n            return {...state, totalUsersCount: action.totalCount}\n        }\n        case 'TOGGLE-IS-FETCHING': {\n            return {...state, isFetching: action.isFetching}\n        }\n        case 'TOGGLE-IS-FOLLOWING-PROGRASS' :\n            return {\n                ...state,\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => !action.userId)\n            }\n\n        default:\n            return state\n    }\n}\nexport const followSuccess = (userId: number) => {\n    return {\n        type: 'FOLLOW',\n        userId,\n\n    } as const\n}\nexport const unFollowSuccess = (userId: number) => {\n    return {\n        type: 'UNFOLLOW',\n        userId,\n    } as const\n}\nexport const setUsers = (users: UsersType[]) => {\n    return {\n        type: 'SET-USERS',\n        users,\n    } as const\n}\nexport const setCurrentPage = (currentPage: number) => {\n    return {\n        type: 'SET-CURRENT-PAGE',\n        currentPage\n    } as const\n}\nexport const setTotalUsersCount = (totalCount: number) => {\n    return {\n        type: 'SET-USERS-TOTAL-COUNT',\n        totalCount\n    } as const\n}\nexport const toggleIsFetching = (isFetching: boolean) => {\n    return {\n        type: 'TOGGLE-IS-FETCHING',\n        isFetching\n    } as const\n}\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number) => {\n    return {\n        type: 'TOGGLE-IS-FOLLOWING-PROGRASS',\n        isFetching,\n        userId,\n    } as const\n}\n\n\nexport default usersReducer","import React, {useState} from 'react'\r\nimport s from './Paginator.module.css'\r\n\r\ntype  UsersPropsType = {\r\n    onPageChenged: (pageNumber: number) => void,\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    splittingAccountsInto: number\r\n\r\n}\r\n\r\nexport let Paginator = (props: UsersPropsType) => {\r\n    let pageesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pageesCount + 1; i++) {\r\n        pages.push(i)\r\n    }\r\n    let numberOfBlocks = Math.ceil(pageesCount / props.splittingAccountsInto);\r\n    let [porionNumber, setPortionNumber] = useState(1);\r\n    let leftBorder = (porionNumber - 1) * props.splittingAccountsInto + 1;\r\n    let rightBorder = porionNumber * props.splittingAccountsInto;\r\n\r\n    return <div className={s.wrapper}>\r\n        {\r\n            porionNumber > 1 ? <button onClick={() => setPortionNumber(porionNumber - 1)}>prev</button> : ''\r\n        }\r\n        {pages.filter(p => p >= leftBorder && p <= rightBorder).map((p, i) => {\r\n            return <li key={i} className={s.numbers}>\r\n                <span className={props.currentPage === p ? s.active : ''} onClick={() => props.onPageChenged(p)}>{p}</span>\r\n            </li>\r\n\r\n        })}\r\n        {\r\n            numberOfBlocks > porionNumber ?\r\n                <button onClick={() => setPortionNumber(porionNumber + 1)}> next </button> : ''\r\n        }\r\n    </div>\r\n\r\n\r\n    // return <ul className={s.number_pages}>\r\n    //\r\n    //     {pages.map((m,i) => <li key={i} onClick={()=>props.onPageChenged(m)}>1</li>)}\r\n    //         {pages.map((m, i) => {\r\n    //             return <li key={i} className={s.numbers}><span className={props.currentPage === m ? s.active : ''}\r\n    //                                                            onClick={() => props.onPageChenged(m)}>{m}</span></li>\r\n    //         })}\r\n    //     </ul>\r\n\r\n\r\n}","export default __webpack_public_path__ + \"static/media/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.f654bcd6.jpg\";","import React from 'react'\nimport s from \"./Users.module.css\";\nimport userImg from \"../../assets/images/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.jpg\";\nimport {followingInProgressType, UsersType} from \"../redux/users-reducer\";\nimport {NavLink} from 'react-router-dom';\n\ntype  UsersPropsType = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    user: UsersType\n    followingInProgress: followingInProgressType[]\n}\n\nexport let User = (props: UsersPropsType) => {\nlet user = props.user\n    return <div className={s.container}>\n        <div className={s.itemsL}>\n            <NavLink to={'/profile/' + user.id}>\n                <img className={s.img} src={user.photos.small !== null ? user.photos.small : userImg} alt=\"photo\"/>\n            </NavLink>\n            <div className={s.wrapper_button}>\n                {user.followed\n                    ? <button disabled={props.followingInProgress.some(id => id === user.id)}\n                              onClick={() => props.unfollow(user.id)} className={s.button}>Unfollow</button>\n                    : <button disabled={props.followingInProgress.some(id => id === user.id)}\n                              onClick={() => props.follow(user.id)} className={s.button}>Follow</button>}\n            </div>\n        </div>\n        <div className={s.itemsR}>\n            <div className={s.itemsRL}>\n                <div className={s.text}>{user.name}</div>\n                <div className={s.status}>{user.status}</div>\n            </div>\n            <div className={s.itemsRR}>\n                <div className={s.text}>{\"user.location.country\"}</div>\n                <div className={s.texT}>{\"user.location.city\"}</div>\n            </div>\n        </div>\n    </div>\n\n}","import React from 'react'\nimport s from \"./Users.module.css\";\nimport {followingInProgressType, UsersType} from \"../redux/users-reducer\";\nimport {Paginator} from \"../common/Paginator/Paginator\";\nimport {User} from \"./User\";\n\ntype  UsersPropsType = {\n    onPageChenged: (pageNumber: number) => void,\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    users: UsersType[]\n    currentPage: number\n    totalUsersCount: number\n    pageSize: number\n    followingInProgress: followingInProgressType[]\n}\n\nexport let Users = (props: UsersPropsType) => {\n    let pageesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= pageesCount + 1; i++) {\n        pages.push(i)\n    }\n\n    return <div className={s.wrapper}>\n        <Paginator currentPage={props.currentPage} onPageChenged={props.onPageChenged} pageSize={props.pageSize}\n                   totalUsersCount={props.totalUsersCount} splittingAccountsInto={10}/>\n        {\n            props.users.map(u => <User key={u.id} user={u}\n                                       followingInProgress={props.followingInProgress}\n                                       unfollow={props.unfollow}\n                                       follow={props.follow}\n                />\n            )\n        }\n    </div>\n}","export default __webpack_public_path__ + \"static/media/load.77dd8198.gif\";","import load from \"../../../assets/images/load.gif\";\r\n\r\nexport let Preloader = () => {\r\n return <div>\r\n     <img src={load} alt=\"loading\"/>\r\n </div>\r\n}","import {AppStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\n\r\n\r\n\r\n\r\nexport const getPageSize = (state :AppStateType ) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUserCount = (state :AppStateType ) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getcurrentPage= (state :AppStateType ) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getisFetching = (state :AppStateType ) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getfollowingInProgress = (state :AppStateType ) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\nconst getUserSelector =(state: AppStateType) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUser = createSelector(getUserSelector,(users ) => {\r\n    return users\r\n});","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    UsersType,\r\n    toggleIsFollowingProgress,\r\n    followingInProgressType,\r\n    requestYsers\r\n} from \"../redux/users-reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/preloader/preloader\";\r\nimport {\r\n    getcurrentPage,\r\n    getfollowingInProgress,\r\n    getisFetching,\r\n    getPageSize, getUser,\r\n    getTotalUserCount,\r\n} from \"../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component <mapPropsdispatchType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        let onPageChenged = (pageNumber: number) => {\r\n            this.props.getUsers(pageNumber, this.props.pageSize);\r\n        }\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users onPageChenged={onPageChenged}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   currentPage={this.props.currentPage}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: followingInProgressType[]\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\n// let mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress,\r\n//     }\r\n// }\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        users: getUser(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getcurrentPage(state),\r\n        isFetching: getisFetching(state),\r\n        followingInProgress: getfollowingInProgress(state),\r\n    }\r\n}\r\n\r\n\r\nexport type mapPropsdispatchType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\nconsole.log('MSTP')\r\nexport default connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleIsFollowingProgress,\r\n        getUsers: requestYsers,\r\n    }\r\n)(UsersContainer)","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './ProfileStatus.module.css'\r\n\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: any\r\n}\r\n\r\nconst ProfileStatus = (props: ProfileStatusType) => {\r\n    let [state, setState] = useState({\r\n        editMode: false,\r\n        status: props.status\r\n    })\r\n    useEffect( () => {\r\nsetState({...state,status: props.status})\r\n    },[props.status])\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setState({...state, status: e.currentTarget.value})\r\n        console.log(state.status)\r\n    }\r\n    const activatedMode = () => {\r\n        setState({...state, editMode: true})\r\n\r\n    }\r\n    const deactivatedMode = () => {\r\n        setState({...state, editMode: false})\r\n        props.updateStatus(state.status)\r\n\r\n    }\r\n    return <div className={s.status}>\r\n        {!state.editMode\r\n            ?\r\n            <div>\r\n                <span onDoubleClick={activatedMode}>Status: {state.status} </span>\r\n            </div>\r\n            :\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivatedMode} value={state.status}/>\r\n        }\r\n    </div>\r\n\r\n}\r\nexport default ProfileStatus","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport {Preloader} from \"../../common/preloader/preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\ntype ProfileInfoType = {\r\n    profile: any\r\n    status:string\r\n    updateStatus:any\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoType) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.picture}>\r\n            <img src={props.profile.photos.large} alt=\"ptcture\"/>\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport default ProfileInfo","import {profileAPI, usersAPI} from \"../../API/Api\";\n\n\nexport type AddPostActionType = ReturnType<typeof addPostActionCreator>\nexport type setUserProfileTYpe = ReturnType<typeof setUserProfile>\nexport type setStatusTYpe = ReturnType<typeof setStatus>\nexport type delPostTYpe = ReturnType<typeof delPost>\n\nexport type ProfilePageType = {\n    posts: Array<PostType>\n    profile: any\n    status: string\n}\n\nexport type PostType = {\n    id: number\n    title: string\n    like: number\n}\n\n\nlet initialState = {\n    posts:\n        [\n            {id: 1, title: 'hi, how are you', like: 12},\n            {id: 2, title: 'it`s my first post', like: 15}\n        ],\n    profile: null,\n    status: ''\n}\n\n\nconst profileReducer = (state: ProfilePageType = initialState, action: AddPostActionType | setUserProfileTYpe | setStatusTYpe | delPostTYpe): ProfilePageType => {\n    switch (action.type) {\n        case 'ADD-POST': {\n            let newPost:\n                PostType = {\n                id: new Date().getTime(),\n                title: action.newPostText,\n                like: new Date().getTime(),\n            };\n            return {...state, posts: [...state.posts, newPost]};\n        }\n\n        case 'SET-STATUS' :\n            return {...state, status: action.status}\n\n        case 'SET-USER-PROFILE':\n            return {...state, profile: action.profile}\n\n\n        case 'DEL-POST':\n            return {...state, posts: [...state.posts].filter(f => f.id !== action.id)}\n\n\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (newPostText: string) => {\n    return {\n        type: 'ADD-POST',\n        newPostText\n    } as const\n}\n\n\nexport const setUserProfile = (profile: any) => {\n    return {\n        type: 'SET-USER-PROFILE',\n        profile\n    } as const\n}\nexport const setStatus = (status: string) => {\n    return {\n        type: 'SET-STATUS',\n        status\n    } as const\n}\n\nexport const delPost = (id: number) => {\n    return {\n        type: 'DEL-POST',\n        id\n    } as const\n}\n\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\n    let response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data))\n}\n\nexport const getUserStatus = (userId: number) => async (dispatch: any) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data))\n}\n\nexport const updateUserStatus = (status: string) => async (dispatch: any) => {\n    let response = await profileAPI.updateStatus(status);\n    if (response.data.resultCode !== 0) {\n        dispatch(setStatus(status))\n    }\n}\nexport default profileReducer;","import React from 'react';\nimport s from './Post.module.css'\n\n\n\nconst Post = (props: any) => {\n    return <div className={s.wrapper}>\n        <div className={s.item}>\n            <img src={'https://ru.fishki.net/picsw/112009/18/bonus/face/face_photo_032.jpg'}/>\n            {props.message}\n        </div>\n        <span >like {props.like}</span>\n    </div>\n}\n\n\nexport default Post\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport s from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport {PropsMType} from \"./MyPostsContainer\";\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\n\nconst AddNewPostForm: React.FC<InjectedFormProps> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field name='newPostText' component='textarea'/>\n            <button>Add post</button>\n        </form>\n    )\n}\n\nexport const AddNewPostReduxForm = reduxForm({\n    form: 'ProfileAddNewPostForm'\n})(AddNewPostForm)\n\nconst MyPosts = React.memo((props: PropsMType) => {\n    let postsElement = props.posts.map((p) => <Post key={p.id} message={p.title} like={p.like}/>);\n//   let newPostElement = React.createRef<HTMLTextAreaElement>()\n\n    let onAddPost = (values: any) => {\n        props.addPost(values.newPostText)\n\n    }\n\n    return <div>\n        <div>\n            My posts\n        </div>\n        <AddNewPostReduxForm onSubmit={onAddPost}/>\n        <div className={s.posts}>\n            {postsElement}\n        </div>\n    </div>\n\n})\n\n\nexport default MyPosts","import { addPostActionCreator, PostType} from \"../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\n\n\ntype mapStateToPropsType = {\n    posts: Array<PostType>\n\n}\n\ntype mapMDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n\n}\n\nexport type PropsMType = mapStateToPropsType & mapMDispatchToPropsType\n\n\nlet mapDispatchToProps = (dispatch: Dispatch): mapMDispatchToPropsType => {\n    return {\n        addPost: (newPostText: string) => {\n            dispatch(addPostActionCreator(newPostText))\n        },\n\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        posts: state.profilePage.posts,\n\n    }\n\n}\n\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport {MyPostsContainer} from \"./Myposts/MyPostsContainer\";\nimport {Redirect} from \"react-router-dom\";\n\ntype ProfileType = {\n    profile: any\n    status:string\n    updateStatus:any\n}\n\nconst Profile = (props: ProfileType) => {\n\n    return <div>\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n\n        <MyPostsContainer/>\n    </div>\n\n}\n\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {withAythRedirect} from \"../../hoc/WithAythRedirect\";\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: any\r\n}\r\n\r\ntype mapStatePropsType = {\r\n    profile: number\r\n    status: string\r\n}\r\n\r\n\r\ntype mapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getUserStatus: (userId: number) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\ntype OwnPropsType = mapStatePropsType & mapDispatchPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nfunction ProfileContainer(props: PropsType) {\r\n\r\n    let userId = props.match.params.userId\r\n    if (!userId) {\r\n        props.history.push('/users')\r\n    }\r\n    props.getUserProfile(userId)\r\n    props.getUserStatus(userId)\r\n\r\n    return (\r\n        <Profile {...props} profile={props.profile} status={props.status} updateStatus={props.updateUserStatus}/>\r\n    )\r\n}\r\n\r\nlet AuthRedirectComponent = withAythRedirect(ProfileContainer)\r\n\r\n\r\nlet mapStatetoProps = (state: AppStateType): mapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n\r\n})\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\nexport default connect(mapStatetoProps, {\r\n    getUserProfile, getUserStatus, updateUserStatus\r\n})(WithUrlDataContainerComponent)","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.css'\nimport {HeaderPropsType} from \"./HeaderComtainer\";\n\n\nexport const Header = (props: HeaderPropsType) => {\n\n    return <header className={s.header}>\n\n        <img\n            src={'https://www.markakimlik.com/wp-content/uploads/2020/09/Markalasma-Surecinde-Logo-ve-Renk-Duzeni.jpg'}/>\n        <div className={s.loginBlock}>\n            {props.isAuth ? <div>{props.login} - <button onClick={props.logOut}>logOut</button></div> :\n                <NavLink className={s.login} to={'/login'}>login</NavLink>}\n\n        </div>\n    </header>\n}\n","import {authAPI} from \"../../API/Api\";\n\ntype SetAuthUserDataT = ReturnType<typeof SetAuthUserData>\n\n\nlet initialState: initialStateType = {\n    userId: 1,\n    email: 'ailru',\n    login: 'free',\n    isAuth: false,\n}\n\nexport type initialStateType = {\n    userId: number\n    email: string\n    login: string\n    isAuth: boolean\n}\n\n\nconst AuthReducer = (state: initialStateType = initialState, action: SetAuthUserDataT): initialStateType => {\n    switch (action.type) {\n        case 'auth/SET-AUTH-USER-DATA': {\n\n            return {\n                ...state,\n                ...action.payload\n            };\n        }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const SetAuthUserData = (userId: number, email: string, login: string, isAuth: boolean) => {\n    return {\n        type: 'auth/SET-AUTH-USER-DATA',\n        payload: {\n            userId,\n            email,\n            login,\n            isAuth,\n        }\n    } as const\n}\nexport const getAuthUserData = () => async (dispatch: any) => {\n    let response = await authAPI.me();\n    if (response.data.resultCode === 0) {\n        let {id, email, login} = response.data.data\n        dispatch(SetAuthUserData(id, email, login, true))\n    }\n}\n\nexport const logIn = (email: string, password: number, rememberMe: boolean) => async (dispatch: any) => {\n    let response = await authAPI.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    }\n}\n\nexport const logOut = () => async (dispatch: any) => {\n    let response = await authAPI.loginOut();\n    if (response.data.resultCode === 0) {\n        dispatch(SetAuthUserData(0, '0', '0', false))\n    }\n    ;\n}\n\nexport default AuthReducer;","import React from 'react';\nimport {Header} from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../redux/redux-store\";\nimport {logOut} from \"../redux/auth-reducer\";\n\ntype mapDispatchToProps = {\n    logOut: () => any\n\n}\ntype mapStateToPropsType = {\n    isAuth: boolean\n    login: string\n}\n\nexport type HeaderPropsType = mapStateToPropsType & mapDispatchToProps\n\nclass HeaderContainer extends React.Component<HeaderPropsType> {\n\n\n    render() {\n        return <div>\n            <Header {...this.props} />\n        </div>\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n})\n\n\nexport default connect(mapStateToProps, {\n    logOut,\n})(HeaderContainer);\n","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {AppStateType} from \"../redux/redux-store\";\nimport {logIn} from \"../redux/auth-reducer\";\n\ntype FormExportType = {\n    email: string\n    password: string\n    rememberMe: boolean\n}\n\n export const LoginForm: React.FC<InjectedFormProps<FormExportType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name={'email'} placeholder={'email'} component={'input'}/>\n            </div>\n            <div>\n                <Field name={'password'} placeholder={'password'} component={'input'} type={'password'}/>\n            </div>\n            <div>\n                <Field type={'checkbox'} name={'rememberMe'} component={'input'}/>remember me\n            </div>\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nexport const LoginRedaxForm = reduxForm<FormExportType>({\n    form: 'login'\n})(LoginForm)\n\n const Login = (props:any) => {\n    const onSubmit = (formData: FormExportType) => {\n        props.logIn(formData.email,formData.password,formData.rememberMe)\n    }\n    if (props.isAuth){\n       return <Redirect to={'/profile'} />\n    }\n    return <div>\n        <h1>Login</h1>\n        <LoginRedaxForm onSubmit={onSubmit}/>\n    </div>\n}\nconst mapStateToProps = (state:AppStateType) => ({\n    isAuth: state.auth.isAuth\n})\nexport default connect(mapStateToProps,{logIn})(Login)\n\n","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\ntype initializedSuccessT = ReturnType<typeof initializedSuccess>\r\n\r\n\r\nlet initialState: initialStateType = {\r\n    initializesd: false\r\n}\r\n\r\nexport type initialStateType = {\r\n    initializesd: boolean\r\n}\r\n\r\n\r\nconst appReducer = (state: initialStateType = initialState, action: initializedSuccessT): initialStateType => {\r\n    switch (action.type) {\r\n        case 'INITIALIZED-SUCCESS': {\r\n            return {\r\n                ...state,\r\n                initializesd: true\r\n            };\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: 'INITIALIZED-SUCCESS',\r\n    } as const\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n}\r\n\r\nexport default appReducer;","import React, {Component} from 'react';\nimport './App.css';\nimport Nav from \"./components/Nav/Nav\";\nimport {DialogsContainer} from \"./components/Dialogs/Dialogs-container\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderComtainer\";\nimport Login from \"./components/Login/Login\";\nimport {initializeApp} from \"./components/redux/app-reducer\";\nimport {Preloader} from \"./components/common/preloader/preloader\";\nimport { Route } from 'react-router-dom';\nimport {AppStateType} from \"./components/redux/redux-store\";\nimport {connect} from \"react-redux\";\n\n\n\n\ntype mapDispatchToPropsType = {\n    initializeApp: () => void\n}\ntype mapStateToPropsType = {\n    initialized: boolean\n}\n\ntype AppPropsComponentype = mapStateToPropsType & mapDispatchToPropsType\n\nclass App extends Component <AppPropsComponentype> {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <div className='app-container'>\n                    <Nav/>\n                    <div className='app-wrapper-contant'>\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        <Route path='/profile/:userId' render={() => <ProfileContainer/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\n    initialized: state.app.initializesd\n})\nexport const AppContainer = connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n    mapStateToProps, {initializeApp}\n)(App)\n","export type sideBarType = {}\n\nlet initialState = {\n\n}\n\nconst sidebareducer = (state: sideBarType = initialState, action: any): sideBarType => {\n\n\n    return state\n}\n\nexport default sidebareducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebareducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport AuthReducer from \"./auth-reducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport {reducer as formReducer} from 'redux-form';\nimport appReducer from \"./app-reducer\";\nimport { Store } from \"redux\";\nimport { compose } from \"redux\";\n\nexport let reducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sideBar: sidebareducer,\n    usersPage: usersReducer,\n    auth: AuthReducer,\n    form: formReducer,\n    app: appReducer,\n});\nexport type AppStateType = ReturnType<typeof reducer>\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store:Store<AppStateType> = createStore(reducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n//let store: Store<AppStateType> = createStore(reducer, applyMiddleware(thunkMiddleware));\n// @ts-ignore\nwindow.__store__ = store;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport {AppContainer} from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./components/redux/redux-store\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>,\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1J_X1\",\"dialogs__items\":\"Dialogs_dialogs__items__2La5L\",\"active\":\"Dialogs_active__1w4Qp\",\"dialog\":\"Dialogs_dialog__2BkpL\",\"messages\":\"Dialogs_messages__3Q49x\",\"message\":\"Dialogs_message__2U4jD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Paginator_wrapper__1WRr9\",\"numbers\":\"Paginator_numbers__UU_WV\",\"active\":\"Paginator_active__TiSZ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__fHWjq\",\"login\":\"Header_login__3bGGL\",\"loginBlock\":\"Header_loginBlock__3aQOw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1xhAm\",\"wrapper\":\"Post_wrapper__lwSv7\"};"],"sourceRoot":""}