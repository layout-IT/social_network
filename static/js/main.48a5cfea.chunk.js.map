{"version":3,"sources":["components/redux/dialogs-reducer.tsx","components/Users/Users.module.css","API/Api.ts","components/Nav/Nav.module.css","components/Nav/Nav.tsx","utils/helper.tsx","components/redux/users-reducer.tsx","components/common/Paginator/Paginator.tsx","assets/images/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.jpg","components/Users/User.tsx","components/Users/Users.tsx","components/redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","components/redux/auth-reducer.tsx","components/Header/HeaderComtainer.tsx","components/Login/Login.tsx","components/redux/app-reducer.ts","hoc/WithSuspense.tsx","App.tsx","components/redux/sidebar-reducer.tsx","components/redux/redux-store.tsx","index.tsx","assets/images/load.gif","components/common/preloader/preloader.tsx","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","components/redux/profile-reducer.tsx"],"names":["initialState","messages","id","title","dialogs","name","SendMessageAC","newMessageBody","type","dialogsReducer","state","action","body","Date","getTime","module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","loginOut","Nav","className","s","nav","item","to","activeClassName","active","updateObjectInArray","items","itemId","objectPropName","newObjectProps","map","m","followUnfollowFlow","dispatch","apiMethod","AC","a","toggleIsFollowingProgress","resultCode","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unFollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","totalCount","toggleIsFetching","usersReducer","followed","filter","Paginator","props","pageesCount","Math","ceil","pages","i","push","numberOfBlocks","splittingAccountsInto","useState","porionNumber","setPortionNumber","leftBorder","rightBorder","wrapper","onClick","p","numbers","onPageChenged","User","user","container","itemsL","img","src","photos","small","userImg","alt","wrapper_button","disabled","some","button","itemsR","itemsRL","text","itemsRR","texT","Users","u","getPageSize","usersPage","getTotalUserCount","getcurrentPage","getisFetching","getfollowingInProgress","getUser","createSelector","UsersContainer","this","pageNumber","React","Component","log","connect","bind","page","Header","header","loginBlock","isAuth","logOut","SetAuthUserData","payload","getAuthUserData","AuthReducer","HeaderContainer","auth","LoginRedaxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","logIn","formData","initializesd","appReducer","WithSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","initialized","path","render","AppContainer","app","promise","Promise","all","sidebareducer","reducer","combineReducers","profilePage","profileReducer","dialogsPage","sideBar","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","basename","process","document","getElementById","Preloader","load","posts","like","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","getUserStatus","updateUserStatus","newPost","f"],"mappings":"uKAiBIA,EAAiC,CACjCC,SAAU,CACN,CAACC,GAAI,EAAGC,MAAO,MACf,CAACD,GAAI,EAAGC,MAAO,4BACf,CAACD,GAAI,EAAGC,MAAO,OACf,CAACD,GAAI,EAAGC,MAAO,mBAEnBC,QAAS,CACL,CAACF,GAAI,EAAGG,KAAM,QACd,CAACH,GAAI,EAAGG,KAAM,SACd,CAACH,GAAI,EAAGG,KAAM,QACd,CAACH,GAAI,EAAGG,KAAM,YA2BTC,EAAgB,SAACC,GAC1B,MAAO,CACHC,KAAM,eACND,mBAMOE,IA1BQ,WAA+F,IAA9FC,EAA6F,uDAAnEV,EAAcW,EAAqD,uCACjH,OAAQA,EAAOH,MACX,IAAK,eACD,IAAII,EAAOD,EAAOJ,eAClB,OAAO,2BACAG,GADP,IAEIT,SAAS,GAAD,mBAAMS,EAAMT,UAAZ,CAAsB,CAACC,IAAI,IAAIW,MAAOC,UAAWX,MAAOS,KAChER,QAAQ,YAAKM,EAAMN,WAG3B,QACI,OAAOM,K,mBChDnBK,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,uBAAuB,eAAiB,8BAA8B,IAAM,mBAAmB,OAAS,sBAAsB,OAAS,sBAAsB,KAAO,oBAAoB,KAAO,oBAAoB,OAAS,sBAAsB,eAAiB,8BAA8B,KAAO,oBAAoB,QAAU,uBAAuB,QAAU,uBAAuB,OAAS,wB,sDCDxc,mHAGMC,EAHN,OAGiBC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAQ,gDACRC,QAAS,CACL,UAAW,0CAKNC,EAAW,CACpBC,SADoB,WACsB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOT,EAASU,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAAYE,MAAK,SAAAC,GACpE,OAAOA,EAASC,SAGxBC,OANoB,SAMbC,GACH,OAAOf,EAASgB,KAAT,iBAAwBD,KAGnCE,SAVoB,SAUXF,GACL,OAAOf,EAASkB,OAAT,iBAA0BH,KAErCI,WAboB,SAaTJ,GAGP,OAFAK,QAAQC,KAAK,WAENC,EAAWH,WAAWJ,KAKxBO,EAAa,CACtBH,WADsB,SACXJ,GACP,OAAOf,EAASU,IAAI,WAAaK,IAErCQ,UAJsB,SAIZR,GACN,OAAOf,EAASU,IAAI,kBAAoBK,IAE5CS,aAPsB,SAOTC,GACT,OAAOzB,EAAS0B,IAAT,iBAA+B,CAACD,OAAQA,MAM1CE,EAAU,CACnBC,GADmB,WAEf,OAAO5B,EAASU,IAAT,YAEXmB,MAJmB,SAIbC,EAAeC,GAAgD,IAA9BC,EAA6B,wDAChE,OAAOhC,EAASgB,KAAK,aAAc,CAACc,QAAOC,WAAUC,gBAEzDC,SAPmB,WAQf,OAAOjC,EAASkB,OAAO,iB,mBCtD/BpB,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,OAAS,sB,sJCoB5DmC,EAjBH,WACR,OAAO,sBAAKC,UAAWC,IAAEC,IAAlB,UACH,qBAAKF,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,OAA1C,uBAEJ,qBAAKN,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEK,QAA/B,SACI,cAAC,IAAD,CAASF,GAAG,WAAWC,gBAAiBJ,IAAEK,OAA1C,wBAEJ,qBAAKN,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEK,QAA/B,SACI,cAAC,IAAD,CAASF,GAAG,SAASC,gBAAiBJ,IAAEK,OAAxC,qBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SAAwB,uCACxB,qBAAKH,UAAWC,IAAEE,KAAlB,SAAwB,wCACxB,qBAAKH,UAAWC,IAAEE,KAAlB,SAAwB,+C,uDCbrBI,EAAsB,SAACC,EAAmBC,EAAeC,EAAoBC,GAIpF,OAAQH,EAAMI,KAAI,SAAAC,GAEV,OAAIA,EAAEH,KAAmBD,EACd,2BAAII,GAAMF,GAEdE,MCQbC,EAAkB,uCAAG,WAAOlC,EAAgBmC,EAAoBC,EAAqBC,GAAhE,SAAAC,EAAA,6DACvBH,EAASI,GAA0B,EAAMvC,IADlB,SAGFoC,EAAUpC,GAHR,OAIU,IAJV,OAIVF,KAAK0C,YACdL,EAASE,EAAGrC,IAEhBmC,EAASI,GAA0B,EAAOvC,IAPnB,2CAAH,4DAuBlBhC,EAAe,CACjByE,MAAO,GACP/C,SAAU,IACVgD,gBAAiB,EACjBjD,YAAa,IACbkD,YAAY,EACZC,oBAAqB,IAsFZC,EAAgB,SAAC7C,GAC1B,MAAO,CACHxB,KAAM,SACNwB,WAIK8C,EAAkB,SAAC9C,GAC5B,MAAO,CACHxB,KAAM,WACNwB,WAGK+C,EAAW,SAACN,GACrB,MAAO,CACHjE,KAAM,YACNiE,UAGKO,EAAiB,SAACvD,GAC3B,MAAO,CACHjB,KAAM,mBACNiB,gBAGKwD,EAAqB,SAACC,GAC/B,MAAO,CACH1E,KAAM,wBACN0E,eAGKC,EAAmB,SAACR,GAC7B,MAAO,CACHnE,KAAM,qBACNmE,eAGKJ,EAA4B,SAACI,EAAqB3C,GAC3D,MAAO,CACHxB,KAAM,+BACNmE,aACA3C,WAKOoD,EA3FM,WAAkE,IAAjE1E,EAAgE,uDAAtCV,EAAcW,EAAwB,uCAClF,OAAQA,EAAOH,MACX,IAAK,SACD,OAAO,2BACAE,GADP,IAEI+D,MAAOd,EAAoBjD,EAAM+D,MAAM9D,EAAOqB,OAAO,KAAK,CAACqD,UAAU,MAG7E,IAAK,WACD,OAAO,2BACA3E,GADP,IAEI+D,MAAQd,EAAoBjD,EAAM+D,MAAM9D,EAAOqB,OAAO,KAAK,CAACqD,UAAU,MAY9E,IAAK,YACD,OAAO,2BAAI3E,GAAX,IAAkB+D,MAAO9D,EAAO8D,QAEpC,IAAK,mBACD,OAAO,2BAAI/D,GAAX,IAAkBe,YAAad,EAAOc,cAE1C,IAAK,wBACD,OAAO,2BAAIf,GAAX,IAAkBgE,gBAAiB/D,EAAOuE,aAE9C,IAAK,qBACD,OAAO,2BAAIxE,GAAX,IAAkBiE,WAAYhE,EAAOgE,aAEzC,IAAK,+BACD,OAAO,2BACAjE,GADP,IAEIkE,oBAAqBjE,EAAOgE,WAAP,sBAAwBjE,EAAMkE,qBAA9B,CAAmDjE,EAAOqB,SAAUtB,EAAMkE,oBAAoBU,QAAO,SAAApF,GAAE,OAAKS,EAAOqB,YAGhJ,QACI,OAAOtB,I,2CCzHR6E,EAAY,SAACC,GAGpB,IAFA,IAAIC,EAAcC,KAAKC,KAAKH,EAAMd,gBAAkBc,EAAM9D,UACtDkE,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAc,EAAGI,IAClCD,EAAME,KAAKD,GAEf,IAAIE,EAAiBL,KAAKC,KAAKF,EAAcD,EAAMQ,uBANL,EAOPC,mBAAS,GAPF,mBAOzCC,EAPyC,KAO3BC,EAP2B,KAQ1CC,GAAcF,EAAe,GAAKV,EAAMQ,sBAAwB,EAChEK,EAAcH,EAAeV,EAAMQ,sBAEvC,OAAO,sBAAK5C,UAAWC,IAAEiD,QAAlB,UAECJ,EAAe,EAAI,wBAAQK,QAAS,kBAAMJ,EAAiBD,EAAe,IAAvD,kBAA2E,GAEjGN,EAAMN,QAAO,SAAAkB,GAAC,OAAIA,GAAKJ,GAAcI,GAAKH,KAAarC,KAAI,SAACwC,EAAGX,GAC5D,OAAO,oBAAYzC,UAAWC,IAAEoD,QAAzB,SACH,sBAAMrD,UAAWoC,EAAM/D,cAAgB+E,EAAInD,IAAEK,OAAS,GAAI6C,QAAS,kBAAMf,EAAMkB,cAAcF,IAA7F,SAAkGA,KADtFX,MAMhBE,EAAiBG,EACb,wBAAQK,QAAS,kBAAMJ,EAAiBD,EAAe,IAAvD,oBAA6E,OCnC9E,MAA0B,8ECa9BS,EAAO,SAACnB,GACnB,IAAIoB,EAAOpB,EAAMoB,KACb,OAAO,sBAAKxD,UAAWC,IAAEwD,UAAlB,UACH,sBAAKzD,UAAWC,IAAEyD,OAAlB,UACI,cAAC,IAAD,CAAStD,GAAI,YAAcoD,EAAK1G,GAAhC,SACI,qBAAKkD,UAAWC,IAAE0D,IAAKC,IAA2B,OAAtBJ,EAAKK,OAAOC,MAAiBN,EAAKK,OAAOC,MAAQC,EAASC,IAAI,YAE9F,qBAAKhE,UAAWC,IAAEgE,eAAlB,SACKT,EAAKvB,SACA,wBAAQiC,SAAU9B,EAAMZ,oBAAoB2C,MAAK,SAAArH,GAAE,OAAIA,IAAO0G,EAAK1G,MAC3DqG,QAAS,kBAAMf,EAAMtD,SAAS0E,EAAK1G,KAAKkD,UAAWC,IAAEmE,OAD7D,sBAEA,wBAAQF,SAAU9B,EAAMZ,oBAAoB2C,MAAK,SAAArH,GAAE,OAAIA,IAAO0G,EAAK1G,MAC3DqG,QAAS,kBAAMf,EAAMzD,OAAO6E,EAAK1G,KAAKkD,UAAWC,IAAEmE,OAD3D,yBAId,sBAAKpE,UAAWC,IAAEoE,OAAlB,UACI,sBAAKrE,UAAWC,IAAEqE,QAAlB,UACI,qBAAKtE,UAAWC,IAAEsE,KAAlB,SAAyBf,EAAKvG,OAC9B,qBAAK+C,UAAWC,IAAEX,OAAlB,SAA2BkE,EAAKlE,YAEpC,sBAAKU,UAAWC,IAAEuE,QAAlB,UACI,qBAAKxE,UAAWC,IAAEsE,KAAlB,SAAyB,0BACzB,qBAAKvE,UAAWC,IAAEwE,KAAlB,SAAyB,iCClB9BC,EAAQ,SAACtC,GAGhB,IAFA,IAAIC,EAAcC,KAAKC,KAAKH,EAAMd,gBAAkBc,EAAM9D,UACtDkE,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAc,EAAGI,IAClCD,EAAME,KAAKD,GAGf,OAAO,sBAAKzC,UAAWC,IAAEiD,QAAlB,UACH,cAAC,EAAD,CAAW7E,YAAa+D,EAAM/D,YAAaiF,cAAelB,EAAMkB,cAAehF,SAAU8D,EAAM9D,SACpFgD,gBAAiBc,EAAMd,gBAAiBsB,sBAAuB,KAEtER,EAAMf,MAAMT,KAAI,SAAA+D,GAAC,OAAI,cAAC,EAAD,CAAiBnB,KAAMmB,EACjBnD,oBAAqBY,EAAMZ,oBAC3B1C,SAAUsD,EAAMtD,SAChBH,OAAQyD,EAAMzD,QAHTgG,EAAE7H,W,iBCrBjC8H,EAAc,SAACtH,GACxB,OAAOA,EAAMuH,UAAUvG,UAGdwG,EAAoB,SAACxH,GAC9B,OAAOA,EAAMuH,UAAUvD,iBAGdyD,EAAgB,SAACzH,GAC1B,OAAOA,EAAMuH,UAAUxG,aAGd2G,EAAgB,SAAC1H,GAC1B,OAAOA,EAAMuH,UAAUtD,YAEd0D,EAAyB,SAAC3H,GACnC,OAAOA,EAAMuH,UAAUrD,qBAMd0D,EAAUC,aAJA,SAAC7H,GACpB,OAAOA,EAAMuH,UAAUxD,SAG2B,SAACA,GACnD,OAAOA,KCRL+D,E,uKAEF,WACIC,KAAKjD,MAAMhE,SAASiH,KAAKjD,MAAM/D,YAAagH,KAAKjD,MAAM9D,Y,oBAG3D,WAAU,IAAD,OAIL,OAAO,qCACF+G,KAAKjD,MAAMb,WAAa,cAAC,IAAD,IAAe,KACxC,cAAC,EAAD,CAAO+B,cALS,SAACgC,GACjB,EAAKlD,MAAMhE,SAASkH,EAAY,EAAKlD,MAAM9D,WAKpCK,OAAQ0G,KAAKjD,MAAMzD,OACnBG,SAAUuG,KAAKjD,MAAMtD,SACrBuC,MAAOgE,KAAKjD,MAAMf,MAClBhD,YAAagH,KAAKjD,MAAM/D,YACxBiD,gBAAiB+D,KAAKjD,MAAMd,gBAC5BhD,SAAU+G,KAAKjD,MAAM9D,SACrBkD,oBAAqB6D,KAAKjD,MAAMZ,6B,GAnBtB+D,IAAMC,WAkEnCvG,QAAQwG,IAAI,QACGC,mBAfO,SAACpI,GACnB,MAAO,CACH+D,MAAO6D,EAAQ5H,GACfgB,SAAUsG,EAAYtH,GACtBgE,gBAAiBwD,EAAkBxH,GACnCe,YAAa0G,EAAezH,GAC5BiE,WAAYyD,EAAc1H,GAC1BkE,oBAAqByD,EAAuB3H,MAQZ,CAChCqB,ON1Dc,SAACC,GACnB,8CAAO,WAAOmC,GAAP,SAAAG,EAAA,sDACHJ,EAAmBlC,EAAQmC,EAAU5C,IAASQ,OAAOgH,KAAKxH,KAAWsD,GADlE,2CAAP,uDM0DI3C,SNrDgB,SAACF,GACrB,8CAAO,WAAOmC,GAAP,SAAAG,EAAA,sDACHJ,EAAmBlC,EAAQmC,EAAU5C,IAASW,SAAS6G,KAAKxH,KAAWuD,GADpE,2CAAP,uDMqDIE,iBACAT,4BACA/C,SNlFoB,SAACwH,EAActH,GAAf,8CAAoC,WAAOyC,GAAP,eAAAG,EAAA,6DAC5DH,EAASgB,GAAiB,IADkC,SAE3C5D,IAASC,SAASwH,EAAMtH,GAFmB,OAExDI,EAFwD,OAG5DqC,EAASgB,GAAiB,IAC1BhB,EAASa,EAAegE,IACxB7E,EAASY,EAASjD,EAAK8B,QACvBO,EAASc,EAAmBnD,EAAKoD,aAN2B,2CAApC,wDM6Eb4D,CAObN,G,kBC1FWS,GAAS,SAACzD,GAEnB,OAAO,yBAAQpC,UAAWC,KAAE6F,OAArB,UAEH,qBACIlC,IAAK,wGACT,qBAAK5D,UAAWC,KAAE8F,WAAlB,SACK3D,EAAM4D,OAAS,gCAAM5D,EAAM1C,MAAZ,MAAqB,wBAAQyD,QAASf,EAAM6D,OAAvB,uBACjC,cAAC,IAAD,CAASjG,UAAWC,KAAEP,MAAOU,GAAI,SAAjC,yBCTZxD,GAAiC,CACjCgC,OAAQ,EACRe,MAAO,QACPD,MAAO,OACPsG,QAAQ,GA4BCE,GAAkB,SAACtH,EAAgBe,EAAeD,EAAesG,GAC1E,MAAO,CACH5I,KAAM,0BACN+I,QAAS,CACLvH,SACAe,QACAD,QACAsG,YAICI,GAAkB,yDAAM,WAAOrF,GAAP,uBAAAG,EAAA,sEACZ1B,IAAQC,KADI,OAEA,KAD7BhB,EAD6B,QAEpBC,KAAK0C,aAAmB,EACR3C,EAASC,KAAKA,KAAlC5B,EAD2B,EAC3BA,GAAI6C,EADuB,EACvBA,MAAOD,EADgB,EAChBA,MAChBqB,EAASmF,GAAgBpJ,EAAI6C,EAAOD,GAAO,KAJd,2CAAN,uDAuBhB2G,GAnDK,WAAyF,IAAxF/I,EAAuF,uDAA7DV,GAAcW,EAA+C,uCACxG,OAAQA,EAAOH,MACX,IAAK,0BAED,OAAO,2BACAE,GACAC,EAAO4I,SAKlB,QACI,OAAO7I,ICfbgJ,G,4JAGF,WACI,OAAO,8BACH,cAAC,GAAD,eAAYjB,KAAKjD,c,GALCmD,IAAMC,WAgBrBE,gBANS,SAACpI,GAAD,MAA0B,CAC9C0I,OAAQ1I,EAAMiJ,KAAKP,OACnBtG,MAAOpC,EAAMiJ,KAAK7G,SAIkB,CACpCuG,OD6BkB,yDAAM,WAAOlF,GAAP,SAAAG,EAAA,sEACH1B,IAAQM,WADL,OAES,IAFT,OAEXpB,KAAK0C,YACdL,EAASmF,GAAgB,EAAG,IAAK,KAAK,IAHlB,2CAAN,wDC9BPR,CAEZY,I,4BCHUE,GAAiBC,aAA0B,CACpDC,KAAM,SADoBD,EAnByC,SAACrE,GACpE,OACI,uBAAMuE,SAAUvE,EAAMwE,aAAtB,UACI,8BACI,cAACC,GAAA,EAAD,CAAO5J,KAAM,QAAS6J,YAAa,QAASC,UAAW,YAE3D,8BACI,cAACF,GAAA,EAAD,CAAO5J,KAAM,WAAY6J,YAAa,WAAYC,UAAW,QAAS3J,KAAM,eAEhF,gCACI,cAACyJ,GAAA,EAAD,CAAOzJ,KAAM,WAAYH,KAAM,aAAc8J,UAAW,UAD5D,iBAGA,8BACI,mDAyBDrB,gBAHS,SAACpI,GAAD,MAAyB,CAC7C0I,OAAQ1I,EAAMiJ,KAAKP,UAEgB,CAACgB,MFKnB,SAACrH,EAAeC,EAAkBC,GAAlC,8CAA0D,WAAOkB,GAAP,SAAAG,EAAA,sEACtD1B,IAAQE,MAAMC,EAAOC,EAAUC,GADuB,OAE1C,IAF0C,OAE9DnB,KAAK0C,YACdL,EAASqF,MAH8D,2CAA1D,wDELNV,EAfA,SAACtD,GAIZ,OAAIA,EAAM4D,OACA,cAAC,KAAD,CAAU5F,GAAI,aAEjB,gCACH,uCACA,cAACoG,GAAD,CAAgBG,SARH,SAACM,GACd7E,EAAM4E,MAAMC,EAAStH,MAAMsH,EAASrH,SAASqH,EAASpH,qBCjC1DjD,GAAiC,CACjCsK,cAAc,GAqCHC,GA7BI,WAA4F,IAA3F7J,EAA0F,uDAAhEV,GAAcW,EAAkD,uCAC1G,OAAQA,EAAOH,MACX,IAAK,sBACD,OAAO,2BACAE,GADP,IAEI4J,cAAc,IAGtB,QACI,OAAO5J,ICpBN8J,GAAe,SAAC5B,GACzB,OAAQ,SAACpD,GACN,OAAQ,cAAC,IAAMiF,SAAP,CAAgBC,SAAU,8BAAK,cAAC,IAAD,MAA/B,SACH,cAAC9B,EAAD,eAAepD,QCOrBmF,GAAmBhC,IAAMiC,MAAK,kBAAM,iCACpCC,GAAmBlC,IAAMiC,MAAK,kBAAM,iCAYpCE,G,uKACF,WACIrC,KAAKjD,MAAMuF,kB,oBAGf,WACI,OAAKtC,KAAKjD,MAAMwF,YAIZ,sBAAK5H,UAAU,cAAf,UACI,cAAC,GAAD,IACA,sBAAKA,UAAU,gBAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACI,cAAC,KAAD,CAAO6H,KAAK,WAAWC,OAAUV,GAAaG,MAC9C,cAAC,KAAD,CAAOM,KAAK,mBAAmBC,OAAQV,GAAaK,MACpD,cAAC,KAAD,CAAOI,KAAK,SAASC,OAAQ,kBAAM,cAAC,EAAD,OACnC,cAAC,KAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,cAAC,GAAD,gBAXxC,cAAC,IAAD,Q,GAPDtC,aA8BLuC,GAAerC,aAHJ,SAACpI,GAAD,MAA+C,CACnEsK,YAAatK,EAAM0K,IAAId,gBAGN,CAACS,cFvBO,kBAAM,SAAC5G,GAChC,IAAIkH,EAAUlH,EAASqF,MAEvB8B,QAAQC,IAAI,CAACF,IACRzJ,MAAK,WACFuC,EAVD,CACH3D,KAAM,8BE0BcsI,CAE1BgC,I,4BCxDE9K,GAAe,GAUJwL,GANO,WAAkE,IAAjE9K,EAAgE,uDAA3CV,GAGxC,OAAOU,G,oBCGA+K,GAAUC,aAAgB,CACjCC,YAAaC,KACbC,YAAapL,KACbqL,QAASN,GACTvD,UAAW7C,EACXuE,KAAMF,GACNK,KAAMiC,KACNX,IAAKb,KAIHyB,GAAmBC,OAAOC,sCAAwCC,KAClEC,GAA4BC,aAAYZ,GAASO,GAAiBM,aAAgBC,QAIxFN,OAAOO,UAAYJ,GAEJA,UCvBfK,IAASvB,OACL,cAAC,IAAD,CAAewB,SAAUC,kBAAzB,SACI,eAAC,IAAD,CAAUP,MAAOA,GAAjB,UACI,cAACjB,GAAD,IADJ,SAIJyB,SAASC,eAAe,U,kECbb,UAA0B,iC,OCE9BC,EAAY,WACtB,OAAO,8BACH,qBAAK9F,IAAK+F,EAAM3F,IAAI,gB,mBCHzBrG,EAAOC,QAAU,CAAC,QAAU,2BAA2B,QAAU,2BAA2B,OAAS,4B,mBCArGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,WAAa,6B,2NCoBzFhB,EAAe,CACfgN,MACI,CACI,CAAC9M,GAAI,EAAGC,MAAO,kBAAmB8M,KAAM,IACxC,CAAC/M,GAAI,EAAGC,MAAO,qBAAsB8M,KAAM,KAEnDC,QAAS,KACTxK,OAAQ,IAgCCyK,EAAuB,SAACC,GACjC,MAAO,CACH5M,KAAM,WACN4M,gBAWKC,EAAY,SAAC3K,GACtB,MAAO,CACHlC,KAAM,aACNkC,WAWK4K,EAAiB,SAACtL,GAAD,8CAAoB,WAAOmC,GAAP,eAAAG,EAAA,sEACzB/C,IAASa,WAAWJ,GADK,OAC1CH,EAD0C,OAE9CsC,EArBO,CACH3D,KAAM,mBACN0M,QAmBoBrL,EAASC,OAFa,2CAApB,uDAKjByL,EAAgB,SAACvL,GAAD,8CAAoB,WAAOmC,GAAP,eAAAG,EAAA,sEACxB/B,IAAWC,UAAUR,GADG,OACzCH,EADyC,OAE7CsC,EAASkJ,EAAUxL,EAASC,OAFiB,2CAApB,uDAKhB0L,EAAmB,SAAC9K,GAAD,8CAAoB,WAAOyB,GAAP,SAAAG,EAAA,sEAC3B/B,IAAWE,aAAaC,GADG,OAEf,IAFe,OAEnCZ,KAAK0C,YACdL,EAASkJ,EAAU3K,IAHyB,2CAApB,uDAMjBkJ,IAxEQ,WAA2I,IAA1IlL,EAAyI,uDAAhHV,EAAcW,EAAkG,uCAC7J,OAAQA,EAAOH,MACX,IAAK,WACD,IAAIiN,EACW,CACXvN,IAAI,IAAIW,MAAOC,UACfX,MAAOQ,EAAOyM,YACdH,MAAM,IAAIpM,MAAOC,WAErB,OAAO,2BAAIJ,GAAX,IAAkBsM,MAAM,GAAD,mBAAMtM,EAAMsM,OAAZ,CAAmBS,MAG9C,IAAK,aACD,OAAO,2BAAI/M,GAAX,IAAkBgC,OAAQ/B,EAAO+B,SAErC,IAAK,mBACD,OAAO,2BAAIhC,GAAX,IAAkBwM,QAASvM,EAAOuM,UAGtC,IAAK,WACD,OAAO,2BAAIxM,GAAX,IAAkBsM,MAAO,YAAItM,EAAMsM,OAAO1H,QAAO,SAAAoI,GAAC,OAAIA,EAAExN,KAAOS,EAAOT,QAG1E,QACI,OAAOQ,M","file":"static/js/main.48a5cfea.chunk.js","sourcesContent":["export type SendMessageCreatorType = ReturnType<typeof SendMessageAC>\n\nexport type newPostTextType = string\n\n\nexport type DialogsType = {\n    id: number\n    name: string\n\n}\n\nexport type MessagesType = {\n    id: number\n    title: string\n}\n\n\nlet initialState: initialStateType = {\n    messages: [\n        {id: 1, title: 'hi'},\n        {id: 2, title: 'How is yor it kamasutra?'},\n        {id: 3, title: 'YoO'},\n        {id: 4, title: 'Сool dude'}\n    ],\n    dialogs: [\n        {id: 1, name: 'Petr'},\n        {id: 2, name: 'Sasha'},\n        {id: 3, name: 'Oleg'},\n        {id: 4, name: 'Victor'}\n    ],\n\n}\n\nexport type initialStateType = {\n    messages: Array<MessagesType>\n    dialogs: Array<DialogsType>\n}\n\nconst dialogsReducer = (state: initialStateType = initialState, action: SendMessageCreatorType): initialStateType => {\n    switch (action.type) {\n        case 'SEND-MESSAGE' :\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messages: [...state.messages, {id: new Date().getTime(), title: body}],\n                dialogs: [...state.dialogs],\n            };\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const SendMessageAC = (newMessageBody:string) => {\n    return {\n        type: 'SEND-MESSAGE',\n        newMessageBody\n\n    } as const\n}\n\n\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__2BwpC\",\"wrapper\":\"Users_wrapper__1M_rS\",\"wrapper_button\":\"Users_wrapper_button__3V9jZ\",\"img\":\"Users_img__36mqt\",\"itemsL\":\"Users_itemsL__2_IKl\",\"itemsR\":\"Users_itemsR__1mP9L\",\"text\":\"Users_text__2ulzP\",\"marg\":\"Users_marg__3SjuI\",\"button\":\"Users_button__1nFpn\",\"wraooer_button\":\"Users_wraooer_button__bSzwm\",\"texT\":\"Users_texT__ekBGZ\",\"itemsRL\":\"Users_itemsRL__LYDgc\",\"itemsRR\":\"Users_itemsRR__1LgP2\",\"status\":\"Users_status__2TpqI\"};","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        \"API-KEY\": \"4f7a90cd-f073-4cab-b304-b853b0aa67c3\"\n    },\n\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\n            return response.data\n        })\n    },\n    follow(userId: number) {\n        return instance.post(`follow/${userId}`)\n    },\n\n    unfollow(userId: number) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId: number) {\n        console.warn('worning')\n        // return instance.get(`profile/` + userId)\n        return profileAPI.getProfile(userId)\n    }\n}\n\n\nexport const profileAPI = {\n    getProfile(userId: number) {\n        return instance.get(`profile/` + userId)\n    },\n    getStatus(userId: number) {\n        return instance.get(`profile/status/` + userId)\n    },\n    updateStatus(status: string) {\n        return instance.put(`profile/status`, {status: status})\n    }\n\n}\n\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email: string, password: number, rememberMe: boolean = false) {\n        return instance.post('auth/login', {email, password, rememberMe})\n    },\n    loginOut() {\n        return instance.delete('auth/login')\n    },\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2LPqS\",\"item\":\"Nav_item__2ic2h\",\"active\":\"Nav_active__22-sI\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Nav.module.css'\n\nconst Nav = () => {\n    return <nav className={s.nav}>\n        <div className={s.item}>\n            <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\n        </div>\n        <div className={`${s.item} ${s.active}`}>\n            <NavLink to='/Dialogs' activeClassName={s.active}>Messages</NavLink>\n        </div>\n        <div className={`${s.item} ${s.active}`}>\n            <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\n        </div>\n        <div className={s.item}><a>News</a></div>\n        <div className={s.item}><a>Music</a></div>\n        <div className={s.item}><a>Settings</a></div>\n    </nav>\n}\n\nexport default Nav","import React from \"react\";\r\nimport {UsersType} from \"../components/redux/users-reducer\";\r\n\r\n\r\nexport let updateObjectInArray = (items: UsersType[],itemId:number, objectPropName: any,newObjectProps:{}) => {\r\n\r\n\r\n\r\n    return  items.map(m => {\r\n        // @ts-ignore\r\n            if (m[objectPropName]=== itemId) {\r\n                return {...m, ...newObjectProps}\r\n            }\r\n            return m;\r\n        }\r\n    )\r\n}","import {Dispatch} from \"redux\";\nimport {usersAPI} from \"../../API/Api\";\nimport {updateObjectInArray} from \"../../utils/helper\";\n\nexport type followCreatorType = ReturnType<typeof followSuccess>\nexport type unFollowCreatorType = ReturnType<typeof unFollowSuccess>\nexport type setUserCreatorType = ReturnType<typeof setUsers>\nexport type setCurrentPageAType = ReturnType<typeof setCurrentPage>\nexport type setTotalUsersCountAT = ReturnType<typeof setTotalUsersCount>\nexport type toggleIsFetchingAT = ReturnType<typeof toggleIsFetching>\nexport type toggleIsFollowingProgressT = ReturnType<typeof toggleIsFollowingProgress>\n\nexport const requestYsers = (page: number, pageSize: number) => async (dispatch: any) => {\n    dispatch(toggleIsFetching(true));\n    let data = await usersAPI.getUsers(page, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setCurrentPage(page));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n}\n\nconst followUnfollowFlow = async (userId: number, dispatch: Dispatch, apiMethod: Function, AC: Function) => {\n    dispatch(toggleIsFollowingProgress(true, userId));\n\n    let response = await apiMethod(userId);\n    if (response.data.resultCode === 0) {\n        dispatch(AC(userId))\n    }\n    dispatch(toggleIsFollowingProgress(false, userId))\n}\n\n\nexport const follow = (userId: number) => {\n    return async (dispatch: any) => {\n        followUnfollowFlow(userId, dispatch, usersAPI.follow.bind(usersAPI), followSuccess)\n    }\n}\n\nexport const unfollow = (userId: number) => {\n    return async (dispatch: any) => {\n        followUnfollowFlow(userId, dispatch, usersAPI.unfollow.bind(usersAPI), unFollowSuccess)\n    }\n}\n\nconst initialState = {\n    users: [],\n    pageSize: 100,\n    totalUsersCount: 0,\n    currentPage: 200,\n    isFetching: false,\n    followingInProgress: [],\n}\n\n\nexport type followingInProgressType = {}\nexport type UsersType = {\n    id: number\n    followed: boolean\n    name: string\n    //location: locationType\n    status: string\n    photos: photosType\n\n}\n\nexport type photosType = {\n    small: string\n    large: string\n}\n\nexport type locationType = {\n    city: string\n    country: string\n}\nexport type initialStateType = {\n    users: UsersType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: followingInProgressType[]\n}\n\ntype wrapperType = followCreatorType |\n    unFollowCreatorType |\n    setUserCreatorType |\n    setCurrentPageAType |\n    setTotalUsersCountAT |\n    toggleIsFetchingAT |\n    toggleIsFollowingProgressT\n\nconst usersReducer = (state: initialStateType = initialState, action: wrapperType) => {\n    switch (action.type) {\n        case 'FOLLOW' :\n            return {\n                ...state,\n                users: updateObjectInArray(state.users,action.userId,'id',{followed: true})\n\n            }\n        case 'UNFOLLOW' :\n            return {\n                ...state,\n                users:  updateObjectInArray(state.users,action.userId,'id',{followed: false})\n\n                //\n                //\n                //     state.users.map((m) => {\n                //         if (m.id === action.userId) {\n                //             return {...m, followed: false}\n                //         }\n                //         return m;\n                //     }\n                // )\n            }\n        case 'SET-USERS': {\n            return {...state, users: action.users}\n        }\n        case 'SET-CURRENT-PAGE': {\n            return {...state, currentPage: action.currentPage}\n        }\n        case 'SET-USERS-TOTAL-COUNT': {\n            return {...state, totalUsersCount: action.totalCount}\n        }\n        case 'TOGGLE-IS-FETCHING': {\n            return {...state, isFetching: action.isFetching}\n        }\n        case 'TOGGLE-IS-FOLLOWING-PROGRASS' :\n            return {\n                ...state,\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => !action.userId)\n            }\n\n        default:\n            return state\n    }\n}\nexport const followSuccess = (userId: number) => {\n    return {\n        type: 'FOLLOW',\n        userId,\n\n    } as const\n}\nexport const unFollowSuccess = (userId: number) => {\n    return {\n        type: 'UNFOLLOW',\n        userId,\n    } as const\n}\nexport const setUsers = (users: UsersType[]) => {\n    return {\n        type: 'SET-USERS',\n        users,\n    } as const\n}\nexport const setCurrentPage = (currentPage: number) => {\n    return {\n        type: 'SET-CURRENT-PAGE',\n        currentPage\n    } as const\n}\nexport const setTotalUsersCount = (totalCount: number) => {\n    return {\n        type: 'SET-USERS-TOTAL-COUNT',\n        totalCount\n    } as const\n}\nexport const toggleIsFetching = (isFetching: boolean) => {\n    return {\n        type: 'TOGGLE-IS-FETCHING',\n        isFetching\n    } as const\n}\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number) => {\n    return {\n        type: 'TOGGLE-IS-FOLLOWING-PROGRASS',\n        isFetching,\n        userId,\n    } as const\n}\n\n\nexport default usersReducer","import React, {useState} from 'react'\r\nimport s from './Paginator.module.css'\r\n\r\ntype  UsersPropsType = {\r\n    onPageChenged: (pageNumber: number) => void,\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    splittingAccountsInto: number\r\n\r\n}\r\n\r\nexport let Paginator = (props: UsersPropsType) => {\r\n    let pageesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pageesCount + 1; i++) {\r\n        pages.push(i)\r\n    }\r\n    let numberOfBlocks = Math.ceil(pageesCount / props.splittingAccountsInto);\r\n    let [porionNumber, setPortionNumber] = useState(1);\r\n    let leftBorder = (porionNumber - 1) * props.splittingAccountsInto + 1;\r\n    let rightBorder = porionNumber * props.splittingAccountsInto;\r\n\r\n    return <div className={s.wrapper}>\r\n        {\r\n            porionNumber > 1 ? <button onClick={() => setPortionNumber(porionNumber - 1)}>prev</button> : ''\r\n        }\r\n        {pages.filter(p => p >= leftBorder && p <= rightBorder).map((p, i) => {\r\n            return <li key={i} className={s.numbers}>\r\n                <span className={props.currentPage === p ? s.active : ''} onClick={() => props.onPageChenged(p)}>{p}</span>\r\n            </li>\r\n\r\n        })}\r\n        {\r\n            numberOfBlocks > porionNumber ?\r\n                <button onClick={() => setPortionNumber(porionNumber + 1)}> next </button> : ''\r\n        }\r\n    </div>\r\n\r\n\r\n    // return <ul className={s.number_pages}>\r\n    //\r\n    //     {pages.map((m,i) => <li key={i} onClick={()=>props.onPageChenged(m)}>1</li>)}\r\n    //         {pages.map((m, i) => {\r\n    //             return <li key={i} className={s.numbers}><span className={props.currentPage === m ? s.active : ''}\r\n    //                                                            onClick={() => props.onPageChenged(m)}>{m}</span></li>\r\n    //         })}\r\n    //     </ul>\r\n\r\n\r\n}","export default __webpack_public_path__ + \"static/media/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.f654bcd6.jpg\";","import React from 'react'\nimport s from \"./Users.module.css\";\nimport userImg from \"../../assets/images/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.jpg\";\nimport {followingInProgressType, UsersType} from \"../redux/users-reducer\";\nimport {NavLink} from 'react-router-dom';\n\ntype  UsersPropsType = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    user: UsersType\n    followingInProgress: followingInProgressType[]\n}\n\nexport let User = (props: UsersPropsType) => {\nlet user = props.user\n    return <div className={s.container}>\n        <div className={s.itemsL}>\n            <NavLink to={'/profile/' + user.id}>\n                <img className={s.img} src={user.photos.small !== null ? user.photos.small : userImg} alt=\"photo\"/>\n            </NavLink>\n            <div className={s.wrapper_button}>\n                {user.followed\n                    ? <button disabled={props.followingInProgress.some(id => id === user.id)}\n                              onClick={() => props.unfollow(user.id)} className={s.button}>Unfollow</button>\n                    : <button disabled={props.followingInProgress.some(id => id === user.id)}\n                              onClick={() => props.follow(user.id)} className={s.button}>Follow</button>}\n            </div>\n        </div>\n        <div className={s.itemsR}>\n            <div className={s.itemsRL}>\n                <div className={s.text}>{user.name}</div>\n                <div className={s.status}>{user.status}</div>\n            </div>\n            <div className={s.itemsRR}>\n                <div className={s.text}>{\"user.location.country\"}</div>\n                <div className={s.texT}>{\"user.location.city\"}</div>\n            </div>\n        </div>\n    </div>\n\n}","import React from 'react'\nimport s from \"./Users.module.css\";\nimport {followingInProgressType, UsersType} from \"../redux/users-reducer\";\nimport {Paginator} from \"../common/Paginator/Paginator\";\nimport {User} from \"./User\";\n\ntype  UsersPropsType = {\n    onPageChenged: (pageNumber: number) => void,\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    users: UsersType[]\n    currentPage: number\n    totalUsersCount: number\n    pageSize: number\n    followingInProgress: followingInProgressType[]\n}\n\nexport let Users = (props: UsersPropsType) => {\n    let pageesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= pageesCount + 1; i++) {\n        pages.push(i)\n    }\n\n    return <div className={s.wrapper}>\n        <Paginator currentPage={props.currentPage} onPageChenged={props.onPageChenged} pageSize={props.pageSize}\n                   totalUsersCount={props.totalUsersCount} splittingAccountsInto={10}/>\n        {\n            props.users.map(u => <User key={u.id} user={u}\n                                       followingInProgress={props.followingInProgress}\n                                       unfollow={props.unfollow}\n                                       follow={props.follow}\n                />\n            )\n        }\n    </div>\n}","import {AppStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\n\r\n\r\n\r\n\r\nexport const getPageSize = (state :AppStateType ) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUserCount = (state :AppStateType ) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getcurrentPage= (state :AppStateType ) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getisFetching = (state :AppStateType ) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getfollowingInProgress = (state :AppStateType ) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\nconst getUserSelector =(state: AppStateType) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUser = createSelector(getUserSelector,(users ) => {\r\n    return users\r\n});","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    UsersType,\r\n    toggleIsFollowingProgress,\r\n    followingInProgressType,\r\n    requestYsers\r\n} from \"../redux/users-reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/preloader/preloader\";\r\nimport {\r\n    getcurrentPage,\r\n    getfollowingInProgress,\r\n    getisFetching,\r\n    getPageSize, getUser,\r\n    getTotalUserCount,\r\n} from \"../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component <mapPropsdispatchType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        let onPageChenged = (pageNumber: number) => {\r\n            this.props.getUsers(pageNumber, this.props.pageSize);\r\n        }\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users onPageChenged={onPageChenged}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   currentPage={this.props.currentPage}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: followingInProgressType[]\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\n// let mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress,\r\n//     }\r\n// }\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        users: getUser(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getcurrentPage(state),\r\n        isFetching: getisFetching(state),\r\n        followingInProgress: getfollowingInProgress(state),\r\n    }\r\n}\r\n\r\n\r\nexport type mapPropsdispatchType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\nconsole.log('MSTP')\r\nexport default connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleIsFollowingProgress,\r\n        getUsers: requestYsers,\r\n    }\r\n)(UsersContainer)","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.css'\nimport {HeaderPropsType} from \"./HeaderComtainer\";\n\n\nexport const Header = (props: HeaderPropsType) => {\n\n    return <header className={s.header}>\n\n        <img\n            src={'https://www.markakimlik.com/wp-content/uploads/2020/09/Markalasma-Surecinde-Logo-ve-Renk-Duzeni.jpg'}/>\n        <div className={s.loginBlock}>\n            {props.isAuth ? <div>{props.login} - <button onClick={props.logOut}>logOut</button></div> :\n                <NavLink className={s.login} to={'/login'}>login</NavLink>}\n\n        </div>\n    </header>\n}\n","import {authAPI} from \"../../API/Api\";\n\ntype SetAuthUserDataT = ReturnType<typeof SetAuthUserData>\n\n\nlet initialState: initialStateType = {\n    userId: 1,\n    email: 'ailru',\n    login: 'free',\n    isAuth: false,\n}\n\nexport type initialStateType = {\n    userId: number\n    email: string\n    login: string\n    isAuth: boolean\n}\n\n\nconst AuthReducer = (state: initialStateType = initialState, action: SetAuthUserDataT): initialStateType => {\n    switch (action.type) {\n        case 'auth/SET-AUTH-USER-DATA': {\n\n            return {\n                ...state,\n                ...action.payload\n            };\n        }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const SetAuthUserData = (userId: number, email: string, login: string, isAuth: boolean) => {\n    return {\n        type: 'auth/SET-AUTH-USER-DATA',\n        payload: {\n            userId,\n            email,\n            login,\n            isAuth,\n        }\n    } as const\n}\nexport const getAuthUserData = () => async (dispatch: any) => {\n    let response = await authAPI.me();\n    if (response.data.resultCode === 0) {\n        let {id, email, login} = response.data.data\n        dispatch(SetAuthUserData(id, email, login, true))\n    }\n}\n\nexport const logIn = (email: string, password: number, rememberMe: boolean) => async (dispatch: any) => {\n    let response = await authAPI.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    }\n}\n\nexport const logOut = () => async (dispatch: any) => {\n    let response = await authAPI.loginOut();\n    if (response.data.resultCode === 0) {\n        dispatch(SetAuthUserData(0, '0', '0', false))\n    }\n    ;\n}\n\nexport default AuthReducer;","import React from 'react';\nimport {Header} from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../redux/redux-store\";\nimport {logOut} from \"../redux/auth-reducer\";\n\ntype mapDispatchToProps = {\n    logOut: () => any\n\n}\ntype mapStateToPropsType = {\n    isAuth: boolean\n    login: string\n}\n\nexport type HeaderPropsType = mapStateToPropsType & mapDispatchToProps\n\nclass HeaderContainer extends React.Component<HeaderPropsType> {\n\n\n    render() {\n        return <div>\n            <Header {...this.props} />\n        </div>\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n})\n\n\nexport default connect(mapStateToProps, {\n    logOut,\n})(HeaderContainer);\n","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {AppStateType} from \"../redux/redux-store\";\nimport {logIn} from \"../redux/auth-reducer\";\n\ntype FormExportType = {\n    email: string\n    password: string\n    rememberMe: boolean\n}\n\n export const LoginForm: React.FC<InjectedFormProps<FormExportType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name={'email'} placeholder={'email'} component={'input'}/>\n            </div>\n            <div>\n                <Field name={'password'} placeholder={'password'} component={'input'} type={'password'}/>\n            </div>\n            <div>\n                <Field type={'checkbox'} name={'rememberMe'} component={'input'}/>remember me\n            </div>\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nexport const LoginRedaxForm = reduxForm<FormExportType>({\n    form: 'login'\n})(LoginForm)\n\n const Login = (props:any) => {\n    const onSubmit = (formData: FormExportType) => {\n        props.logIn(formData.email,formData.password,formData.rememberMe)\n    }\n    if (props.isAuth){\n       return <Redirect to={'/profile'} />\n    }\n    return <div>\n        <h1>Login</h1>\n        <LoginRedaxForm onSubmit={onSubmit}/>\n    </div>\n}\nconst mapStateToProps = (state:AppStateType) => ({\n    isAuth: state.auth.isAuth\n})\nexport default connect(mapStateToProps,{logIn})(Login)\n\n","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\ntype initializedSuccessT = ReturnType<typeof initializedSuccess>\r\n\r\n\r\nlet initialState: initialStateType = {\r\n    initializesd: false\r\n}\r\n\r\nexport type initialStateType = {\r\n    initializesd: boolean\r\n}\r\n\r\n\r\nconst appReducer = (state: initialStateType = initialState, action: initializedSuccessT): initialStateType => {\r\n    switch (action.type) {\r\n        case 'INITIALIZED-SUCCESS': {\r\n            return {\r\n                ...state,\r\n                initializesd: true\r\n            };\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: 'INITIALIZED-SUCCESS',\r\n    } as const\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n}\r\n\r\nexport default appReducer;","import React from \"react\";\r\nimport {Preloader} from \"../components/common/preloader/preloader\";\r\n\r\nexport const WithSuspense = (Component : any) => {\r\n    return  (props:any) => {\r\n       return  <React.Suspense fallback={<div><Preloader/></div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Nav from \"./components/Nav/Nav\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderComtainer\";\nimport Login from \"./components/Login/Login\";\nimport {initializeApp} from \"./components/redux/app-reducer\";\nimport {Preloader} from \"./components/common/preloader/preloader\";\nimport { Route } from 'react-router-dom';\nimport {AppStateType} from \"./components/redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {WithSuspense} from \"./hoc/WithSuspense\";\n\nconst DialogsContainer = React.lazy(() => import (\"./components/Dialogs/DialogsContainer\"))\nconst ProfileContainer = React.lazy(() => import (\"./components/Profile/ProfileContainer\"))\n\n\ntype mapDispatchToPropsType = {\n    initializeApp: () => void\n}\ntype mapStateToPropsType = {\n    initialized: boolean\n}\n\ntype AppPropsComponentype = mapStateToPropsType & mapDispatchToPropsType\n\nclass App extends Component <AppPropsComponentype> {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <div className='app-container'>\n                    <Nav/>\n                    <div className='app-wrapper-contant'>\n                        <Route path='/dialogs' render = {WithSuspense(DialogsContainer)}/>\n                        <Route path='/profile/:userId' render={WithSuspense(ProfileContainer)}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\n    initialized: state.app.initializesd\n})\nexport const AppContainer = connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n    mapStateToProps, {initializeApp}\n)(App)\n","export type sideBarType = {}\n\nlet initialState = {\n\n}\n\nconst sidebareducer = (state: sideBarType = initialState, action: any): sideBarType => {\n\n\n    return state\n}\n\nexport default sidebareducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebareducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport AuthReducer from \"./auth-reducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport {reducer as formReducer} from 'redux-form';\nimport appReducer from \"./app-reducer\";\nimport { Store } from \"redux\";\nimport { compose } from \"redux\";\n\nexport let reducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sideBar: sidebareducer,\n    usersPage: usersReducer,\n    auth: AuthReducer,\n    form: formReducer,\n    app: appReducer,\n});\nexport type AppStateType = ReturnType<typeof reducer>\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store:Store<AppStateType> = createStore(reducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n//let store: Store<AppStateType> = createStore(reducer, applyMiddleware(thunkMiddleware));\n// @ts-ignore\nwindow.__store__ = store;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport {AppContainer} from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./components/redux/redux-store\";\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <AppContainer/>,\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root'));\n","export default __webpack_public_path__ + \"static/media/load.77dd8198.gif\";","import load from \"../../../assets/images/load.gif\";\r\n\r\nexport let Preloader = () => {\r\n return <div>\r\n     <img src={load} alt=\"loading\"/>\r\n </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Paginator_wrapper__1WRr9\",\"numbers\":\"Paginator_numbers__UU_WV\",\"active\":\"Paginator_active__TiSZ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__fHWjq\",\"login\":\"Header_login__3bGGL\",\"loginBlock\":\"Header_loginBlock__3aQOw\"};","import {profileAPI, usersAPI} from \"../../API/Api\";\n\n\nexport type AddPostActionType = ReturnType<typeof addPostActionCreator>\nexport type setUserProfileTYpe = ReturnType<typeof setUserProfile>\nexport type setStatusTYpe = ReturnType<typeof setStatus>\nexport type delPostTYpe = ReturnType<typeof delPost>\n\nexport type ProfilePageType = {\n    posts: Array<PostType>\n    profile: any\n    status: string\n}\n\nexport type PostType = {\n    id: number\n    title: string\n    like: number\n}\n\n\nlet initialState = {\n    posts:\n        [\n            {id: 1, title: 'hi, how are you', like: 12},\n            {id: 2, title: 'it`s my first post', like: 15}\n        ],\n    profile: null,\n    status: ''\n}\n\n\nconst profileReducer = (state: ProfilePageType = initialState, action: AddPostActionType | setUserProfileTYpe | setStatusTYpe | delPostTYpe): ProfilePageType => {\n    switch (action.type) {\n        case 'ADD-POST': {\n            let newPost:\n                PostType = {\n                id: new Date().getTime(),\n                title: action.newPostText,\n                like: new Date().getTime(),\n            };\n            return {...state, posts: [...state.posts, newPost]};\n        }\n\n        case 'SET-STATUS' :\n            return {...state, status: action.status}\n\n        case 'SET-USER-PROFILE':\n            return {...state, profile: action.profile}\n\n\n        case 'DEL-POST':\n            return {...state, posts: [...state.posts].filter(f => f.id !== action.id)}\n\n\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (newPostText: string) => {\n    return {\n        type: 'ADD-POST',\n        newPostText\n    } as const\n}\n\n\nexport const setUserProfile = (profile: any) => {\n    return {\n        type: 'SET-USER-PROFILE',\n        profile\n    } as const\n}\nexport const setStatus = (status: string) => {\n    return {\n        type: 'SET-STATUS',\n        status\n    } as const\n}\n\nexport const delPost = (id: number) => {\n    return {\n        type: 'DEL-POST',\n        id\n    } as const\n}\n\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\n    let response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data))\n}\n\nexport const getUserStatus = (userId: number) => async (dispatch: any) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data))\n}\n\nexport const updateUserStatus = (status: string) => async (dispatch: any) => {\n    let response = await profileAPI.updateStatus(status);\n    if (response.data.resultCode !== 0) {\n        dispatch(setStatus(status))\n    }\n}\nexport default profileReducer;"],"sourceRoot":""}