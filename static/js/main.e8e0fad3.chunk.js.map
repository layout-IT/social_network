{"version":3,"sources":["components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.module.css","components/Nav/Nav.module.css","components/Nav/Nav.tsx","components/redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogsItem.tsx","components/Dialogs/Dialogs.tsx","hoc/WithAythRedirect.tsx","components/Dialogs/Dialogs-container.tsx","API/Api.ts","components/redux/users-reducer.tsx","assets/images/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.jpg","components/Users/Users.tsx","assets/images/load.gif","components/common/preloader/preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/redux/profile-reducer.tsx","components/Profile/Myposts/Post/Post.tsx","components/Profile/Myposts/MyPosts.tsx","components/Profile/Myposts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","components/redux/auth-reducer.tsx","components/Header/HeaderComtainer.tsx","components/Login/Login.tsx","App.tsx","components/redux/sidebar-reducer.tsx","components/redux/redux-store.tsx","index.tsx","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Profile/Myposts/Post/Post.module.css"],"names":["module","exports","Nav","className","s","nav","item","to","activeClassName","active","initialState","messages","id","title","dialogs","name","dialogsReducer","state","action","type","body","newMessageBody","Date","getTime","DialigItem","props","dialog","Message","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","mapStatetoPropsForRedirect","isAuth","auth","withAythRedirect","Component","connect","restProps","AuthRedirectComponent","dialogsElement","map","d","messagesElements","m","dialogs__items","values","SendMessage","DialogsContainer","dialogsPage","dispatch","SendMessageAC","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unFollowSuccess","setUsers","setTotalUsersCount","totalCount","toggleIsFetching","toggleIsFollowingProgress","usersReducer","followed","filter","Users","pageesCount","Math","ceil","pages","i","push","wrapper","number_pages","numbers","onClick","e","onPageChenged","u","container","itemsL","img","src","photos","small","userImg","alt","wrapper_button","disabled","some","unfollow","button","follow","itemsR","itemsRL","text","itemsRR","texT","Preloader","load","UsersContainer","this","getUsers","pageNumber","React","usersPage","resultCode","setCurrentPage","items","ProfileStatus","useState","editMode","setState","onChange","currentTarget","value","autoFocus","onBlur","onDoubleClick","ProfileInfo","profile","picture","large","posts","like","setStatus","profileReducer","newPost","newPostText","Post","AddNewPostReduxForm","MyPosts","postsElement","p","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","match","params","getUserProfile","getUserStatus","updateUserStatus","WithUrlDataContainerComponent","withRouter","Header","header","loginBlock","login","email","AuthReducer","HeaderContainer","getAuthUserData","SetAuthUserData","LoginRedaxForm","Login","formData","App","path","render","sidebareducer","reducer","combineReducers","sideBar","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e8e0fad3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__2BwpC\",\"wrapper\":\"Users_wrapper__1M_rS\",\"wrapper_button\":\"Users_wrapper_button__3V9jZ\",\"img\":\"Users_img__36mqt\",\"itemsL\":\"Users_itemsL__2_IKl\",\"itemsR\":\"Users_itemsR__1mP9L\",\"text\":\"Users_text__2ulzP\",\"marg\":\"Users_marg__3SjuI\",\"button\":\"Users_button__1nFpn\",\"wraooer_button\":\"Users_wraooer_button__bSzwm\",\"texT\":\"Users_texT__ekBGZ\",\"itemsRL\":\"Users_itemsRL__LYDgc\",\"itemsRR\":\"Users_itemsRR__1LgP2\",\"status\":\"Users_status__2TpqI\",\"number_pages\":\"Users_number_pages__1QM4j\",\"numbers\":\"Users_numbers__19fat\",\"active\":\"Users_active__1QTS_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contant\":\"ProfileInfo_contant__2QIyq\",\"picture\":\"ProfileInfo_picture__13Qxy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__1GQPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2LPqS\",\"item\":\"Nav_item__2ic2h\",\"active\":\"Nav_active__22-sI\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Nav.module.css'\n\nconst Nav = () => {\n    return <nav className={s.nav}>\n        <div className={s.item}>\n            <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\n        </div>\n        <div className={`${s.item} ${s.active}`}>\n            <NavLink to='/Dialogs' activeClassName={s.active}>Messages</NavLink>\n        </div>\n        <div className={`${s.item} ${s.active}`}>\n            <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\n        </div>\n        <div className={s.item}><a>News</a></div>\n        <div className={s.item}><a>Music</a></div>\n        <div className={s.item}><a>Settings</a></div>\n    </nav>\n}\n\nexport default Nav","export type SendMessageCreatorType = ReturnType<typeof SendMessageAC>\n\nexport type newPostTextType = string\n\n\nexport type DialogsType = {\n    id: number\n    name: string\n\n}\n\nexport type MessagesType = {\n    id: number\n    title: string\n}\n\n\nlet initialState: initialStateType = {\n    messages: [\n        {id: 1, title: 'hi'},\n        {id: 2, title: 'How is yor it kamasutra?'},\n        {id: 3, title: 'YoO'},\n        {id: 4, title: 'Сool dude'}\n    ],\n    dialogs: [\n        {id: 1, name: 'Petr'},\n        {id: 2, name: 'Sasha'},\n        {id: 3, name: 'Oleg'},\n        {id: 4, name: 'Victor'}\n    ],\n\n}\n\nexport type initialStateType = {\n    messages: Array<MessagesType>\n    dialogs: Array<DialogsType>\n}\n\nconst dialogsReducer = (state: initialStateType = initialState, action: SendMessageCreatorType): initialStateType => {\n    switch (action.type) {\n        case 'SEND-MESSAGE' :\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messages: [...state.messages, {id: new Date().getTime(), title: body}],\n                dialogs: [...state.dialogs],\n            };\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const SendMessageAC = (newMessageBody:string) => {\n    return {\n        type: 'SEND-MESSAGE',\n        newMessageBody\n\n    } as const\n}\n\n\nexport default dialogsReducer;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './../Dialogs.module.css'\n\nfunction DialigItem(props: DialigItemType) {\n    return <div className={s.dialog + ' ' + s.active}>\n        <NavLink to={'/dealogs/' + props.id}>{props.name}</NavLink>\n    </div>\n}\n\ntype DialigItemType = {\n    id: number\n    name: string\n}\n\nexport default DialigItem","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialigItem from \"./DialogItem/DialogsItem\";\r\nimport {DialogsPropsType} from \"./Dialogs-container\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Field, reduxForm, InjectedFormProps} from \"redux-form\";\r\n\r\nfunction Message(props: MessageType) {\r\n    return <div className={s.message}>{props.title}</div>\r\n}\r\n\r\ntype MessageType = {\r\n    title: string\r\n}\r\n\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n    let dialogsElement = props.dialogs.map(d => <DialigItem key={d.id} name={d.name} id={d.id}/>)\r\n    debugger\r\n    let messagesElements = props.messages.map(m => <Message key={m.id} title={m.title}/>)\r\n\r\n    let addNewMessage = (values: any) => {\r\n        props.SendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (props.isAuth === false) {\r\n        return <Redirect to={\"/login\"}/>\r\n\r\n\r\n    }\r\n\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogs__items}>\r\n            {dialogsElement}\r\n\r\n        </div>\r\n        <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps> = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field component='textarea' placeholder='Enter something' name='newMessageBody'> </Field>\r\n        <button>Send</button>\r\n    </form>\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)","import React, {ComponentType} from 'react'\nimport {Redirect} from \"react-router-dom\";\nimport {AppStateType} from \"../components/redux/redux-store\";\nimport {connect} from \"react-redux\";\n\ntype mapStatetoPropsForRedirectType = {\n    isAuth: boolean\n}\nlet mapStatetoPropsForRedirect = (state: AppStateType): mapStatetoPropsForRedirectType => ({\n    isAuth: state.auth.isAuth,\n})\n\nexport function  withAythRedirect<T>(Component: ComponentType<T>){\n    function RedirectComponent(props:mapStatetoPropsForRedirectType) {\n        let {isAuth, ...restProps} = props\n\n        if (!isAuth) {\n            return <Redirect to={'/login'}/>\n        }\n        return <Component {...restProps as T}/>\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStatetoPropsForRedirect)(RedirectComponent)\n\n\n    return ConnectedAuthRedirectComponent\n}","import {\r\n    DialogsType,\r\n    MessagesType,\r\n    newPostTextType,\r\n    SendMessageAC,\r\n} from \"../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {withAythRedirect} from \"../../hoc/WithAythRedirect\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    messages:MessagesType[],\r\n    dialogs: DialogsType[],\r\n    newMessageBody:newPostTextType,\r\n    isAuth:boolean,\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    SendMessage: (newMessageBody:string) => void,\r\n}\r\n\r\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogs : state.dialogsPage.dialogs,\r\n        messages : state.dialogsPage.messages,\r\n    }\r\n}\r\nlet AuthRedirectComponent = withAythRedirect(Dialogs)\r\n\r\nlet mapDispatchToProps = (dispatch : Dispatch)=> {\r\n    return {\r\n\r\n        SendMessage: (newMessageBody:string) => {\r\n\r\n            dispatch(SendMessageAC(newMessageBody))\r\n        },\r\n\r\n\r\n    }\r\n}\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\n","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        \"API-KEY\": \"4f7a90cd-f073-4cab-b304-b853b0aa67c3\"\n    },\n\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\n            return response.data\n        })\n    },\n    follow(userId: number) {\n        return instance.post(`follow/${userId}`)\n    },\n\n    unfollow(userId: number) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId: number) {\n        console.warn('worning')\n       // return instance.get(`profile/` + userId)\n        return profileAPI.getProfile(userId)\n    }\n}\n\n\nexport const profileAPI = {\n    getProfile(userId: number) {\n        return instance.get(`profile/` + userId)\n    },\n    getStatus(userId: number){\n        return instance.get(`profile/status/` + userId)\n    },\n    updateStatus(status: string){\n        return instance.put(`profile/status`,{status : status})\n    }\n\n}\n\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    }\n}","import {usersAPI} from \"../../API/Api\";\n\nexport type followCreatorType = ReturnType<typeof followSuccess>\nexport type unFollowCreatorType = ReturnType<typeof unFollowSuccess>\nexport type setUserCreatorType = ReturnType<typeof setUsers>\nexport type setCurrentPageAType = ReturnType<typeof setCurrentPage>\nexport type setTotalUsersCountAT = ReturnType<typeof setTotalUsersCount>\nexport type toggleIsFetchingAT = ReturnType<typeof toggleIsFetching>\nexport type toggleIsFollowingProgressT = ReturnType<typeof toggleIsFollowingProgress>\n\nexport const getUsers = (currentPage: number, pageSize: number) => (dispatch: any) => {\n    dispatch(toggleIsFetching(true));\n\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    })\n}\n\nexport const follow = (userId: number) => {\n    debugger\n    return (dispatch: any) => {\n        dispatch(toggleIsFollowingProgress(true, userId));\n        usersAPI.follow(userId).then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(followSuccess(userId))\n            }\n            dispatch(toggleIsFollowingProgress(false, userId))\n\n        })\n    }\n}\n\nexport const unfollow = (userId: number) => {\n    debugger\n    return (dispatch: any) => {\n        dispatch(toggleIsFollowingProgress(true, userId));\n        usersAPI.unfollow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(unFollowSuccess(userId))\n                }\n                dispatch(toggleIsFollowingProgress(false, userId))\n\n            })\n    }\n}\n\nconst initialState = {\n    users: [],\n    pageSize: 100,\n    totalUsersCount: 0,\n    currentPage: 200,\n    isFetching: false,\n    followingInProgress: [],\n}\n\n\nexport type followingInProgressType = {}\nexport type UsersType = {\n    id: number\n    followed: boolean\n    name: string\n    //location: locationType\n    status: string\n    photos: photosType\n\n}\n\nexport type photosType = {\n    small: string\n    large: string\n}\n\nexport type locationType = {\n    city: string\n    country: string\n}\nexport type initialStateType = {\n    users: UsersType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: followingInProgressType[]\n}\n\ntype wrapperType = followCreatorType |\n    unFollowCreatorType |\n    setUserCreatorType |\n    setCurrentPageAType |\n    setTotalUsersCountAT |\n    toggleIsFetchingAT |\n    toggleIsFollowingProgressT\n\nconst usersReducer = (state: initialStateType = initialState, action: wrapperType) => {\n    switch (action.type) {\n        case 'FOLLOW' :\n            return {\n                ...state,\n                users: state.users.map((m) => {\n                        if (m.id === action.userId) {\n                            return {...m, followed: true}\n                        }\n                        return m;\n                    }\n                )\n            }\n        case 'UNFOLLOW' :\n            return {\n                ...state,\n                users: state.users.map((m) => {\n                        if (m.id === action.userId) {\n                            return {...m, followed: false}\n                        }\n                        return m;\n                    }\n                )\n            }\n        case 'SET-USERS': {\n            return {...state, users: action.users}\n        }\n        case 'SET-CURRENT-PAGE': {\n            return {...state, currentPage: action.currentPage}\n        }\n        case 'SET-USERS-TOTAL-COUNT': {\n            return {...state, totalUsersCount: action.totalCount}\n        }\n        case 'TOGGLE-IS-FETCHING': {\n            return {...state, isFetching: action.isFetching}\n        }\n        case 'TOGGLE-IS-FOLLOWING-PROGRASS' :\n            return {\n                ...state,\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => !action.userId)\n            }\n\n        default:\n            return state\n    }\n}\nexport const followSuccess = (userId: number) => {\n    return {\n        type: 'FOLLOW',\n        userId,\n\n    } as const\n}\nexport const unFollowSuccess = (userId: number) => {\n    return {\n        type: 'UNFOLLOW',\n        userId,\n    } as const\n}\nexport const setUsers = (users: UsersType[]) => {\n    return {\n        type: 'SET-USERS',\n        users,\n    } as const\n}\nexport const setCurrentPage = (currentPage: number) => {\n    return {\n        type: 'SET-CURRENT-PAGE',\n        currentPage\n    } as const\n}\nexport const setTotalUsersCount = (totalCount: number) => {\n    return {\n        type: 'SET-USERS-TOTAL-COUNT',\n        totalCount\n    } as const\n}\nexport const toggleIsFetching = (isFetching: boolean) => {\n    return {\n        type: 'TOGGLE-IS-FETCHING',\n        isFetching\n    } as const\n}\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number) => {\n    return {\n        type: 'TOGGLE-IS-FOLLOWING-PROGRASS',\n        isFetching,\n        userId,\n    } as const\n}\n\n\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.f654bcd6.jpg\";","import React from 'react'\nimport s from \"./Users.module.css\";\nimport userImg from \"../../assets/images/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.jpg\";\nimport {followingInProgressType, UsersType} from \"../redux/users-reducer\";\nimport {NavLink} from 'react-router-dom';\n\ntype  UsersPropsType = {\n    onPageChenged: (pageNumber: number) => void,\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    users: UsersType[]\n    currentPage: number\n    totalUsersCount: number\n    pageSize: number\n    followingInProgress: followingInProgressType[]\n}\n\nexport let Users = (props: UsersPropsType) => {\n    let pageesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= pageesCount + 1; i++) {\n        pages.push(i)\n    }\n    return <div className={s.wrapper}>\n        <ul className={s.number_pages}>\n            {pages.map((m, i) => {\n                return <li key={i} className={s.numbers}><span className={props.currentPage === m ? s.active : ''}\n                                                               onClick={(e) => props.onPageChenged(m)}>{m}</span></li>\n            })}\n        </ul>\n        {\n            props.users.map(u => <div className={s.container} key={u.id}>\n                <div className={s.itemsL}>\n                    <NavLink to={'/profile/' + u.id}>\n                        <img className={s.img} src={u.photos.small !== null ? u.photos.small : userImg} alt=\"photo\"/>\n                    </NavLink>\n                    <div className={s.wrapper_button}>\n                        {u.followed\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)}\n                                      onClick={() => props.unfollow(u.id)} className={s.button}>Unfollow</button>\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)}\n                                      onClick={() => props.follow(u.id)} className={s.button}>Follow</button>}\n                    </div>\n                </div>\n                <div className={s.itemsR}>\n                    <div className={s.itemsRL}>\n                        <div className={s.text}>{u.name}</div>\n                        <div className={s.status}>{u.status}</div>\n                    </div>\n                    <div className={s.itemsRR}>\n                        <div className={s.text}>{\"u.location.country\"}</div>\n                        <div className={s.texT}>{\"u.location.city\"}</div>\n                    </div>\n                </div>\n            </div>)\n        }\n    </div>\n}","export default __webpack_public_path__ + \"static/media/load.77dd8198.gif\";","import load from \"../../../assets/images/load.gif\";\r\n\r\nexport let Preloader = () => {\r\n return <div>\r\n     <img src={load} alt=\"loading\"/>\r\n </div>\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    UsersType,\r\n    toggleIsFollowingProgress,\r\n    followingInProgressType,\r\n    getUsers\r\n} from \"../redux/users-reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/preloader/preloader\";\r\n\r\nclass UsersContainer extends React.Component <mapPropsdispatchType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        let onPageChenged = (pageNumber: number) => {\r\n            this.props.getUsers(pageNumber, this.props.pageSize);\r\n        }\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users onPageChenged={onPageChenged}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   currentPage={this.props.currentPage}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: followingInProgressType[]\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\nexport type mapPropsdispatchType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\nexport default connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleIsFollowingProgress,\r\n        getUsers,\r\n    }\r\n)(UsersContainer)","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './ProfileStatus.module.css'\r\n\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: any\r\n}\r\n\r\nconst ProfileStatus = (props: ProfileStatusType) => {\r\n    let [state, setState] = useState({\r\n        editMode: false,\r\n        status: props.status\r\n    })\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setState({...state, status: e.currentTarget.value})\r\n    }\r\n    const activatedMode = () => {\r\n        setState({...state, editMode: true})\r\n    }\r\n    const deactivatedMode = () => {\r\n        setState({...state, editMode: false})\r\n        props.updateStatus(state.status)\r\n\r\n    }\r\n\r\n    return <div className={s.status}>\r\n        {!state.editMode\r\n            ?\r\n            <div>\r\n                <span onDoubleClick={activatedMode}>Status: {state.status} </span>\r\n            </div>\r\n            :\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivatedMode} value={state.status}/>\r\n        }\r\n    </div>\r\n\r\n}\r\nexport default ProfileStatus","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport {Preloader} from \"../../common/preloader/preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\ntype ProfileInfoType = {\r\n    profile: any\r\n    status:string\r\n    updateStatus:any\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoType) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.picture}>\r\n            <img src={props.profile.photos.large} alt=\"ptcture\"/>\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport default ProfileInfo","import {profileAPI, usersAPI} from \"../../API/Api\";\n\n\nexport type AddPostActionType = ReturnType<typeof addPostActionCreator>\nexport type setUserProfileTYpe = ReturnType<typeof setUserProfile>\nexport type setStatusTYpe = ReturnType<typeof setStatus>\n\nexport type ProfilePageType = {\n    posts: Array<PostType>\n    profile: any\n    status:string\n}\n\nexport type PostType = {\n    id: number\n    title: string\n    like: number\n}\n\n\n let initialState = {\n    posts:\n        [\n            {id: 1, title: 'hi, how are you', like: 12},\n            {id: 2, title: 'it`s my first post', like: 15}\n        ],\n    profile: null,\n     status:''\n}\n\n\n\nconst profileReducer = (state: ProfilePageType = initialState, action: AddPostActionType |setUserProfileTYpe|setStatusTYpe ): ProfilePageType => {\n    switch (action.type) {\n        case 'ADD-POST': {\n            let newPost:\n                PostType = {\n                id: new Date().getTime(),\n                title: action.newPostText,\n                like: new Date().getTime(),\n            };\n            return{...state,posts : [...state.posts, newPost]};\n        }\n\n        case 'SET-STATUS' :\n            return  {...state,status : action.status}\n\n        case 'SET-USER-PROFILE':\n            return {...state, profile: action.profile}\n        default:\n            return state;\n\n\n    }\n}\n\nexport const addPostActionCreator = (newPostText: string) => {\n    return {\n        type: 'ADD-POST',\n        newPostText\n    } as const\n}\n\n\nexport const setUserProfile = (profile : any) => {\n    return {\n        type: 'SET-USER-PROFILE',\n        profile\n    } as const\n}\nexport const setStatus = (status : string) => {\n    return {\n        type: 'SET-STATUS',\n        status\n    } as const\n}\n\n\nexport const getUserProfile = (userId : number) => (dispatch: any) => {\n    usersAPI.getProfile(userId).then(response => {\n        dispatch(setUserProfile(response.data))\n    })\n}\n\nexport const getUserStatus = (userId : number) => (dispatch: any) => {\n    profileAPI.getStatus(userId).then(response => {\n        dispatch(setStatus(response.data))\n    })\n}\n\nexport const updateUserStatus = (status : string) => (dispatch: any) => {\n    profileAPI.updateStatus(status).then(response => {\n        if (response.data.resultCode === 0){\n            dispatch(setStatus(status))\n        }\n    })\n}\nexport default profileReducer;","import React from 'react';\nimport s from './Post.module.css'\n\n\n\nconst Post = (props: any) => {\n    return <div className={s.wrapper}>\n        <div className={s.item}>\n            <img src={'https://ru.fishki.net/picsw/112009/18/bonus/face/face_photo_032.jpg'}/>\n            {props.message}\n        </div>\n        <span >like {props.like}</span>\n    </div>\n}\n\n\nexport default Post\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport s from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport {PropsMType} from \"./MyPostsContainer\";\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\n\nconst AddNewPostForm :React.FC<InjectedFormProps>= (props)=>{\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field name='newPostText'  component='textarea' />\n            <button >Add post</button>\n        </form>\n    )\n}\n\nexport const AddNewPostReduxForm = reduxForm({\n    form:'ProfileAddNewPostForm'\n})(AddNewPostForm)\n\nconst MyPosts = (props: PropsMType) => {\n\n    let postsElement = props.posts.map((p) => <Post key={p.id} message={p.title} like={p.like}/>);\n//    let newPostElement = React.createRef<HTMLTextAreaElement>()\n\n    let onAddPost = (values:any) => {\n        props.addPost(values.newPostText)\n\n    }\n\n    return <div>\n        <div>\n            My posts\n        </div>\n      <AddNewPostReduxForm onSubmit={onAddPost}  />\n        <div className={s.posts}>\n            {postsElement}\n        </div>\n    </div>\n\n}\n\n\n\nexport default MyPosts","import { addPostActionCreator, PostType} from \"../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\n\n\ntype mapStateToPropsType = {\n    posts: Array<PostType>\n\n}\n\ntype mapMDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n\n}\n\nexport type PropsMType = mapStateToPropsType & mapMDispatchToPropsType\n\n\nlet mapDispatchToProps = (dispatch: Dispatch): mapMDispatchToPropsType => {\n    return {\n        addPost: (newPostText: string) => {\n            dispatch(addPostActionCreator(newPostText))\n        },\n\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        posts: state.profilePage.posts,\n\n    }\n\n}\n\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport {MyPostsContainer} from \"./Myposts/MyPostsContainer\";\nimport {Redirect} from \"react-router-dom\";\n\ntype ProfileType = {\n    profile: any\n    status:string\n    updateStatus:any\n}\n\nconst Profile = (props: ProfileType) => {\n\n    return <div>\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n\n        <MyPostsContainer/>\n    </div>\n\n}\n\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {withAythRedirect} from \"../../hoc/WithAythRedirect\";\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: any\r\n}\r\n\r\ntype mapStatePropsType = {\r\n    profile: number\r\n    status: string\r\n}\r\n\r\n\r\ntype mapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getUserStatus:(userId: number) => void\r\n    updateUserStatus:(status : string) => void\r\n}\r\ntype OwnPropsType = mapStatePropsType & mapDispatchPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nfunction ProfileContainer(props: PropsType) {\r\n\r\n    let userId = props.match.params.userId\r\n    if (!userId) {\r\n        userId = '2';\r\n    }\r\n    props.getUserProfile(userId)\r\n    props.getUserStatus(userId)\r\n\r\n    return (\r\n        <Profile {...props} profile={props.profile} status={props.status} updateStatus={props.updateUserStatus}/>\r\n    )\r\n}\r\n\r\nlet AuthRedirectComponent = withAythRedirect(ProfileContainer)\r\n\r\n\r\nlet mapStatetoProps = (state: AppStateType): mapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status : state.profilePage.status,\r\n\r\n})\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\nexport default connect(mapStatetoProps, {\r\n    getUserProfile,getUserStatus,updateUserStatus\r\n})(WithUrlDataContainerComponent)","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.css'\nimport {HeaderPropsType} from \"./HeaderComtainer\";\n\n\nexport const Header = (props: HeaderPropsType) => {\n\n    return <header className={s.header}>\n\n        <img\n            src={'https://www.markakimlik.com/wp-content/uploads/2020/09/Markalasma-Surecinde-Logo-ve-Renk-Duzeni.jpg'}/>\n        <div className={s.loginBlock}>\n            {props.isAuth ? props.login : <NavLink className={s.login} to={'/login'}>login</NavLink>}\n\n        </div>\n    </header>\n}\n","import {authAPI} from \"../../API/Api\";\n\ntype SetAuthUserDataT = ReturnType<typeof SetAuthUserData>\n\n\nlet initialState: initialStateType = {\n    userId: 1,\n    email: 'ailru',\n    login: 'free',\n    isAuth: false,\n}\n\nexport type initialStateType = {\n    userId: number\n    email: string\n    login: string\n    isAuth: boolean\n}\n\n\nconst AuthReducer = (state: initialStateType = initialState, action: SetAuthUserDataT): initialStateType => {\n    switch (action.type) {\n        case 'SET-AUTH-USER-DATA': {\n\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n            };\n        }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const SetAuthUserData = (userId: number, email: string, login: string) => {\n    return {\n        type: 'SET-AUTH-USER-DATA',\n        data: {\n            userId,\n            email,\n            login,\n        }\n    } as const\n}\nexport const getAuthUserData=() => (dispatch: any) => {\n    authAPI.me()\n        .then(response => {\n        if (response.data.resultCode === 0) {\n            let {id, email, login} = response.data.data\n            dispatch(SetAuthUserData(id, email, login))\n        }\n    })\n\n}\nexport default AuthReducer;","import React from 'react';\nimport {Header} from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../redux/redux-store\";\nimport {getAuthUserData} from \"../redux/auth-reducer\";\n\ntype mapDispatchToProps = {\n    getAuthUserData: () => void\n}\n\ntype mapStateToPropsType = {\n    isAuth: boolean\n    login: string\n}\n\nexport type HeaderPropsType = mapStateToPropsType & mapDispatchToProps\n\nclass HeaderContainer extends React.Component<HeaderPropsType> {\n\n    componentDidMount() {\n        this.props.getAuthUserData()\n    }\n\n    render() {\n        return <div>\n            <Header {...this.props} />\n        </div>\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n})\n\n\nexport default connect(mapStateToProps, {\n    getAuthUserData,\n})(HeaderContainer);\n","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\n\ntype FormExportType = {\n    login: string\n    password: string\n    rememberMe: boolean\n}\n\nexport const LoginForm: React.FC<InjectedFormProps<FormExportType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name={'login'} placeholder={'Login'} component={'input'}/>\n            </div>\n            <div>\n                <Field name={'password'} placeholder={'password'} component={'input'}/>\n            </div>\n            <div>\n                <Field type={'checkbox'} name={'rememberMe'} component={'input'}/>remember me\n            </div>\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nexport const LoginRedaxForm = reduxForm<FormExportType>({\n    form: 'login'\n})(LoginForm)\n\nexport const Login = () => {\n    const onSubmit = (formData: FormExportType) => {\n    }\n    return <div>\n        <h1>Login</h1>\n        <LoginRedaxForm onSubmit={onSubmit}/>\n    </div>\n}\n","import React from 'react';\nimport './App.css';\nimport Nav from \"./components/Nav/Nav\";\nimport {Route} from \"react-router-dom\";\nimport {DialogsContainer} from \"./components/Dialogs/Dialogs-container\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderComtainer\";\nimport {Login} from \"./components/Login/Login\";\n\n\nfunction App() {\n\n    //add comment fo testing\n\n    return (\n        <div className=\"app-wrapper\">\n            <HeaderContainer/>\n            <div className='app-container'>\n                <Nav/>\n                <div className='app-wrapper-contant'>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userId' render={() => <ProfileContainer/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n\n\n\n\n","export type sideBarType = {}\n\nlet initialState = {\n\n}\n\nconst sidebareducer = (state: sideBarType = initialState, action: any): sideBarType => {\n\n\n    return state\n}\n\nexport default sidebareducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebareducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport AuthReducer from \"./auth-reducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport {reducer as formReducer} from 'redux-form';\n\nexport let reducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sideBar: sidebareducer,\n    usersPage: usersReducer,\n    auth: AuthReducer,\n    form:formReducer,\n});\nexport type AppStateType = ReturnType<typeof reducer>\n\nlet store = createStore(reducer, applyMiddleware(thunkMiddleware));\n// @ts-ignore\nwindow.store = store;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./components/redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>,\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1J_X1\",\"dialogs__items\":\"Dialogs_dialogs__items__2La5L\",\"active\":\"Dialogs_active__1w4Qp\",\"dialog\":\"Dialogs_dialog__2BkpL\",\"messages\":\"Dialogs_messages__3Q49x\",\"message\":\"Dialogs_message__2U4jD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__fHWjq\",\"login\":\"Header_login__3bGGL\",\"loginBlock\":\"Header_loginBlock__3aQOw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1xhAm\",\"wrapper\":\"Post_wrapper__lwSv7\"};"],"sourceRoot":""}