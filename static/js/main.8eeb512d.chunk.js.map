{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Profile/Myposts/Post/Post.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/Users.module.css","components/Header/Header.tsx","components/Nav/Nav.tsx","components/redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogsItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/Dialogs-container.tsx","components/redux/users-reducer.tsx","assets/images/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.jpg","components/Users/Users.tsx","assets/images/load.gif","components/common/preloader/preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/redux/profile-reducer.tsx","components/Profile/Myposts/Post/Post.tsx","components/Profile/Myposts/MyPosts.tsx","components/Profile/Myposts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","App.tsx","components/redux/sidebar-reducer.tsx","components/redux/redux-store.tsx","index.tsx","components/Nav/Nav.module.css"],"names":["module","exports","Header","className","s","header","src","Nav","nav","item","to","activeClassName","active","initialState","messages","id","title","dialogs","name","newMessageBody","dialogsReducer","state","action","type","body","Date","getTime","DialigItem","props","dialog","Message","message","DialogsContainer","connect","dialogsPage","dispatch","updateNewMassageBody","updateNewMassageBodyAC","SendMessage","dialogsElement","map","d","messagesElements","m","dialogs__items","placeholder","onChange","e","currentTarget","value","onClick","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","userId","followed","totalCount","Users","pageesCount","Math","ceil","pages","i","push","wrapper","number_pages","numbers","onPageChenged","u","container","itemsL","img","photos","small","userImg","alt","wrapper_button","unFollow","button","follow","itemsR","itemsRL","text","status","itemsRR","texT","Preloader","load","UsersContainer","this","toggleIsFetching","axios","get","then","response","setUsers","data","items","setTotalUsersCount","pageNumber","setCurrentPage","React","Component","usersPage","ProfileInfo","profile","picture","posts","like","newPostText","profileReducer","newPost","newText","Post","MyPosts","postsElement","p","newPostElement","createRef","current","onPostChange","ref","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","WithUrlDataContainerComponent","withRouter","useSelector","match","params","useEffect","setUserProfile","App","path","render","sidebareducer","reducer","combineReducers","sideBar","store","createStore","window","ReactDOM","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,mBCAvND,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,mBCAtDD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,QAAU,+B,uCCAnED,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,uBAAuB,eAAiB,8BAA8B,IAAM,mBAAmB,OAAS,sBAAsB,OAAS,sBAAsB,KAAO,oBAAoB,KAAO,oBAAoB,OAAS,sBAAsB,eAAiB,8BAA8B,KAAO,oBAAoB,QAAU,uBAAuB,QAAU,uBAAuB,OAAS,sBAAsB,aAAe,4BAA4B,QAAU,uBAAuB,OAAS,wB,wICQpiBC,EANA,WACX,OAAO,wBAAQC,UAAWC,IAAEC,OAArB,SACH,qBAAKC,IAAK,2G,gBCgBHC,EAjBH,WACR,OAAO,sBAAKJ,UAAWC,IAAEI,IAAlB,UACH,qBAAKL,UAAWC,IAAEK,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBP,IAAEQ,OAA1C,uBAEJ,qBAAKT,UAAS,UAAKC,IAAEK,KAAP,YAAeL,IAAEQ,QAA/B,SACI,cAAC,IAAD,CAASF,GAAG,WAAWC,gBAAiBP,IAAEQ,OAA1C,wBAEJ,qBAAKT,UAAS,UAAKC,IAAEK,KAAP,YAAeL,IAAEQ,QAA/B,SACI,cAAC,IAAD,CAASF,GAAG,SAASC,gBAAiBP,IAAEQ,OAAxC,qBAEJ,qBAAKT,UAAWC,IAAEK,KAAlB,SAAwB,uCACxB,qBAAKN,UAAWC,IAAEK,KAAlB,SAAwB,wCACxB,qBAAKN,UAAWC,IAAEK,KAAlB,SAAwB,+C,sBCC5BI,EAAiC,CACjCC,SAAU,CACN,CAACC,GAAI,EAAGC,MAAO,MACf,CAACD,GAAI,EAAGC,MAAO,4BACf,CAACD,GAAI,EAAGC,MAAO,OACf,CAACD,GAAI,EAAGC,MAAO,mBAEnBC,QAAS,CACL,CAACF,GAAI,EAAGG,KAAM,QACd,CAACH,GAAI,EAAGG,KAAM,SACd,CAACH,GAAI,EAAGG,KAAM,QACd,CAACH,GAAI,EAAGG,KAAM,WAElBC,eAAgB,IA4CLC,EAnCQ,WAAiI,IAAhIC,EAA+H,uDAArGR,EAAcS,EAAuF,uCACnJ,OAAQA,EAAOC,MACX,IAAK,0BACD,OAAO,2BAAIF,GAAX,IAAkBF,eAAgBG,EAAOE,OAE7C,IAAK,eACD,IAAIA,EAAOH,EAAMF,eACjB,OAAO,2BACAE,GADP,IAEIP,SAAS,GAAD,mBAAMO,EAAMP,UAAZ,CAAsB,CAACC,IAAI,IAAIU,MAAOC,UAAWV,MAAOQ,KAChEP,QAAQ,YAAKI,EAAMJ,SACnBE,eAAgB,KAGxB,QACI,OAAOE,I,iBCxCJM,MAXf,SAAoBC,GAChB,OAAO,qBAAKzB,UAAWC,IAAEyB,OAAS,IAAMzB,IAAEQ,OAAnC,SACH,cAAC,IAAD,CAASF,GAAI,YAAckB,EAAMb,GAAjC,SAAsCa,EAAMV,UCDpD,SAASY,EAAQF,GACb,OAAO,qBAAKzB,UAAWC,IAAE2B,QAAlB,SAA4BH,EAAMZ,Q,YC4EhCgB,EAAmBC,aAxBV,SAACZ,GACnB,MAAO,CACHJ,QAAUI,EAAMa,YAAYjB,QAC5BH,SAAWO,EAAMa,YAAYpB,SAC7BK,eAAgBE,EAAMa,YAAYf,mBAMjB,SAACgB,GACtB,MAAO,CACHC,qBAAsB,SAACZ,GACnBW,EHX0B,SAACX,GACnC,MAAO,CACHD,KAAM,0BACNC,QGQaa,CAAuBb,KAGpCc,YAAa,WAETH,EHRD,CACHZ,KAAM,qBGakBU,EDnEzB,SAAiBL,GACpB,IAAIW,EAAiBX,EAAMX,QAAQuB,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAuBvB,KAAMuB,EAAEvB,KAAMH,GAAI0B,EAAE1B,IAA1B0B,EAAE1B,OAC3D2B,EAAmBd,EAAMd,SAAS0B,KAAI,SAAAG,GAAC,OAAI,cAACb,EAAD,CAAoBd,MAAO2B,EAAE3B,OAAf2B,EAAE5B,OAC3DI,EAAiBS,EAAMT,eAU3B,OAAO,sBAAKhB,UAAWC,IAAEa,QAAlB,UACH,qBAAKd,UAAWC,IAAEwC,eAAlB,SACKL,IAGL,sBAAKpC,UAAWC,IAAEU,SAAlB,UACI,8BAAM4B,IACN,gCACI,0BAAUG,YAAa,kBAAmBC,SAb7B,SAACC,GACtB,IAAIvB,EAAOuB,EAAEC,cAAcC,MAC3BrB,EAAMQ,qBAAqBZ,IAYTyB,MAAO9B,EADjB,eAEA,wBAAQ+B,QAnBK,WACrBtB,EAAMU,eAkBE,8B,gCE9BVzB,EAAe,CACjBsC,MAAO,GACPC,SAAU,IACVC,gBAAiB,EACjBC,YAAa,IACbC,YAAY,GAyHDC,EApFM,WAAkE,IAAjEnC,EAAgE,uDAAtCR,EAAcS,EAAwB,uCAClF,OAAQA,EAAOC,MACX,IAAK,SACD,OAAO,2BACAF,GADP,IAEI8B,MAAO9B,EAAM8B,MAAMX,KAAI,SAACG,GAChB,OAAIA,EAAE5B,KAAOO,EAAOmC,OACT,2BAAId,GAAX,IAAce,UAAU,IAErBf,OAKvB,IAAK,WACD,OAAO,2BACAtB,GADP,IAEI8B,MAAO9B,EAAM8B,MAAMX,KAAI,SAACG,GAChB,OAAIA,EAAE5B,KAAOO,EAAOmC,OACT,2BAAId,GAAX,IAAce,UAAU,IAErBf,OAIvB,IAAK,YACD,OAAO,2BAAItB,GAAX,IAAkB8B,MAAO7B,EAAO6B,QAEpC,IAAK,mBACD,OAAO,2BAAI9B,GAAX,IAAkBiC,YAAahC,EAAOgC,cAE1C,IAAK,wBACD,OAAO,2BAAIjC,GAAX,IAAkBgC,gBAAiB/B,EAAOqC,aAE9C,IAAK,qBACD,OAAO,2BAAItC,GAAX,IAAkBkC,WAAYjC,EAAOiC,aAGzC,QACI,OAAOlC,I,iCCzFJ,MAA0B,8ECgB9BuC,EAAQ,SAAChC,GAGhB,IAFA,IAAIiC,EAAcC,KAAKC,KAAKnC,EAAMyB,gBAAkBzB,EAAMwB,UACtDY,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAc,EAAGI,IAClCD,EAAME,KAAKD,GAGf,OAAO,sBAAK9D,UAAWC,IAAE+D,QAAlB,UACH,oBAAIhE,UAAWC,IAAEgE,aAAjB,SACKJ,EAAMxB,KAAI,SAAAG,GACP,OAAO,oBAAIxC,UAAWC,IAAEiE,QAAjB,SAA0B,sBAAMlE,UAAWyB,EAAM0B,cAAgBX,EAAIvC,IAAEQ,OAAS,GAChDsC,QAAS,SAACH,GAAD,OAAOnB,EAAM0C,cAAc3B,IAD1C,SAC+CA,WAIpFf,EAAMuB,MAAMX,KAAI,SAAA+B,GAAC,OAAI,sBAAKpE,UAAWC,IAAEoE,UAAlB,UACjB,sBAAKrE,UAAWC,IAAEqE,OAAlB,UACG,cAAC,IAAD,CAAS/D,GAAI,YAAc6D,EAAExD,GAA7B,SACC,qBAAKZ,UAAWC,IAAEsE,IAAKpE,IAAwB,OAAnBiE,EAAEI,OAAOC,MAAiBL,EAAEI,OAAOC,MAAQC,EAASC,IAAI,aAEpF,qBAAK3E,UAAWC,IAAE2E,eAAlB,SACKR,EAAEb,SACC,wBAAQR,QAAS,WACbtB,EAAMoD,SAAST,EAAExD,KAClBZ,UAAWC,IAAE6E,OAFhB,oBAGA,wBAAQ/B,QAAS,WACbtB,EAAMsD,OAAOX,EAAExD,KAChBZ,UAAWC,IAAE6E,OAFhB,2BAKZ,sBAAK9E,UAAWC,IAAE+E,OAAlB,UACI,sBAAKhF,UAAWC,IAAEgF,QAAlB,UACI,qBAAKjF,UAAWC,IAAEiF,KAAlB,SAAyBd,EAAErD,OAC3B,qBAAKf,UAAWC,IAAEkF,OAAlB,SAA2Bf,EAAEe,YAEjC,sBAAKnF,UAAWC,IAAEmF,QAAlB,UACI,qBAAKpF,UAAWC,IAAEiF,KAAlB,SAAyB,uBACzB,qBAAKlF,UAAWC,IAAEoF,KAAlB,SAAyB,4BAtBkBjB,EAAExD,WC/BtD,MAA0B,iCCE9B0E,EAAY,WACtB,OAAO,8BACH,qBAAKnF,IAAKoF,EAAMZ,IAAI,eCYnBa,E,uKAEF,WAAqB,IAAD,OAChBC,KAAKhE,MAAMiE,kBAAiB,GAC5BC,IAAMC,IAAN,6EACQH,KAAKhE,MAAM0B,YADnB,kBACwCsC,KAAKhE,MAAMwB,WAAY4C,MAAK,SAAAC,GAChE,EAAKrE,MAAMiE,kBAAiB,GAC5B,EAAKjE,MAAMsE,SAASD,EAASE,KAAKC,OAClC,EAAKxE,MAAMyE,mBAAmBJ,EAASE,KAAKxC,iB,oBAKpD,WAAU,IAAD,OAaL,OAAO,qCACFiC,KAAKhE,MAAM2B,WAAa,cAAC,EAAD,IAAe,KACxC,cAAC,EAAD,CAAOe,cAbS,SAACgC,GACjB,EAAK1E,MAAM2E,eAAeD,GAC1B,EAAK1E,MAAMiE,kBAAiB,GAC5BC,IAAMC,IAAN,6EACIO,EADJ,kBACwB,EAAK1E,MAAMwB,WAAY4C,MAAK,SAAAC,GAChD,EAAKrE,MAAMiE,kBAAiB,GAC5B,EAAKjE,MAAMsE,SAASD,EAASE,KAAKC,WAQ/BlB,OAAQU,KAAKhE,MAAMsD,OACnBF,SAAUY,KAAKhE,MAAMoD,SACrB7B,MAAOyC,KAAKhE,MAAMuB,MAClBG,YAAasC,KAAKhE,MAAM0B,YACxBD,gBAAiBuC,KAAKhE,MAAMyB,gBAC5BD,SAAUwC,KAAKhE,MAAMwB,kB,GAlCXoD,IAAMC,WA0EpBxE,eAbO,SAACZ,GACnB,MAAO,CACH8B,MAAO9B,EAAMqF,UAAUvD,MACvBC,SAAU/B,EAAMqF,UAAUtD,SAC1BC,gBAAiBhC,EAAMqF,UAAUrD,gBACjCC,YAAajC,EAAMqF,UAAUpD,YAC7BC,WAAYlC,EAAMqF,UAAUnD,cAOI,CAChC2B,OLGc,SAACzB,GACnB,MAAO,CACHlC,KAAM,SACNkC,WKLAuB,SLSgB,SAACvB,GACrB,MAAO,CACHlC,KAAM,WACNkC,WKXAyC,SLegB,SAAC/C,GACrB,MAAO,CACH5B,KAAM,YACN4B,UKjBAoD,eLoBsB,SAACjD,GAC3B,MAAO,CACH/B,KAAM,mBACN+B,gBKtBAuC,iBLgCwB,SAACtC,GAC7B,MAAO,CACHhC,KAAM,qBACNgC,eKlCA8C,mBLwB0B,SAAC1C,GAC/B,MAAO,CACHpC,KAAM,wBACNoC,gBKjCO1B,CAQb0D,G,iBC1EiBgB,EAhBC,SAAC/E,GAEjB,OAAKA,EAAMgF,QAIJ,gCACH,qBAAKzG,UAAWC,IAAEyG,QAAlB,SACI,qBAAKvG,IAAI,2DAA2DwE,IAAI,cAE5E,uDAPO,cAAC,EAAD,KCSXjE,EAAe,CACfiG,MACI,CACI,CAAC/F,GAAI,EAAGC,MAAO,kBAAmB+F,KAAM,IACxC,CAAChG,GAAI,EAAGC,MAAO,qBAAsB+F,KAAM,KAEnDC,YAAa,UACbJ,QAAS,MAiDEK,EA5CQ,WAAsI,IAArI5F,EAAoI,uDAA3GR,EAAcS,EAA6F,uCACxJ,OAAQA,EAAOC,MACX,IAAK,WACD,IAAI2F,EACW,CACXnG,IAAI,IAAIU,MAAOC,UACfV,MAAOM,EAAO0F,YACdD,MAAM,IAAItF,MAAOC,WAErB,kCAAUL,GAAV,IAAgByF,MAAK,sBAAOzF,EAAMyF,OAAb,CAAoBI,IAASF,YAAc,KAGpE,IAAK,kBACD,OAAO,2BAAK3F,GAAZ,IAAkB2F,YAAc1F,EAAO6F,UAE3C,IAAK,mBACD,OAAO,2BAAI9F,GAAX,IAAkBuF,QAAStF,EAAOsF,UACtC,QACI,OAAOvF,I,kCClCJ+F,EAXF,SAACxF,GACV,OAAO,sBAAKzB,UAAWC,IAAE+D,QAAlB,UACH,sBAAKhE,UAAWC,IAAEK,KAAlB,UACI,qBAAKH,IAAK,wEACTsB,EAAMG,WAEX,yCAAaH,EAAMmF,YCoCZM,EAhCC,SAACzF,GAEb,IAAI0F,EAAe1F,EAAMkF,MAAMtE,KAAI,SAAC+E,GAAD,OAAO,cAAC,EAAD,CAAiBxF,QAASwF,EAAEvG,MAAO+F,KAAMQ,EAAER,MAAhCQ,EAAExG,OACnDyG,EAAiBhB,IAAMiB,YAiB3B,OAAO,gCACH,2CAGA,0BAAU3E,SAbK,WAEf,GAA+B,OAA3B0E,EAAeE,QAAkB,CACjC,IAAIrC,EAAOmC,EAAeE,QAAQzE,MAClCrB,EAAM+F,aAAatC,KASWuC,IAAKJ,EAAgBvE,MAAOrB,EAAMoF,cACpE,wBAAQ9D,QApBI,WAGXtB,EAAMiG,QAAQjG,EAAMoF,cAiBrB,sBACA,qBAAK7G,UAAWC,IAAE0G,MAAlB,SACKQ,QC+BAQ,EAAmB7F,aATV,SAACZ,GACnB,MAAO,CACHyF,MAAOzF,EAAM0G,YAAYjB,MACzBE,YAAa3F,EAAM0G,YAAYf,gBAhBd,SAAC7E,GACtB,MAAO,CACH0F,QAAS,SAACb,GACN7E,EHEwB,SAAC6E,GACjC,MAAO,CACHzF,KAAM,WACNyF,eGLagB,CAAqBhB,KAElCW,aAAc,SAACtC,GAEX,IAAI/D,EHML,CACHC,KAAM,kBACN4F,QGR4C9B,GACxClD,EAASb,OAcWW,CAA6CoF,GCvD9DY,GAVC,SAACrG,GAEb,OAAO,gCACH,cAAC,EAAD,CAAagF,QAAWhF,EAAMgF,UAE9B,cAACkB,EAAD,QC8BR,IAIII,GAAgCC,aAxBpC,SAA2BvG,GACvB,IAAIgF,EAAUwB,aAAY,SAAC/G,GAAD,OAA4BA,EAAMuF,WACxDnD,EAAS7B,EAAMyG,MAAMC,OAAO7E,OAahC,OAZKA,IACDA,EAAQ,KAMZ8E,qBAAU,WACNzC,IAAMC,IAAI,yDAA2DtC,GAChEuC,MAAK,SAAAC,GAAarE,EAAM4G,eAAevC,EAASE,YAIrD,cAAC,GAAD,CAASS,QAASA,OASX3E,gBALO,SAACZ,GAAD,MAAmC,CACrDuF,QAASvF,EAAM0G,YAAYnB,WAIQ,CAAC4B,eLsBV,SAAC5B,GAC3B,MAAO,CACHrF,KAAM,mBACNqF,aKzBO3E,CAA0CiG,ICZ1CO,OA1Bf,WACI,OACI,sBAAKtI,UAAU,cAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,gBAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACI,cAAC,IAAD,CAAOuI,KAAK,WAAWC,OAAQ,kBAC3B,cAAC3G,EAAD,OAIJ,cAAC,IAAD,CAAO0G,KAAK,mBAAmBC,OAAQ,kBACnC,cAAC,GAAD,OAGJ,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,cAAC,EAAD,iB,SCxBnD9H,GAAe,GAUJ+H,GANO,WAAkE,IAAjEvH,EAAgE,uDAA3CR,GAGxC,OAAOQ,GCFAwH,GAAUC,aAAgB,CACjCf,YAAad,EACb/E,YAAad,EACb2H,QAASH,GACTlC,UAAWlD,IAIXwF,GAAQC,aAAYJ,IAExBK,OAAOF,MAAQA,GAEAA,UCXXG,IAASR,OAEL,cAAC,IAAD,UACI,eAAC,IAAD,CAAUK,MAASA,GAAnB,UACI,cAAC,GAAD,IADJ,SAIcI,SAASC,eAAe,U,kBCdlDrJ,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,OAAS,uB","file":"static/js/main.8eeb512d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1J_X1\",\"dialogs__items\":\"Dialogs_dialogs__items__2La5L\",\"active\":\"Dialogs_active__1w4Qp\",\"dialog\":\"Dialogs_dialog__2BkpL\",\"messages\":\"Dialogs_messages__3Q49x\",\"message\":\"Dialogs_message__2U4jD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1xhAm\",\"wrapper\":\"Post_wrapper__lwSv7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__fHWjq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contant\":\"ProfileInfo_contant__2QIyq\",\"picture\":\"ProfileInfo_picture__13Qxy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__2BwpC\",\"wrapper\":\"Users_wrapper__1M_rS\",\"wrapper_button\":\"Users_wrapper_button__3V9jZ\",\"img\":\"Users_img__36mqt\",\"itemsL\":\"Users_itemsL__2_IKl\",\"itemsR\":\"Users_itemsR__1mP9L\",\"text\":\"Users_text__2ulzP\",\"marg\":\"Users_marg__3SjuI\",\"button\":\"Users_button__1nFpn\",\"wraooer_button\":\"Users_wraooer_button__bSzwm\",\"texT\":\"Users_texT__ekBGZ\",\"itemsRL\":\"Users_itemsRL__LYDgc\",\"itemsRR\":\"Users_itemsRR__1LgP2\",\"status\":\"Users_status__2TpqI\",\"number_pages\":\"Users_number_pages__1QM4j\",\"numbers\":\"Users_numbers__19fat\",\"active\":\"Users_active__1QTS_\"};","import React from 'react';\r\nimport s from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return <header className={s.header}>\r\n        <img src={'https://www.markakimlik.com/wp-content/uploads/2020/09/Markalasma-Surecinde-Logo-ve-Renk-Duzeni.jpg'}/>\r\n    </header>\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Nav.module.css'\r\n\r\nconst Nav = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to='/Dialogs' activeClassName={s.active}>Messages</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}><a>News</a></div>\r\n        <div className={s.item}><a>Music</a></div>\r\n        <div className={s.item}><a>Settings</a></div>\r\n    </nav>\r\n}\r\n\r\nexport default Nav","export type UpdateNewMassageBodyCreatorType = ReturnType<typeof updateNewMassageBodyAC>\r\nexport type SendMessageCreatorType = ReturnType<typeof SendMessageAC>\r\n\r\nexport type newPostTextType = string\r\n\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n\r\n}\r\n\r\nexport type MessagesType = {\r\n    id: number\r\n    title: string\r\n}\r\n\r\n\r\nlet initialState: initialStateType = {\r\n    messages: [\r\n        {id: 1, title: 'hi'},\r\n        {id: 2, title: 'How is yor it kamasutra?'},\r\n        {id: 3, title: 'YoO'},\r\n        {id: 4, title: 'Сool dude'}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Petr'},\r\n        {id: 2, name: 'Sasha'},\r\n        {id: 3, name: 'Oleg'},\r\n        {id: 4, name: 'Victor'}\r\n    ],\r\n    newMessageBody: ''\r\n}\r\n\r\nexport type initialStateType = {\r\n    messages: Array<MessagesType>\r\n    dialogs: Array<DialogsType>\r\n    newMessageBody: string\r\n}\r\n\r\nconst dialogsReducer = (state: initialStateType = initialState, action: UpdateNewMassageBodyCreatorType | SendMessageCreatorType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'UPDATE-NEW-MESSAGE-BODY': {\r\n            return {...state, newMessageBody: action.body};\r\n        }\r\n        case 'SEND-MESSAGE' :\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: new Date().getTime(), title: body}],\r\n                dialogs: [...state.dialogs],\r\n                newMessageBody: ''\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const updateNewMassageBodyAC = (body: string) => {\r\n    return {\r\n        type: 'UPDATE-NEW-MESSAGE-BODY',\r\n        body\r\n    } as const\r\n}\r\n\r\nexport const SendMessageAC = () => {\r\n    return {\r\n        type: 'SEND-MESSAGE',\r\n\r\n    } as const\r\n}\r\n\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\nfunction DialigItem(props: DialigItemType) {\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={'/dealogs/' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\ntype DialigItemType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport default DialigItem","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialigItem from \"./DialogItem/DialogsItem\";\r\nimport {DialogsPropsType} from \"./Dialogs-container\";\r\n\r\nfunction Message(props: MessageType) {\r\n    return <div className={s.message}>{props.title}</div>\r\n}\r\n\r\ntype MessageType = {\r\n    title: string\r\n}\r\n\r\n\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n    let dialogsElement = props.dialogs.map(d => <DialigItem key={d.id} name={d.name} id={d.id}/>)\r\n    let messagesElements = props.messages.map(m => <Message key={m.id} title={m.title}/>)\r\n    let newMessageBody = props.newMessageBody\r\n    let onSendMassageClick = () => {\r\n        props.SendMessage()\r\n    }\r\n\r\n    let onNewMassageChange = (e: any) => {\r\n        let body = e.currentTarget.value\r\n        props.updateNewMassageBody(body)\r\n    }\r\n\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogs__items}>\r\n            {dialogsElement}\r\n\r\n        </div>\r\n        <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n            <div>\r\n                <textarea placeholder={'Enter something'} onChange={onNewMassageChange}\r\n                          value={newMessageBody}> </textarea>\r\n                <button onClick={onSendMassageClick}>Send</button>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n}","import {\r\n    DialogsType,\r\n    MessagesType,\r\n    newPostTextType,\r\n    SendMessageAC,\r\n    updateNewMassageBodyAC\r\n} from \"../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\n// type DialogsContainerPropsType = {\r\n//     messages: Array<MessagesType>\r\n//     dialogs: Array<DialogsType>\r\n//     newMessageBody: string\r\n//     dispatch: (action: ActionsTypes) => void\r\n//\r\n// }\r\n\r\n\r\n// export function DialogsContainer(props: DialogsContainerPropsType) {\r\n//     // let dialogsElement = props.dialogs.map(d => <DialigItem name={d.name} id={d.id}/>)\r\n//     // let messagesElements = props.messages.map(m => <Message title={m.title}/>)\r\n//     // let newMessageBody = props.newMessageBody\r\n//     let onSendMassageClick = () => {\r\n//         props.dispatch(SendMessageAC())\r\n//     }\r\n//\r\n//     let onNewMassageChange = (body: any) => {\r\n//         props.dispatch(updateNewMassageBodyAC(body))\r\n//     }\r\n//\r\n//     return <Dialogs\r\n//         updateNewMassageBody={onNewMassageChange}\r\n//         SendMessage={onSendMassageClick}\r\n//         dialogs={props.dialogs}\r\n//         messages={props.messages}\r\n//         newMessageBody={props.newMessageBody}\r\n//\r\n//\r\n//     />\r\n// }\r\n\r\ntype mapStateToPropsType = {\r\n    messages:MessagesType[],\r\n    dialogs: DialogsType[],\r\n    newMessageBody:newPostTextType,\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    updateNewMassageBody: (body: string) => void\r\n    SendMessage: () => void,\r\n}\r\n\r\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogs : state.dialogsPage.dialogs,\r\n        messages : state.dialogsPage.messages,\r\n        newMessageBody: state.dialogsPage.newMessageBody,\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapDispatchToProps = (dispatch : Dispatch)=> {\r\n    return {\r\n        updateNewMassageBody: (body: string) => {\r\n            dispatch(updateNewMassageBodyAC(body))\r\n        },\r\n\r\n        SendMessage: () => {\r\n\r\n            dispatch(SendMessageAC())\r\n        },\r\n\r\n\r\n    }\r\n}\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\n","export type followCreatorType = ReturnType<typeof follow>\r\nexport type unFollowCreatorType = ReturnType<typeof unFollow>\r\nexport type setUserCreatorType = ReturnType<typeof setUsers>\r\nexport type setCurrentPageAType = ReturnType<typeof setCurrentPage>\r\nexport type setTotalUsersCountAT = ReturnType<typeof setTotalUsersCount>\r\nexport type toggleIsFetchingAT = ReturnType<typeof toggleIsFetching>\r\n\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 200,\r\n    isFetching: true\r\n}\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    //location: locationType\r\n    status: string\r\n    photos: photosType\r\n\r\n}\r\n\r\nexport type photosType = {\r\n    small: string\r\n    large: string\r\n}\r\n\r\nexport type locationType = {\r\n    city: string\r\n    country: string\r\n}\r\nexport type initialStateType = {\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\n\r\ntype wrapperType = followCreatorType |\r\n    unFollowCreatorType |\r\n    setUserCreatorType |\r\n    setCurrentPageAType |\r\n    setTotalUsersCountAT |\r\n    toggleIsFetchingAT\r\n\r\nconst usersReducer = (state: initialStateType = initialState, action: wrapperType) => {\r\n    switch (action.type) {\r\n        case 'FOLLOW' :\r\n            return {\r\n                ...state,\r\n                users: state.users.map((m) => {\r\n                        if (m.id === action.userId) {\r\n                            return {...m, followed: true}\r\n                        }\r\n                        return m;\r\n                    }\r\n                )\r\n            }\r\n\r\n        case 'UNFOLLOW' :\r\n            return {\r\n                ...state,\r\n                users: state.users.map((m) => {\r\n                        if (m.id === action.userId) {\r\n                            return {...m, followed: false}\r\n                        }\r\n                        return m;\r\n                    }\r\n                )\r\n            }\r\n        case 'SET-USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'SET-CURRENT-PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SET-USERS-TOTAL-COUNT': {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case 'TOGGLE-IS-FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const follow = (userId: number) => {\r\n    return {\r\n        type: 'FOLLOW',\r\n        userId,\r\n\r\n    } as const\r\n}\r\nexport const unFollow = (userId: number) => {\r\n    return {\r\n        type: 'UNFOLLOW',\r\n        userId,\r\n    } as const\r\n}\r\n\r\nexport const setUsers = (users: UsersType[]) => {\r\n    return {\r\n        type: 'SET-USERS',\r\n        users,\r\n    } as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: 'SET-CURRENT-PAGE',\r\n        currentPage\r\n    } as const\r\n}\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {\r\n        type: 'SET-USERS-TOTAL-COUNT',\r\n        totalCount\r\n    } as const\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: 'TOGGLE-IS-FETCHING',\r\n        isFetching\r\n    } as const\r\n}\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.f654bcd6.jpg\";","import React from 'react'\r\nimport s from \"./Users.module.css\";\r\nimport userImg from \"../../assets/images/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.jpg\";\r\nimport {UsersType} from \"../redux/users-reducer\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype  UsersPropsType = {\r\n    onPageChenged: (pageNumber: number) => void,\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    users: UsersType[]\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    pageSize: number\r\n}\r\n\r\nexport let Users = (props: UsersPropsType) => {\r\n    let pageesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pageesCount + 1; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return <div className={s.wrapper}>\r\n        <ul className={s.number_pages}>\r\n            {pages.map(m => {\r\n                return <li className={s.numbers}><span className={props.currentPage === m ? s.active : ''}\r\n                                                       onClick={(e) => props.onPageChenged(m)}>{m}</span></li>\r\n            })}\r\n        </ul>\r\n        {\r\n            props.users.map(u => <div className={s.container} key={u.id}>\r\n                <div className={s.itemsL}>\r\n                   <NavLink to={'/profile/' + u.id}>\r\n                    <img className={s.img} src={u.photos.small !== null ? u.photos.small : userImg} alt=\"photos\"/>\r\n                   </NavLink>\r\n                    <div className={s.wrapper_button}>\r\n                        {u.followed ?\r\n                            <button onClick={() => {\r\n                                props.unFollow(u.id)\r\n                            }} className={s.button}>Follow</button> :\r\n                            <button onClick={() => {\r\n                                props.follow(u.id)\r\n                            }} className={s.button}>Unfollow</button>}\r\n                    </div>\r\n                </div>\r\n                <div className={s.itemsR}>\r\n                    <div className={s.itemsRL}>\r\n                        <div className={s.text}>{u.name}</div>\r\n                        <div className={s.status}>{u.status}</div>\r\n                    </div>\r\n                    <div className={s.itemsRR}>\r\n                        <div className={s.text}>{\"u.location.country\"}</div>\r\n                        <div className={s.texT}>{\"u.location.city\"}</div>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        }\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/load.ad2284cf.gif\";","import load from \"../../../assets/images/load.gif\";\r\n\r\nexport let Preloader = () => {\r\n return <div>\r\n     <img src={load} alt=\"loading\"/>\r\n </div>\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setUsers,\r\n    setTotalUsersCount, toggleIsFetching,\r\n    unFollow,\r\n    UsersType\r\n} from \"../redux/users-reducer\";\r\nimport axios from \"axios\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/preloader/preloader\";\r\n\r\nclass UsersContainer extends React.Component <mapPropsdispatchType> {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?\r\n         page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.toggleIsFetching(false)\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let onPageChenged = (pageNumber: number) => {\r\n            this.props.setCurrentPage(pageNumber)\r\n            this.props.toggleIsFetching(true)\r\n            axios.get(`https://social-network.samuraijs.com/api/1.0/users?\r\n         page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(response.data.items)\r\n            })\r\n\r\n        }\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users onPageChenged={onPageChenged}\r\n                   follow={this.props.follow}\r\n                   unFollow={this.props.unFollow}\r\n                   users={this.props.users}\r\n                   currentPage={this.props.currentPage}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    setUsers: (users: UsersType[]) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n\r\n    }\r\n}\r\n\r\nexport type mapPropsdispatchType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\nexport default connect(mapStateToProps, {\r\n        follow,\r\n        unFollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        toggleIsFetching,\r\n        setTotalUsersCount,\r\n    }\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport {Preloader} from \"../../common/preloader/preloader\";\r\n\r\ntype ProfileInfoType={\r\n    profile:any\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoType) => {\r\n    debugger\r\n    if (!props.profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.picture}>\r\n            <img src=\"https://ru-wallp.com/w/2010/5/26/1398401274727650902.png\" alt=\"ptcture\"/>\r\n        </div>\r\n        <div>\r\n            ava + description\r\n        </div>\r\n    </div>\r\n\r\n}\r\n    export default ProfileInfo","import {newPostTextType} from \"./dialogs-reducer\";\r\n\r\n\r\nexport type AddPostActionType = ReturnType<typeof addPostActionCreator>\r\nexport type UpdateNewPostActionTYpe = ReturnType<typeof updateNewPostActionCreator>\r\nexport type setUserProfileTYpe = ReturnType<typeof setUserProfile>\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    newPostText: newPostTextType\r\n    profile: any\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    title: string\r\n    like: number\r\n}\r\n\r\n\r\nlet initialState = {\r\n    posts:\r\n        [\r\n            {id: 1, title: 'hi, how are you', like: 12},\r\n            {id: 2, title: 'it`s my first post', like: 15}\r\n        ],\r\n    newPostText: 'it.comm',\r\n    profile: null\r\n}\r\n\r\n\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: AddPostActionType | UpdateNewPostActionTYpe|setUserProfileTYpe ): ProfilePageType => {\r\n    switch (action.type) {\r\n        case 'ADD-POST': {\r\n            let newPost:\r\n                PostType = {\r\n                id: new Date().getTime(),\r\n                title: action.newPostText,\r\n                like: new Date().getTime(),\r\n            };\r\n            return{...state,posts : [...state.posts, newPost],newPostText : ''};\r\n        }\r\n\r\n        case 'UPDATE-NEW-TEXT' :\r\n            return  {...state,newPostText : action.newText}\r\n\r\n        case 'SET-USER-PROFILE':\r\n            return {...state, profile: action.profile}\r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText: string) => {\r\n    return {\r\n        type: 'ADD-POST',\r\n        newPostText\r\n    } as const\r\n}\r\n\r\nexport const updateNewPostActionCreator = (newText: string) => {\r\n    return {\r\n        type: 'UPDATE-NEW-TEXT',\r\n        newText\r\n    } as const\r\n}\r\n\r\nexport const setUserProfile = (profile : any) => {\r\n    return {\r\n        type: 'SET-USER-PROFILE',\r\n        profile\r\n    } as const\r\n}\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\n\r\n\r\nconst Post = (props: any) => {\r\n    return <div className={s.wrapper}>\r\n        <div className={s.item}>\r\n            <img src={'https://ru.fishki.net/picsw/112009/18/bonus/face/face_photo_032.jpg'}/>\r\n            {props.message}\r\n        </div>\r\n        <span >like {props.like}</span>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Post\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {PropsMType} from \"./MyPostsContainer\";\r\n\r\n\r\n// type MyPostsType = {\r\n//     posts: Array<PostType>\r\n//     newPostText: string\r\n//  //   dispatch: any\r\n//     updateNewPostText:(text:string)=> void\r\n//     addPost:()=> void\r\n// }\r\n\r\n\r\nconst MyPosts = (props: PropsMType) => {\r\n\r\n    let postsElement = props.posts.map((p) => <Post key={p.id} message={p.title} like={p.like}/>);\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    let onAddPost = () => {\r\n       // props.addPost()\r\n        //props.dispatch(addPostActionCreator(props.newPostText))\r\n         props.addPost(props.newPostText)\r\n\r\n    }\r\n    let onPostChange = () => {\r\n\r\n        if (newPostElement.current !== null) {\r\n            let text = newPostElement.current.value\r\n            props.onPostChange(text)\r\n\r\n        }\r\n\r\n    }\r\n    return <div>\r\n        <div>\r\n            My posts\r\n        </div>\r\n        <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\r\n        <button onClick={onAddPost}>Add post</button>\r\n        <div className={s.posts}>\r\n            {postsElement}\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport default MyPosts","import {updateNewPostActionCreator, addPostActionCreator, PostType} from \"../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n// type MyPostsContaiberType = {\r\n//     posts: Array<PostType>\r\n//     newPostText: string\r\n//     dispatch: any\r\n// }\r\n\r\n\r\n// export const MyPostsContainer = (props: MyPostsContaiberType) => {\r\n//\r\n//     // let postsElement = props.posts.map((p) => <Post key={p.id} message={p.title} like={p.like}/>);\r\n//     // let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n//\r\n//     let addPost = () => {\r\n//         props.dispatch(addPostActionCreator(props.newPostText))\r\n//     }\r\n//     let onPostChange = (text: string) => {\r\n//         //   if (newPostElement.current !== null) {\r\n//         let action = updateNewPostActionCreator(text)\r\n//         props.dispatch(action)\r\n//\r\n//         //     }\r\n//\r\n//     }\r\n//     return (<MyPosts\r\n//         updateNewPostText={onPostChange}\r\n//         addPost={addPost}\r\n//         posts={props.posts}\r\n//         newPostText={props.newPostText}/>)\r\n//\r\n// }\r\n// export default MyPostsContainer\r\n\r\ntype mapStateToPropsType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\n\r\ntype mapMDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n    onPostChange: (text: string) => void\r\n}\r\n\r\nexport type PropsMType = mapStateToPropsType & mapMDispatchToPropsType\r\n\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapMDispatchToPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        },\r\n        onPostChange: (text: string) => {\r\n            //   if (newPostElement.current !== null) {\r\n            let action = updateNewPostActionCreator(text)\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./Myposts/MyPostsContainer\";\r\n\r\ntype ProfileType = {\r\n    profile: any\r\n}\r\n\r\nconst Profile = (props:ProfileType) => {\r\n\r\n    return <div>\r\n        <ProfileInfo profile = {props.profile}/>\r\n\r\n        <MyPostsContainer/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Profile","import React, {useEffect} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {ProfilePageType, setUserProfile} from \"../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter } from \"react-router-dom\";\r\n\r\n\r\ntype PathParamsType ={\r\n    userId:string\r\n}\r\n\r\n\r\ntype mapStatePropsType = {\r\n    profile: number\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    setUserProfile: (profile:number) => void\r\n}\r\ntype OwnPropsType = mapStatePropsType & mapDispatchPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nfunction ProfileContainer (props:PropsType){\r\n    let profile = useSelector((state:ProfilePageType ) => state.profile)\r\n    let userId = props.match.params.userId\r\n    if (!userId){\r\n        userId ='2';\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0.0/profile` + userId)\r\n            .then(response => {props.setUserProfile(response.data)})\r\n    })\r\n\r\n    return(\r\n        <Profile profile={profile}/>\r\n    )\r\n}\r\n\r\nlet mapStatetoProps = (state: any):mapStatePropsType => ({\r\n    profile: state.profilePage.profile\r\n})\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\nexport default connect(mapStatetoProps,{setUserProfile})(WithUrlDataContainerComponent)","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Nav from \"./components/Nav/Nav\";\nimport {Route} from \"react-router-dom\";\nimport {DialogsContainer} from \"./components/Dialogs/Dialogs-container\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport { useSelector} from \"react-redux\";\n\nfunction App() {\n    return (\n        <div className=\"app-wrapper\">\n            <Header/>\n            <div className='app-container'>\n                <Nav/>\n                <div className='app-wrapper-contant'>\n                    <Route path='/dialogs' render={() =>\n                        <DialogsContainer/>}\n\n\n                    />\n                    <Route path='/profile/:userId' render={() =>\n                        <ProfileContainer  />}\n                    />\n\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                </div>\n            </div>\n        </div>\n\n    )\n        ;\n}\n\n\nexport default App;\n\n\n\n\n","export type sideBarType = {}\r\n\r\nlet initialState = {\r\n\r\n}\r\n\r\nconst sidebareducer = (state: sideBarType = initialState, action: any): sideBarType => {\r\n\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebareducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebareducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\n\r\nexport let reducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sideBar: sidebareducer,\r\n    usersPage: usersReducer,\r\n});\r\nexport type AppStateType = ReturnType<typeof reducer>\r\n\r\nlet store = createStore(reducer);\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./components/redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\n    ReactDOM.render(\n\n        <BrowserRouter>\n            <Provider store = {store}>\n                <App/>,\n            </Provider>\n\n        </BrowserRouter>, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2LPqS\",\"item\":\"Nav_item__2ic2h\",\"active\":\"Nav_active__22-sI\"};"],"sourceRoot":""}