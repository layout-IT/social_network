{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hoc/WithAythRedirect.tsx","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/ProfileInfo/ProfileStatus.module.css","components/Profile/ProfileInfo/contact.module.css","components/Profile/ProfileInfo/ProfileData.module.scss","components/Profile/ProfileInfo/ProfileDataForm.module.scss","components/Profile/Myposts/MyPosts.module.scss","components/Profile/Myposts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/Contact.tsx","components/Profile/ProfileInfo/ProfileData.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Myposts/Post/Post.tsx","components/Profile/Myposts/MyPosts.tsx","components/Profile/Myposts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStatetoPropsForRedirect","state","isAuth","auth","withAythRedirect","Component","connect","props","restProps","to","module","exports","ProfileStatus","useState","editMode","status","setState","useEffect","className","s","onChange","e","currentTarget","value","console","log","autoFocus","onBlur","updateStatus","onDoubleClick","Contact","wraper","fatT","contactTitle","fatV","contactValue","ProfileData","openClose","setOpenClose","profile","useSelector","profileData","dispatch","useDispatch","saveProfileTC","wrapper","top","fat","left","right","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","isOwner","refBut","onClick","goToEditMode","bottom","simpleContacts","contacts","map","ProfileDataForm","setFullName","lookingFJ","setLookingFJ","profScills","setProffScills","setAboutMe","refactorContainer","name","description","type","placeholder","checked","saveProfileAC","ProfileInfo","setEditMode","picture","pictureContainer","src","photos","large","userImg","alt","infoSide","Post","item","message","like","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","textareaContainer","Field","component","textarea","textAreaButton","MyPosts","React","memo","postsElement","posts","p","title","id","wrapperCntainer","myPost","values","addPost","newPostText","MyPostsContainer","profilePage","addPostActionCreator","Profile","AuthRedirectComponent","userId","match","params","history","push","getUserProfile","getUserStatus","updateUserStatus","WithUrlDataContainerComponent","withRouter"],"mappings":"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","file":"static/js/3.8df25186.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, {ComponentType} from 'react'\nimport {Redirect} from \"react-router-dom\";\nimport {AppStateType} from \"../components/redux/redux-store\";\nimport {connect} from \"react-redux\";\n\ntype mapStatetoPropsForRedirectType = {\n    isAuth: boolean\n}\nlet mapStatetoPropsForRedirect = (state: AppStateType): mapStatetoPropsForRedirectType => ({\n    isAuth: state.auth.isAuth,\n})\n\nexport function  withAythRedirect<T>(Component: ComponentType<T>){\n    function RedirectComponent(props:mapStatetoPropsForRedirectType) {\n        let {isAuth, ...restProps} = props\n\n        if (!isAuth) {\n            return <Redirect to={'/login'}/>\n        }\n        return <Component {...restProps as T}/>\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStatetoPropsForRedirect)(RedirectComponent)\n\n\n    return ConnectedAuthRedirectComponent\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__3GoBE\",\"picture\":\"ProfileInfo_picture__36hHo\",\"pictureContainer\":\"ProfileInfo_pictureContainer__1qdpO\",\"infoSide\":\"ProfileInfo_infoSide__3Pxxp\",\"fat\":\"ProfileInfo_fat__1gbDb\",\"simple\":\"ProfileInfo_simple__1KIbR\",\"simpleContacts\":\"ProfileInfo_simpleContacts__1z3lm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__1GQPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"contact_wraper__JSnuM\",\"fatT\":\"contact_fatT__TWx7H\",\"fatV\":\"contact_fatV__3wVis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileData_wrapper__1V9oa\",\"top\":\"ProfileData_top__Iea8C\",\"refBut\":\"ProfileData_refBut__1kydi\",\"Contact\":\"ProfileData_Contact__1uBu3\",\"right\":\"ProfileData_right__1UPz-\",\"left\":\"ProfileData_left__gDRXs\",\"fat\":\"ProfileData_fat__3CXZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileDataForm_wrapper__RGPz4\",\"refactorContainer\":\"ProfileDataForm_refactorContainer__3z5Sr\",\"name\":\"ProfileDataForm_name__2EL7L\",\"description\":\"ProfileDataForm_description__1UMi6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MyPosts_title__3w_IZ\",\"posts\":\"MyPosts_posts__3uMee\",\"textAreaButton\":\"MyPosts_textAreaButton__2faqQ\",\"textareaContainer\":\"MyPosts_textareaContainer__3qENA\",\"textarea\":\"MyPosts_textarea__1lvHr\",\"myPost\":\"MyPosts_myPost__39h7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1xhAm\",\"wrapper\":\"Post_wrapper__lwSv7\",\"message\":\"Post_message__1OBR9\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './ProfileStatus.module.css'\r\n\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: any\r\n}\r\n\r\nconst ProfileStatus = (props: ProfileStatusType) => {\r\n    let [state, setState] = useState({\r\n        editMode: false,\r\n        status: props.status\r\n    })\r\n    useEffect(() => {\r\n        setState({...state, status: props.status})\r\n    }, [props.status])\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setState({...state, status: e.currentTarget.value})\r\n        console.log(state.status)\r\n    }\r\n    const activatedMode = () => {\r\n        setState({...state, editMode: true})\r\n\r\n    }\r\n    const deactivatedMode = () => {\r\n        setState({...state, editMode: false})\r\n        props.updateStatus(state.status)\r\n\r\n    }\r\n    return <div className={s.status}>\r\n        {!state.editMode\r\n            ?\r\n            <div>\r\n                <span onDoubleClick={activatedMode}>Status: {state.status} </span>\r\n            </div>\r\n            :\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivatedMode} value={state.status}/>\r\n        }\r\n    </div>\r\n\r\n}\r\nexport default ProfileStatus","import React from \"react\";\r\nimport s from './contact.module.css'\r\n\r\ntype contactTitleType ={\r\n    contactTitle : string\r\n    contactValue: string\r\n}\r\n\r\nexport const Contact = (props:contactTitleType) => {\r\n    return <div className={s.wraper}>\r\n        <div className={s.fatT}>{props.contactTitle}:</div>\r\n        <div className={s.fatV}>{props.contactValue}</div>\r\n    </div>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Contact} from \"./Contact\";\r\nimport s from './ProfileData.module.scss'\r\nimport {saveProfileTC} from \"../../redux/profileData-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getUserProfile} from \"../../redux/profile-reducer\";\r\n\r\ntype  ProfileDataType = {\r\n    profile: profileType\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}\r\n\r\nexport const ProfileData = (props: ProfileDataType) => {\r\n    let [openClose, setOpenClose] = useState(false)\r\n    const profile = useSelector<AppStateType,profileType>(state => state.profileData.profile)\r\n    const dispatch = useDispatch();\r\n    const changeOC = () => {\r\n        setOpenClose(!openClose)\r\n    }\r\n    useEffect(() => {\r\n        // debugger\r\n        dispatch(saveProfileTC(profile));\r\n\r\n        // setTimeout( () => {\r\n        //     dispatch(getUserProfile(profile.userId))\r\n        // }, 2000)\r\n\r\n    }, [profile])\r\n\r\n    return <div className={s.wrapper}>\r\n        <div className={s.top}>\r\n            <div className={s.fat}><span className={s.left}>Full name : </span><span\r\n                className={s.right}>{props.profile.fullName}</span></div>\r\n            <div className={s.fat}><span className={s.left}>Loking for job :  </span><span\r\n                className={s.right}>{props.profile.lookingForAJob ? 'yes' : 'No'}</span></div>\r\n            {props.profile.lookingForAJob ?\r\n                <div className={s.fat}><span className={s.left}>My professionals skiils : </span><span\r\n                    className={s.right}>{props.profile.lookingForAJobDescription}\r\n                </span></div> : ''}\r\n            <div className={s.fat}><span className={s.left}>About me : </span><span\r\n                className={s.right}>{props.profile.aboutMe}</span></div>\r\n            {props.isOwner ? <button className={s.refBut} onClick={props.goToEditMode}>Edit</button> : ''}</div>\r\n        <div className={s.bottom}>\r\n            <div className={s.fat}>\r\n                <span className={s.Contact} onClick={() => changeOC()}>Contacts :</span>\r\n                {openClose ? (<span className={s.simpleContacts}>{\r\n                    Object.keys(props.profile.contacts).map(key => {\r\n                        return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                    })}</span>) : '...'}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\ntype profileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: any\r\n    aboutMe: string\r\n\r\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport s from './ProfileDataForm.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {saveProfileAC, saveProfileTC} from \"../../redux/profileData-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {profileType} from \"../../../API/Api\";\r\n\r\ntype propsType ={\r\n    goToEditMode: ()=> void\r\n}\r\nexport const ProfileDataForm = (props:propsType) => {\r\n    const [fullName, setFullName] = useState('')\r\n    const [lookingFJ, setLookingFJ] = useState(false)\r\n    const [profScills, setProffScills] = useState('')\r\n    const [aboutMe, setAboutMe] = useState('')\r\n    const profile = useSelector<AppStateType,profileType>(state => state.profileData.profile)\r\n    const dispatch = useDispatch()\r\n    const goToEdit = () => {\r\n        dispatch(saveProfileAC(fullName, lookingFJ, profScills, aboutMe))\r\n\r\n        // dispatch(saveProfileTC({fullName, lookingFJ, profScills, aboutMe}))\r\n        props.goToEditMode()\r\n    }\r\n    useEffect(() => {\r\n        // debugger\r\n        // return () => {\r\n        //\r\n        // }\r\n    }, [profile])\r\n    console.log(profile)\r\n    const changeFullName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setFullName(e.currentTarget.value)\r\n    }\r\n    const changeLookingFJ = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLookingFJ(e.currentTarget.checked)\r\n    }\r\n    const changeProfScills = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setProffScills(e.currentTarget.value)\r\n    }\r\n    const changeAboutMe = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setAboutMe(e.currentTarget.value)\r\n    }\r\n\r\n    return <div className={s.wrapper}>\r\n\r\n        <div className={s.refactorContainer}>\r\n            <div className={s.name}>full name:</div>\r\n            <div className={s.description}><input onChange={changeFullName} value={fullName} type=\"text\"\r\n                                                  placeholder={'full name'}/></div>\r\n\r\n        </div>\r\n        <div className={s.refactorContainer}>\r\n            <div className={s.name}>Loking for job :</div>\r\n            <div className={s.description}><input onChange={changeLookingFJ} checked={lookingFJ} type={'checkbox'}/>\r\n            </div>\r\n\r\n        </div>\r\n        <div className={s.refactorContainer}>\r\n            <div className={s.name}>My professionals skiils :</div>\r\n            <div className={s.description}><textarea value={profScills} onChange={changeProfScills}\r\n                                                     placeholder={'My professionals skiils'}></textarea></div>\r\n\r\n        </div>\r\n        <div className={s.refactorContainer}>\r\n            <div className={s.name}> About me :</div>\r\n            <div className={s.description}><textarea value={aboutMe} onChange={changeAboutMe}\r\n                                                     placeholder={'About me'}></textarea></div>\r\n            <button onClick={()=>goToEdit()}> save</button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n}","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.scss'\r\nimport {Preloader} from \"../../common/preloader/preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport userImg from \"../../../assets/images/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.jpg\";\r\nimport {ProfileData} from './ProfileData';\r\nimport {ProfileDataForm} from \"./ProfileDataForm\";\r\n\r\ntype ProfileInfoType = {\r\n    profile: any\r\n    status: string\r\n    updateStatus: any\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoType) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [isOwner, setIsOwner] = useState(true)\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const goToEditMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    return <div className={s.wrapper}>\r\n        <div className={s.picture}>\r\n            <div className={s.pictureContainer}><img\r\n                src={props.profile.photos.large ? props.profile.photos.large : userImg} alt=\"ptcture\"/>\r\n                <div className={s.infoSide}><ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                    {editMode ? <ProfileDataForm goToEditMode={goToEditMode} /> : <ProfileData profile={props.profile}\r\n                                                                  isOwner={isOwner}\r\n                                                                  goToEditMode={goToEditMode}/>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport default ProfileInfo\r\n\r\n","import React from 'react';\nimport s from './Post.module.css'\n\n\n\nconst Post = (props: any) => {\n    return <div className={s.wrapper}>\n        <div className={s.item}>\n            <img src={'https://ru.fishki.net/picsw/112009/18/bonus/face/face_photo_032.jpg'}/>\n           <div className={s.message}>{props.message}</div>\n        </div>\n        <span >like {props.like}</span>\n    </div>\n}\n\n\nexport default Post\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport s from './MyPosts.module.scss'\nimport Post from \"./Post/Post\";\nimport {PropsMType} from \"./MyPostsContainer\";\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\n\nconst AddNewPostForm: React.FC<InjectedFormProps> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={s.textareaContainer}>\n            <Field name='newPostText' component='textarea' className={s.textarea} placeholder={'add your message...'}/>\n\n            <button className={s.textAreaButton}>Add post</button>\n        </form>\n    )\n}\n\nexport const AddNewPostReduxForm = reduxForm({\n    form: 'ProfileAddNewPostForm'\n})(AddNewPostForm)\n\nconst MyPosts = React.memo((props: PropsMType) => {\n    let postsElement = props.posts.map((p) => <Post key={p.id} message={p.title} like={p.like}/>);\n//   let newPostElement = React.createRef<HTMLTextAreaElement>()\n\n    let onAddPost = (values: any) => {\n        props.addPost(values.newPostText)\n\n    }\n\n    return <div className={s.wrapperCntainer}>\n        <h2 className={s.title}>Add you post</h2>\n        <div className={s.posts}>\n            {postsElement}\n        </div>\n        <div className={s.myPost}>\n            <AddNewPostReduxForm onSubmit={onAddPost}/>\n        </div>\n\n\n    </div>\n\n})\n\n\nexport default MyPosts","import { addPostActionCreator, PostType} from \"../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\n\n\ntype mapStateToPropsType = {\n    posts: Array<PostType>\n\n}\n\ntype mapMDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n\n}\n\nexport type PropsMType = mapStateToPropsType & mapMDispatchToPropsType\n\n\nlet mapDispatchToProps = (dispatch: Dispatch): mapMDispatchToPropsType => {\n    return {\n        addPost: (newPostText: string) => {\n            dispatch(addPostActionCreator(newPostText))\n        },\n\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        posts: state.profilePage.posts,\n\n    }\n\n}\n\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport {MyPostsContainer} from \"./Myposts/MyPostsContainer\";\nimport {useSelector} from \"react-redux\";\nimport {AppStateType} from \"../redux/redux-store\";\n\ntype ProfileType = {\n    profile: any\n    status:string\n    updateStatus:any\n}\n\nconst Profile = (props: ProfileType) => {\n    let isAuth = useSelector<AppStateType,boolean>(state =>state.auth.isAuth )\n    console.log(isAuth)\n    return <div>\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n\n        <MyPostsContainer/>\n    </div>\n\n}\n\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {withAythRedirect} from \"../../hoc/WithAythRedirect\";\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: any\r\n}\r\n\r\ntype mapStatePropsType = {\r\n    profile: number\r\n    status: string\r\n}\r\n\r\n\r\ntype mapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getUserStatus: (userId: number) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\ntype OwnPropsType = mapStatePropsType & mapDispatchPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nfunction ProfileContainer(props: PropsType) {\r\n\r\n    let userId = props.match.params.userId\r\n    if (!userId) {\r\n        props.history.push('/users')\r\n    }\r\n    props.getUserProfile(userId);\r\n    props.getUserStatus(userId);\r\n\r\n    return (\r\n        <Profile {...props} profile={props.profile} status={props.status} updateStatus={props.updateUserStatus}/>\r\n    )\r\n}\r\n\r\nlet AuthRedirectComponent = withAythRedirect(ProfileContainer)\r\n\r\n\r\nlet mapStatetoProps = (state: AppStateType): mapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n\r\n})\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\nexport default connect(mapStatetoProps, {\r\n    getUserProfile, getUserStatus, updateUserStatus\r\n})(WithUrlDataContainerComponent)"],"sourceRoot":""}