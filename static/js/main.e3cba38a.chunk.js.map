{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Profile/Myposts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/Users.module.css","components/Nav/Nav.tsx","components/redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogsItem.tsx","components/Dialogs/Dialogs.tsx","hoc/WithAythRedirect.tsx","components/Dialogs/Dialogs-container.tsx","API/Api.ts","components/redux/users-reducer.tsx","assets/images/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.jpg","components/Users/Users.tsx","assets/images/load.gif","components/common/preloader/preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/redux/profile-reducer.tsx","components/Profile/Myposts/Post/Post.tsx","components/Profile/Myposts/MyPosts.tsx","components/Profile/Myposts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","components/redux/auth-reducer.tsx","components/Header/HeaderComtainer.tsx","components/Login/Login.tsx","App.tsx","components/redux/sidebar-reducer.tsx","components/redux/redux-store.tsx","index.tsx","components/Nav/Nav.module.css"],"names":["module","exports","Nav","className","s","nav","item","to","activeClassName","active","initialState","messages","id","title","dialogs","name","newMessageBody","dialogsReducer","state","action","type","body","Date","getTime","DialigItem","props","dialog","Message","message","mapStatetoPropsForRedirect","isAuth","auth","withAythRedirect","Component","connect","restProps","AuthRedirectComponent","dialogsElement","map","d","messagesElements","m","dialogs__items","placeholder","onChange","e","currentTarget","value","updateNewMassageBody","onClick","SendMessage","DialogsContainer","dialogsPage","dispatch","updateNewMassageBodyAC","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","authAPI","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unFollowSuccess","setUsers","setTotalUsersCount","totalCount","toggleIsFetching","toggleIsFollowingProgress","usersReducer","followed","filter","Users","pageesCount","Math","ceil","pages","i","push","wrapper","number_pages","numbers","onPageChenged","u","container","itemsL","img","src","photos","small","userImg","alt","wrapper_button","disabled","some","unfollow","button","follow","itemsR","itemsRL","text","status","itemsRR","texT","Preloader","load","UsersContainer","this","getUsers","pageNumber","React","usersPage","resultCode","setCurrentPage","items","ProfileInfo","profile","picture","large","posts","like","newPostText","profileReducer","newPost","newText","Post","MyPosts","postsElement","p","newPostElement","createRef","current","onPostChange","ref","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","match","params","getUserProfile","WithUrlDataContainerComponent","withRouter","Header","header","loginBlock","login","email","AuthReducer","HeaderContainer","getAuthUserData","SetAuthUserData","Login","App","path","render","sidebareducer","reducer","combineReducers","sideBar","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e3cba38a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1J_X1\",\"dialogs__items\":\"Dialogs_dialogs__items__2La5L\",\"active\":\"Dialogs_active__1w4Qp\",\"dialog\":\"Dialogs_dialog__2BkpL\",\"messages\":\"Dialogs_messages__3Q49x\",\"message\":\"Dialogs_message__2U4jD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__fHWjq\",\"login\":\"Header_login__3bGGL\",\"loginBlock\":\"Header_loginBlock__3aQOw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1xhAm\",\"wrapper\":\"Post_wrapper__lwSv7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contant\":\"ProfileInfo_contant__2QIyq\",\"picture\":\"ProfileInfo_picture__13Qxy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__2BwpC\",\"wrapper\":\"Users_wrapper__1M_rS\",\"wrapper_button\":\"Users_wrapper_button__3V9jZ\",\"img\":\"Users_img__36mqt\",\"itemsL\":\"Users_itemsL__2_IKl\",\"itemsR\":\"Users_itemsR__1mP9L\",\"text\":\"Users_text__2ulzP\",\"marg\":\"Users_marg__3SjuI\",\"button\":\"Users_button__1nFpn\",\"wraooer_button\":\"Users_wraooer_button__bSzwm\",\"texT\":\"Users_texT__ekBGZ\",\"itemsRL\":\"Users_itemsRL__LYDgc\",\"itemsRR\":\"Users_itemsRR__1LgP2\",\"status\":\"Users_status__2TpqI\",\"number_pages\":\"Users_number_pages__1QM4j\",\"numbers\":\"Users_numbers__19fat\",\"active\":\"Users_active__1QTS_\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Nav.module.css'\r\n\r\nconst Nav = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to='/Dialogs' activeClassName={s.active}>Messages</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}><a>News</a></div>\r\n        <div className={s.item}><a>Music</a></div>\r\n        <div className={s.item}><a>Settings</a></div>\r\n    </nav>\r\n}\r\n\r\nexport default Nav","export type UpdateNewMassageBodyCreatorType = ReturnType<typeof updateNewMassageBodyAC>\r\nexport type SendMessageCreatorType = ReturnType<typeof SendMessageAC>\r\n\r\nexport type newPostTextType = string\r\n\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n\r\n}\r\n\r\nexport type MessagesType = {\r\n    id: number\r\n    title: string\r\n}\r\n\r\n\r\nlet initialState: initialStateType = {\r\n    messages: [\r\n        {id: 1, title: 'hi'},\r\n        {id: 2, title: 'How is yor it kamasutra?'},\r\n        {id: 3, title: 'YoO'},\r\n        {id: 4, title: 'Сool dude'}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Petr'},\r\n        {id: 2, name: 'Sasha'},\r\n        {id: 3, name: 'Oleg'},\r\n        {id: 4, name: 'Victor'}\r\n    ],\r\n    newMessageBody: ''\r\n}\r\n\r\nexport type initialStateType = {\r\n    messages: Array<MessagesType>\r\n    dialogs: Array<DialogsType>\r\n    newMessageBody: string\r\n}\r\n\r\nconst dialogsReducer = (state: initialStateType = initialState, action: UpdateNewMassageBodyCreatorType | SendMessageCreatorType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'UPDATE-NEW-MESSAGE-BODY': {\r\n            return {...state, newMessageBody: action.body};\r\n        }\r\n        case 'SEND-MESSAGE' :\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: new Date().getTime(), title: body}],\r\n                dialogs: [...state.dialogs],\r\n                newMessageBody: ''\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const updateNewMassageBodyAC = (body: string) => {\r\n    return {\r\n        type: 'UPDATE-NEW-MESSAGE-BODY',\r\n        body\r\n    } as const\r\n}\r\n\r\nexport const SendMessageAC = () => {\r\n    return {\r\n        type: 'SEND-MESSAGE',\r\n\r\n    } as const\r\n}\r\n\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\nfunction DialigItem(props: DialigItemType) {\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={'/dealogs/' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\ntype DialigItemType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport default DialigItem","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialigItem from \"./DialogItem/DialogsItem\";\r\nimport {DialogsPropsType} from \"./Dialogs-container\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction Message(props: MessageType) {\r\n    return <div className={s.message}>{props.title}</div>\r\n}\r\n\r\ntype MessageType = {\r\n    title: string\r\n}\r\n\r\n\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n    let dialogsElement = props.dialogs.map(d => <DialigItem key={d.id} name={d.name} id={d.id}/>)\r\n    let messagesElements = props.messages.map(m => <Message key={m.id} title={m.title}/>)\r\n    let newMessageBody = props.newMessageBody\r\n    let onSendMassageClick = () => {\r\n        props.SendMessage()\r\n    }\r\n\r\n    let onNewMassageChange = (e: any) => {\r\n        let body = e.currentTarget.value\r\n        props.updateNewMassageBody(body)\r\n    }\r\n\r\n        if(props.isAuth === false){\r\n            return <Redirect to={\"/login\"}/>\r\n\r\n\r\n    }\r\n\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogs__items}>\r\n            {dialogsElement}\r\n\r\n        </div>\r\n        <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n            <div>\r\n                <textarea placeholder={'Enter something'} onChange={onNewMassageChange}\r\n                          value={newMessageBody}> </textarea>\r\n                <button onClick={onSendMassageClick}>Send</button>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n}","import React, {ComponentType} from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../components/redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype mapStatetoPropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\nlet mapStatetoPropsForRedirect = (state: AppStateType): mapStatetoPropsForRedirectType => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport function  withAythRedirect<T>(Component: ComponentType<T>){\r\n    function RedirectComponent(props:mapStatetoPropsForRedirectType) {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) {\r\n            return <Redirect to={'/login'}/>\r\n        }\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStatetoPropsForRedirect)(RedirectComponent)\r\n\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import {\r\n    DialogsType,\r\n    MessagesType,\r\n    newPostTextType,\r\n    SendMessageAC,\r\n    updateNewMassageBodyAC\r\n} from \"../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {withAythRedirect} from \"../../hoc/WithAythRedirect\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    messages:MessagesType[],\r\n    dialogs: DialogsType[],\r\n    newMessageBody:newPostTextType,\r\n    isAuth:boolean,\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    updateNewMassageBody: (body: string) => void\r\n    SendMessage: () => void,\r\n}\r\n\r\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogs : state.dialogsPage.dialogs,\r\n        messages : state.dialogsPage.messages,\r\n        newMessageBody: state.dialogsPage.newMessageBody,\r\n    }\r\n}\r\nlet AuthRedirectComponent = withAythRedirect(Dialogs)\r\n\r\nlet mapDispatchToProps = (dispatch : Dispatch)=> {\r\n    return {\r\n        updateNewMassageBody: (body: string) => {\r\n            dispatch(updateNewMassageBodyAC(body))\r\n        },\r\n\r\n        SendMessage: () => {\r\n\r\n            dispatch(SendMessageAC())\r\n        },\r\n\r\n\r\n    }\r\n}\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\n","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"4f7a90cd-f073-4cab-b304-b853b0aa67c3\"\r\n    },\r\n\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    }\r\n}","import {usersAPI} from \"../../API/Api\";\r\n\r\nexport type followCreatorType = ReturnType<typeof followSuccess>\r\nexport type unFollowCreatorType = ReturnType<typeof unFollowSuccess>\r\nexport type setUserCreatorType = ReturnType<typeof setUsers>\r\nexport type setCurrentPageAType = ReturnType<typeof setCurrentPage>\r\nexport type setTotalUsersCountAT = ReturnType<typeof setTotalUsersCount>\r\nexport type toggleIsFetchingAT = ReturnType<typeof toggleIsFetching>\r\nexport type toggleIsFollowingProgressT = ReturnType<typeof toggleIsFollowingProgress>\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    })\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    debugger\r\n    return (dispatch: any) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId));\r\n        usersAPI.follow(userId).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(followSuccess(userId))\r\n            }\r\n            dispatch(toggleIsFollowingProgress(false, userId))\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n    debugger\r\n    return (dispatch: any) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unFollowSuccess(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgress(false, userId))\r\n\r\n            })\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 200,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\n\r\n\r\nexport type followingInProgressType = {}\r\nexport type UsersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    //location: locationType\r\n    status: string\r\n    photos: photosType\r\n\r\n}\r\n\r\nexport type photosType = {\r\n    small: string\r\n    large: string\r\n}\r\n\r\nexport type locationType = {\r\n    city: string\r\n    country: string\r\n}\r\nexport type initialStateType = {\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: followingInProgressType[]\r\n}\r\n\r\ntype wrapperType = followCreatorType |\r\n    unFollowCreatorType |\r\n    setUserCreatorType |\r\n    setCurrentPageAType |\r\n    setTotalUsersCountAT |\r\n    toggleIsFetchingAT |\r\n    toggleIsFollowingProgressT\r\n\r\nconst usersReducer = (state: initialStateType = initialState, action: wrapperType) => {\r\n    switch (action.type) {\r\n        case 'FOLLOW' :\r\n            return {\r\n                ...state,\r\n                users: state.users.map((m) => {\r\n                        if (m.id === action.userId) {\r\n                            return {...m, followed: true}\r\n                        }\r\n                        return m;\r\n                    }\r\n                )\r\n            }\r\n        case 'UNFOLLOW' :\r\n            return {\r\n                ...state,\r\n                users: state.users.map((m) => {\r\n                        if (m.id === action.userId) {\r\n                            return {...m, followed: false}\r\n                        }\r\n                        return m;\r\n                    }\r\n                )\r\n            }\r\n        case 'SET-USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'SET-CURRENT-PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SET-USERS-TOTAL-COUNT': {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case 'TOGGLE-IS-FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'TOGGLE-IS-FOLLOWING-PROGRASS' :\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => !action.userId)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const followSuccess = (userId: number) => {\r\n    return {\r\n        type: 'FOLLOW',\r\n        userId,\r\n\r\n    } as const\r\n}\r\nexport const unFollowSuccess = (userId: number) => {\r\n    return {\r\n        type: 'UNFOLLOW',\r\n        userId,\r\n    } as const\r\n}\r\nexport const setUsers = (users: UsersType[]) => {\r\n    return {\r\n        type: 'SET-USERS',\r\n        users,\r\n    } as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: 'SET-CURRENT-PAGE',\r\n        currentPage\r\n    } as const\r\n}\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {\r\n        type: 'SET-USERS-TOTAL-COUNT',\r\n        totalCount\r\n    } as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: 'TOGGLE-IS-FETCHING',\r\n        isFetching\r\n    } as const\r\n}\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number) => {\r\n    return {\r\n        type: 'TOGGLE-IS-FOLLOWING-PROGRASS',\r\n        isFetching,\r\n        userId,\r\n    } as const\r\n}\r\n\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.f654bcd6.jpg\";","import React from 'react'\r\nimport s from \"./Users.module.css\";\r\nimport userImg from \"../../assets/images/c3224969bcc3648eb22ca478989fcfbb--mr-robot-robots.jpg\";\r\nimport {followingInProgressType, UsersType} from \"../redux/users-reducer\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype  UsersPropsType = {\r\n    onPageChenged: (pageNumber: number) => void,\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    users: UsersType[]\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    followingInProgress: followingInProgressType[]\r\n}\r\n\r\nexport let Users = (props: UsersPropsType) => {\r\n    let pageesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pageesCount + 1; i++) {\r\n        pages.push(i)\r\n    }\r\n    return <div className={s.wrapper}>\r\n        <ul className={s.number_pages}>\r\n            {pages.map((m, i) => {\r\n                return <li key={i} className={s.numbers}><span className={props.currentPage === m ? s.active : ''}\r\n                                                               onClick={(e) => props.onPageChenged(m)}>{m}</span></li>\r\n            })}\r\n        </ul>\r\n        {\r\n            props.users.map(u => <div className={s.container} key={u.id}>\r\n                <div className={s.itemsL}>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                        <img className={s.img} src={u.photos.small !== null ? u.photos.small : userImg} alt=\"photo\"/>\r\n                    </NavLink>\r\n                    <div className={s.wrapper_button}>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                      onClick={() => props.unfollow(u.id)} className={s.button}>Unfollow</button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                      onClick={() => props.follow(u.id)} className={s.button}>Follow</button>}\r\n                    </div>\r\n                </div>\r\n                <div className={s.itemsR}>\r\n                    <div className={s.itemsRL}>\r\n                        <div className={s.text}>{u.name}</div>\r\n                        <div className={s.status}>{u.status}</div>\r\n                    </div>\r\n                    <div className={s.itemsRR}>\r\n                        <div className={s.text}>{\"u.location.country\"}</div>\r\n                        <div className={s.texT}>{\"u.location.city\"}</div>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        }\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/load.ad2284cf.gif\";","import load from \"../../../assets/images/load.gif\";\r\n\r\nexport let Preloader = () => {\r\n return <div>\r\n     <img src={load} alt=\"loading\"/>\r\n </div>\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    UsersType,\r\n    toggleIsFollowingProgress,\r\n    followingInProgressType,\r\n    getUsers\r\n} from \"../redux/users-reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/preloader/preloader\";\r\n\r\nclass UsersContainer extends React.Component <mapPropsdispatchType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        let onPageChenged = (pageNumber: number) => {\r\n            this.props.getUsers(pageNumber, this.props.pageSize);\r\n        }\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users onPageChenged={onPageChenged}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   currentPage={this.props.currentPage}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: followingInProgressType[]\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\nexport type mapPropsdispatchType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\nexport default connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleIsFollowingProgress,\r\n        getUsers,\r\n    }\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport {Preloader} from \"../../common/preloader/preloader\";\r\n\r\ntype ProfileInfoType = {\r\n    profile: any\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoType) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.picture}>\r\n            <img src={props.profile.photos.large} alt=\"ptcture\"/>\r\n        </div>\r\n        <div>\r\n            ava + description\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport default ProfileInfo","import {newPostTextType} from \"./dialogs-reducer\";\r\nimport {usersAPI} from \"../../API/Api\";\r\n\r\n\r\nexport type AddPostActionType = ReturnType<typeof addPostActionCreator>\r\nexport type UpdateNewPostActionTYpe = ReturnType<typeof updateNewPostActionCreator>\r\nexport type setUserProfileTYpe = ReturnType<typeof setUserProfile>\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    newPostText: newPostTextType\r\n    profile: any\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    title: string\r\n    like: number\r\n}\r\n\r\n\r\n let initialState = {\r\n    posts:\r\n        [\r\n            {id: 1, title: 'hi, how are you', like: 12},\r\n            {id: 2, title: 'it`s my first post', like: 15}\r\n        ],\r\n    newPostText: 'it.comm',\r\n    profile: null\r\n}\r\n\r\n\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: AddPostActionType | UpdateNewPostActionTYpe|setUserProfileTYpe ): ProfilePageType => {\r\n    switch (action.type) {\r\n        case 'ADD-POST': {\r\n            let newPost:\r\n                PostType = {\r\n                id: new Date().getTime(),\r\n                title: action.newPostText,\r\n                like: new Date().getTime(),\r\n            };\r\n            return{...state,posts : [...state.posts, newPost],newPostText : ''};\r\n        }\r\n\r\n        case 'UPDATE-NEW-TEXT' :\r\n            return  {...state,newPostText : action.newText}\r\n\r\n        case 'SET-USER-PROFILE':\r\n            return {...state, profile: action.profile}\r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText: string) => {\r\n    return {\r\n        type: 'ADD-POST',\r\n        newPostText\r\n    } as const\r\n}\r\n\r\nexport const updateNewPostActionCreator = (newText: string) => {\r\n    return {\r\n        type: 'UPDATE-NEW-TEXT',\r\n        newText\r\n    } as const\r\n}\r\n\r\nexport const setUserProfile = (profile : any) => {\r\n    return {\r\n        type: 'SET-USER-PROFILE',\r\n        profile\r\n    } as const\r\n}\r\nexport const getUserProfile = (userId : any) => (dispatch: any) => {\r\n    usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data))\r\n    })\r\n}\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\n\r\n\r\nconst Post = (props: any) => {\r\n    return <div className={s.wrapper}>\r\n        <div className={s.item}>\r\n            <img src={'https://ru.fishki.net/picsw/112009/18/bonus/face/face_photo_032.jpg'}/>\r\n            {props.message}\r\n        </div>\r\n        <span >like {props.like}</span>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Post\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {PropsMType} from \"./MyPostsContainer\";\r\n\r\n\r\n// type MyPostsType = {\r\n//     posts: Array<PostType>\r\n//     newPostText: string\r\n//  //   dispatch: any\r\n//     updateNewPostText:(text:string)=> void\r\n//     addPost:()=> void\r\n// }\r\n\r\n\r\nconst MyPosts = (props: PropsMType) => {\r\n\r\n    let postsElement = props.posts.map((p) => <Post key={p.id} message={p.title} like={p.like}/>);\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    let onAddPost = () => {\r\n       // props.addPost()\r\n        //props.dispatch(addPostActionCreator(props.newPostText))\r\n         props.addPost(props.newPostText)\r\n\r\n    }\r\n    let onPostChange = () => {\r\n\r\n        if (newPostElement.current !== null) {\r\n            let text = newPostElement.current.value\r\n            props.onPostChange(text)\r\n\r\n        }\r\n\r\n    }\r\n    return <div>\r\n        <div>\r\n            My posts\r\n        </div>\r\n        <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\r\n        <button onClick={onAddPost}>Add post</button>\r\n        <div className={s.posts}>\r\n            {postsElement}\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport default MyPosts","import {updateNewPostActionCreator, addPostActionCreator, PostType} from \"../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n// type MyPostsContaiberType = {\r\n//     posts: Array<PostType>\r\n//     newPostText: string\r\n//     dispatch: any\r\n// }\r\n\r\n\r\n// export const MyPostsContainer = (props: MyPostsContaiberType) => {\r\n//\r\n//     // let postsElement = props.posts.map((p) => <Post key={p.id} message={p.title} like={p.like}/>);\r\n//     // let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n//\r\n//     let addPost = () => {\r\n//         props.dispatch(addPostActionCreator(props.newPostText))\r\n//     }\r\n//     let onPostChange = (text: string) => {\r\n//         //   if (newPostElement.current !== null) {\r\n//         let action = updateNewPostActionCreator(text)\r\n//         props.dispatch(action)\r\n//\r\n//         //     }\r\n//\r\n//     }\r\n//     return (<MyPosts\r\n//         updateNewPostText={onPostChange}\r\n//         addPost={addPost}\r\n//         posts={props.posts}\r\n//         newPostText={props.newPostText}/>)\r\n//\r\n// }\r\n// export default MyPostsContainer\r\n\r\ntype mapStateToPropsType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\n\r\ntype mapMDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n    onPostChange: (text: string) => void\r\n}\r\n\r\nexport type PropsMType = mapStateToPropsType & mapMDispatchToPropsType\r\n\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapMDispatchToPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        },\r\n        onPostChange: (text: string) => {\r\n            //   if (newPostElement.current !== null) {\r\n            let action = updateNewPostActionCreator(text)\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./Myposts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype ProfileType = {\r\n    profile: any\r\n}\r\n\r\nconst Profile = (props: ProfileType) => {\r\n\r\n    return <div>\r\n        <ProfileInfo profile={props.profile}/>\r\n\r\n        <MyPostsContainer/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile} from \"../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {withAythRedirect} from \"../../hoc/WithAythRedirect\";\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: any\r\n}\r\n\r\ntype mapStatePropsType = {\r\n    profile: number\r\n\r\n}\r\n\r\n\r\ntype mapDispatchPropsType = {\r\n    getUserProfile: (userId: any) => void\r\n}\r\ntype OwnPropsType = mapStatePropsType & mapDispatchPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nfunction ProfileContainer(props: PropsType) {\r\n\r\n    let userId = props.match.params.userId\r\n    if (!userId) {\r\n        userId = '2';\r\n    }\r\n    props.getUserProfile(userId)\r\n\r\n\r\n    return (\r\n        <Profile {...props} profile={props.profile}/>\r\n    )\r\n}\r\n\r\nlet AuthRedirectComponent = withAythRedirect(ProfileContainer)\r\n\r\n\r\nlet mapStatetoProps = (state: AppStateType): mapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n\r\n})\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\nexport default connect(mapStatetoProps, {\r\n    getUserProfile,\r\n})(WithUrlDataContainerComponent)","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css'\r\nimport {HeaderPropsType} from \"./HeaderComtainer\";\r\n\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n\r\n    return <header className={s.header}>\r\n\r\n        <img\r\n            src={'https://www.markakimlik.com/wp-content/uploads/2020/09/Markalasma-Surecinde-Logo-ve-Renk-Duzeni.jpg'}/>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ? props.login : <NavLink className={s.login} to={'/login'}>login</NavLink>}\r\n\r\n        </div>\r\n    </header>\r\n}\r\n","import {authAPI} from \"../../API/Api\";\r\n\r\ntype SetAuthUserDataT = ReturnType<typeof SetAuthUserData>\r\n\r\n\r\nlet initialState: initialStateType = {\r\n    userId: 1,\r\n    email: 'ailru',\r\n    login: 'free',\r\n    isAuth: false,\r\n}\r\n\r\nexport type initialStateType = {\r\n    userId: number\r\n    email: string\r\n    login: string\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nconst AuthReducer = (state: initialStateType = initialState, action: SetAuthUserDataT): initialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-AUTH-USER-DATA': {\r\n\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            };\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const SetAuthUserData = (userId: number, email: string, login: string) => {\r\n    return {\r\n        type: 'SET-AUTH-USER-DATA',\r\n        data: {\r\n            userId,\r\n            email,\r\n            login,\r\n        }\r\n    } as const\r\n}\r\nexport const getAuthUserData=() => (dispatch: any) => {\r\n    authAPI.me()\r\n        .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data\r\n            dispatch(SetAuthUserData(id, email, login))\r\n        }\r\n    })\r\n\r\n}\r\nexport default AuthReducer;","import React from 'react';\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {getAuthUserData} from \"../redux/auth-reducer\";\r\n\r\ntype mapDispatchToProps = {\r\n    getAuthUserData: () => void\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string\r\n}\r\n\r\nexport type HeaderPropsType = mapStateToPropsType & mapDispatchToProps\r\n\r\nclass HeaderContainer extends React.Component<HeaderPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getAuthUserData()\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Header {...this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAuthUserData,\r\n})(HeaderContainer);\r\n","import React from 'react';\r\n\r\nexport const Login =() =>{\r\n    return <div>\r\n        LOGIN\r\n    </div>\r\n}","import React from 'react';\nimport './App.css';\nimport Nav from \"./components/Nav/Nav\";\nimport {Route} from \"react-router-dom\";\nimport {DialogsContainer} from \"./components/Dialogs/Dialogs-container\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderComtainer\";\nimport {Login} from \"./components/Login/Login\";\n\n\nfunction App() {\n\n    return (\n        <div className=\"app-wrapper\">\n            <HeaderContainer/>\n            <div className='app-container'>\n                <Nav/>\n                <div className='app-wrapper-contant'>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userId' render={() => <ProfileContainer/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n\n\n\n\n","export type sideBarType = {}\r\n\r\nlet initialState = {\r\n\r\n}\r\n\r\nconst sidebareducer = (state: sideBarType = initialState, action: any): sideBarType => {\r\n\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebareducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebareducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport AuthReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nexport let reducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sideBar: sidebareducer,\r\n    usersPage: usersReducer,\r\n    auth: AuthReducer,\r\n});\r\nexport type AppStateType = ReturnType<typeof reducer>\r\n\r\nlet store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./components/redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>,\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2LPqS\",\"item\":\"Nav_item__2ic2h\",\"active\":\"Nav_active__22-sI\"};"],"sourceRoot":""}